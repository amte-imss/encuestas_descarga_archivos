--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: calificaciones; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA calificaciones;


ALTER SCHEMA calificaciones OWNER TO innovaedu;

--
-- Name: cert; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA cert;


ALTER SCHEMA cert OWNER TO innovaedu;

--
-- Name: departments; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA departments;


ALTER SCHEMA departments OWNER TO innovaedu;

--
-- Name: encuestas; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA encuestas;


ALTER SCHEMA encuestas OWNER TO innovaedu;

--
-- Name: estadisticas; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA estadisticas;


ALTER SCHEMA estadisticas OWNER TO innovaedu;

--
-- Name: externo; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA externo;


ALTER SCHEMA externo OWNER TO innovaedu;

--
-- Name: gestion; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA gestion;


ALTER SCHEMA gestion OWNER TO innovaedu;

--
-- Name: mesa_ayuda; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA mesa_ayuda;


ALTER SCHEMA mesa_ayuda OWNER TO innovaedu;

--
-- Name: nomina; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA nomina;


ALTER SCHEMA nomina OWNER TO innovaedu;

--
-- Name: parametrizacion; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA parametrizacion;


ALTER SCHEMA parametrizacion OWNER TO innovaedu;

--
-- Name: tutorias; Type: SCHEMA; Schema: -; Owner: innovaedu
--

CREATE SCHEMA tutorias;


ALTER SCHEMA tutorias OWNER TO innovaedu;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = calificaciones, pg_catalog;

--
-- Name: f_aprobados_no_aprobados_his(integer); Type: FUNCTION; Schema: calificaciones; Owner: postgres
--

CREATE FUNCTION f_aprobados_no_aprobados_his(integer) RETURNS TABLE(id bigint, paterno character, materno character, nombre character, alumno text, matricula character, correo_electronico character, red character, telefono1 character, telefono2 character, direccion_normativa character, unidad character, unidad2 character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, cve_cat integer, cve_depto_adscripcion character, nom_depto_adscripcion character, tipo character, caltot numeric, tstatus text, categoria character, estatus_curso numeric)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.id,
		  u1.nom_paterno, 
		  u1.nom_materno, 
		  u1.nom_nombre,
                  concat(u1.nom_nombre, ' ', u1.nom_paterno, ' ', u1.nom_materno) AS Alumno, 
                  u.username AS Matricula,  
                  u.email AS Correo_electronico,u.numred AS Red, 
                  phone1 AS telefono1,
		  phone2 AS telefono2,
		  nom_normativa AS Direccion_normativa,
		  ads.nom_depto_adscripcion AS Unidad, 
		  des_unidad_atencion AS Unidad2,
		     (CASE            WHEN d.nom_delegacion is null THEN 'SIN DELEGACIÓN'::text
			  ELSE d.nom_delegacion
	 END) AS Delegacion, 
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,
		  pre.cve_cat,
		  pre.cve_departamental as cve_depto_adscripcion,
		  pre.des_tmp_ads as nom_depto_adscripcion,
		  cg.tipo AS tipo, 
		  cg.caltot,
		
	 (CASE            WHEN co.estcert='0' and  isc.vigente = 1 THEN 'Aprobado'::text
			  WHEN co.estcert='1'  THEN 'En proceso de certificacion'::text
            ELSE 'No Aprobado'::text
	 END) AS status,
	  concat(cc.nom_nombre, ' (' , cc.des_clave, ')' ) AS categoria,
	  co.estcert AS estatus_curso

	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	     JOIN mdl_course_config co ON co.course=c.id
	     JOIN mdl_groups g ON g.courseid = c.id
	     JOIN mdl_groups_members gm ON gm.groupid = g.id
	     LEFT JOIN gestion.sgp_tab_preregistro_al pre on c.id = pre.cve_curso
        LEFT JOIN gestion.sgp_tab_usuario u1 ON pre.nom_usuario::text = u1.nom_usuario::text
        LEFT JOIN mdl_user u ON gm.userid = u.id and u.username::text = u1.nom_usuario::text
   	
	     JOIN mdl_role_assignments ra ON u.id = ra.userid
	LEFT JOIN mdl_certificate cert ON cert.course = c.id
	LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
	LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.id 
	JOIN mdl_context ctx ON ra.contextid = ctx.id AND ctx.instanceid = c.id
   	     
	     JOIN mdl_role r ON r.id = ra.roleid
	LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id 

	LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
	LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
	LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
	LEFT JOIN mdl_modules mo  ON el.module = mo.id  
	
	LEFT JOIN nomina.ssn_categoria cc ON pre.cve_cat = cc.cve_categoria
	
	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON pre.cve_departamental = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_dependencia dep ON pre.cve_departamental = dep.cve_depto_adscripcion   
	LEFT JOIN departments.ssd_cat_delegacion d ON dep.cve_delegacion = d.cve_delegacion
   
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion

	WHERE r.id=5  AND (cg.tipo='T' or cg.tipo isnull) 
	ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_aprobados_no_aprobados_his(integer) OWNER TO postgres;

--
-- Name: f_calificacion_aprobado_no_aprobado_actual(integer); Type: FUNCTION; Schema: calificaciones; Owner: postgres
--

CREATE FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) RETURNS TABLE(id bigint, paterno character, materno character, nombre character, alumno text, matricula character, correo_electronico character, red character, telefono1 character, telefono2 character, direccion_normativa character, unidad character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, cve_cat integer, cve_depto_adscripcion character, nom_depto_adscripcion character, itemname character, itemtype character, itemmodule character, cal numeric, caltot numeric, tstatus text, categoria text, estatus_curso numeric)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.id,
		  u1.nom_paterno, 
		  u1.nom_materno, 
		  u1.nom_nombre,
                  concat(u1.nom_nombre, ' ', u1.nom_paterno, ' ', u1.nom_materno) AS Alumno, 
                  u.username AS Matricula,  
                  pre.des_email_pers AS Correo_electronico,pre.desc_numred AS Red, 
		  pre.desc_teltrab AS telefono1,
		  pre.desc_telpart AS telefono2,
		  nom_normativa AS Direccion_normativa,
		  ads.nom_depto_adscripcion AS Unidad,
		    (CASE            WHEN d.nom_delegacion is null THEN 'SIN DELEGACIÓN'::text
			  ELSE d.nom_delegacion
			  END) AS Delegacion, 
			   
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,
		   pre.cve_cat,
		  pre.cve_departamental as cve_depto_adscripcion,
		  pre.des_tmp_ads as nom_depto_adscripcion,
		  gi.itemname, 
		  gi.itemtype,
	          gi.itemmodule,
	          gra.rawgrade	AS cal, 
	          gra.finalgrade AS caltot,
	        (CASE            WHEN co.estcert='0' and  isc.vigente = 1 THEN 'Aprobado'::text
			  WHEN co.estcert='1'  THEN 'En proceso de certificacion'::text
            ELSE 'No Aprobado'::text
	 END) AS status,
	  concat(cc.nom_nombre, ' (' , cc.des_clave, ')' ) AS categoria,
	   co.estcert AS estatus_curso
	 
	          
	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	JOIN mdl_course_config co ON co.course=c.id
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN gestion.sgp_tab_preregistro_al pre on c.id = pre.cve_curso
        LEFT JOIN gestion.sgp_tab_usuario u1 ON pre.nom_usuario::text = u1.nom_usuario::text
          LEFT JOIN mdl_user u ON gm.userid = u.id and u.username::text = u1.nom_usuario::text
   
	JOIN mdl_role_assignments ra ON u.id = ra.userid
   LEFT JOIN mdl_certificate cert ON cert.course = c.id
   LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
   LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.id 
	JOIN mdl_context ctx ON ra.contextid = ctx.id AND ctx.instanceid = c.id
	JOIN mdl_role r ON r.id = ra.roleid
   LEFT JOIN mdl_grade_items gi ON  gi.courseid = c.id
  LEFT JOIN mdl_grade_grades gra ON gra.userid = u.id AND gi.id = gra.itemid
   LEFT JOIN mdl_grade_categories cat ON cat.id = gi.categoryid AND cat.courseid = c.id

   LEFT JOIN nomina.ssn_categoria cc ON pre.cve_cat = cc.cve_categoria

   LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON pre.cve_departamental = ads.cve_depto_adscripcion
LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion   
LEFT JOIN departments.ssd_cat_delegacion d ON dep.cve_delegacion = d.cve_delegacion
   
   LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
   LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
   LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
   LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion

JOIN mdl_enrol en ON en.courseid = c.id 
JOIN mdl_user_enrolments ue ON ue.enrolid = en.id AND ue.userid = u.id

  WHERE r.id = 5 AND ue.status=0 AND gi.itemtype='course'
  ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_calificacion_aprobado_no_aprobado_actual(integer) OWNER TO postgres;

--
-- Name: f_calificacion_unidad_actuales(integer); Type: FUNCTION; Schema: calificaciones; Owner: postgres
--

CREATE FUNCTION f_calificacion_unidad_actuales(integer) RETURNS TABLE(id bigint, paterno character, materno character, nombre character, alumno text, matricula character, correo_electronico character, red character, telefono1 character, telefono2 character, direccion_normativa character, unidad character, unidad2 character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, cve_depto_adscripcion character, nom_depto_adscripcion character, id_cat bigint, categoryid bigint, itemname character, itemtype character, itemmodule character, agregationcoef numeric, cal numeric, caltot numeric, path character, tstatus text, categoria character)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.id,
		  u.pat AS Paterno, 
		  u.mat AS materno, 
		  u.nom AS nombre,
                  concat(u.nom, ' ', u.pat, ' ', u.mat) AS Alumno, 
                  u.username AS Matricula,  
                  u.email AS Correo_electronico,u.numred AS Red, 
		  phone1 AS telefono1,
		  phone2 AS telefono2,
		  nom_normativa AS Direccion_normativa,
		  dep.nom_dependencia AS Unidad, 
		  des_unidad_atencion AS Unidad2,
		  d.nom_delegacion AS Delegacion, 
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,
		  ads.cve_depto_adscripcion,
		  ads.nom_depto_adscripcion,
		  gi.id AS id_cat,
		  gi.categoryid,
		  gi.itemname, 
		  gi.itemtype,
	          gi.itemmodule,
	          gi.aggregationcoef,
	          gra.rawgrade	AS cal, 
	          gra.finalgrade AS caltot,
	          cat.path,
	          
	          (CASE
            WHEN isc.vigente = 1 THEN 'Aprobado'::text
          
            ELSE 'No Aprobado'::text
	 END) AS tstatus,
	 concat(des_clave, ' ', cc.nom_nombre) AS categoria
	 
	          
	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN gestion.sgp_tab_preregistro_al pre on c.id = pre.cve_curso
        LEFT JOIN gestion.sgp_tab_usuario u1 ON pre.nom_usuario::text = u1.nom_usuario::text
          LEFT JOIN mdl_user u ON gm.userid = u.id and u.username::text = u1.nom_usuario::text
         
	JOIN mdl_role_assignments ra ON u.id = ra.userid
   LEFT JOIN mdl_certificate cert ON cert.course = c.id
   LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.certificateid 
	JOIN mdl_context ctx ON ra.contextid = ctx.id AND ctx.instanceid = c.id
	JOIN mdl_role r ON r.id = ra.roleid
	
   LEFT JOIN mdl_grade_grades gra ON gra.userid = u.id
   LEFT JOIN mdl_grade_items gi ON gi.id = gra.itemid AND gi.courseid = c.id
   LEFT JOIN mdl_grade_categories cat ON cat.id = gi.categoryid AND cat.courseid = c.id

   LEFT JOIN nomina.ssn_categoria cc ON pre.cve_cat = cc.cve_categoria

   LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental = ads.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
   LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
   LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
   LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
   LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
  WHERE r.id = 5 
	ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_calificacion_unidad_actuales(integer) OWNER TO postgres;

--
-- Name: f_calificaciones(integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones(integer) RETURNS TABLE(id bigint, alumno text, matricula character, correo_electronico character, red character, telefono character, direccion_normativa character, unidad character, unidad2 character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, tipo character, caltot numeric, tstatus text)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.id,
                  concat(u.nom, ' ', u.pat, ' ', u.mat) AS Alumno, 
                  u.username AS Matricula,  
                  u.email AS Correo_electronico,u.numred AS Red, 
		  phone2 AS telefono,
		  nom_normativa AS Direccion_normativa,
		  dep.nom_dependencia AS Unidad, 
		  des_unidad_atencion AS Unidad2,
		  d.nom_delegacion AS Delegacion, 
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,cg.tipo,
		  cg.caltot,
	 (CASE
            WHEN isc.vigente = 1 THEN 'Aprobado'::text
          
            ELSE 'No Aprobado'::text
	 END) AS status

	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	 
	     JOIN mdl_groups g ON g.courseid = c.id
	     JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id 
	     JOIN mdl_role_assignments ra ON u.id = ra.userid
	LEFT JOIN mdl_certificate cert ON cert.course=c.id
	LEFT JOIN mdl_certificate_issues iss ON iss.userid=u.id and cert.id=iss.certificateid
LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.certificateid 
   	     JOIN mdl_context ctx ON ra.contextid = ctx.id and ctx.instanceid=c.id
	     JOIN mdl_role r ON r.id = ra.roleid
	LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id

	LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
	LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
	LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
	LEFT JOIN mdl_modules mo  ON el.module = mo.id  
	
	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	WHERE r.id=5
	ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_calificaciones(integer) OWNER TO innovaedu;

--
-- Name: f_calificaciones_aprobadas(integer); Type: FUNCTION; Schema: calificaciones; Owner: postgres
--

CREATE FUNCTION f_calificaciones_aprobadas(integer) RETURNS TABLE(cve_del integer, nom_delegacion text, cve_matricula text, cve_usuario bigint, desc_nombrecompleto text, cve_grupo bigint, desc_grupo text, aprobado text, desc_email text, phone1 text, phone2 text, numred text, cve_categoria integer, nom_categoria text, cve_depto_adscripcion text, nom_depto_adscripcion text, cve_curso bigint)
    LANGUAGE sql
    AS $_$
 SELECT u.del,d.nom_delegacion, u.username AS cve_matricula, u.id AS cve_usuario,
    concat(u.nom, ' ', u.pat, ' ', u.mat) AS desc_nombrecompleto, 
    g.id AS cve_grupo, g.name AS nombre_grupo, 
        CASE
            WHEN isc.vigente = 1 THEN 'SI'::text
            WHEN isc.vigente = 0 THEN 'NO'::text
            ELSE 'NO'::text
        END AS aprobado,
    u.email::text AS desc_email,
    u.phone1, U.phone2, u.numred, pre.cve_cat, ((cat.nom_nombre::text || '('::text) || cat.des_clave::text) || ')'::text AS nom_categoria, 
      ad.cve_depto_adscripcion::text, ad.nom_depto_adscripcion::text,  c.id as cve_curso 
   FROM (SELECT * FROM mdl_course WHERE id=$1) c  
   LEFT JOIN mdl_groups g ON g.courseid = c.id
   LEFT JOIN mdl_groups_members gm ON gm.groupid = g.id
   LEFT JOIN gestion.sgp_tab_preregistro_al pre on c.id = pre.cve_curso
   LEFT JOIN gestion.sgp_tab_usuario u1 ON pre.nom_usuario::text = u1.nom_usuario::text
   LEFT JOIN mdl_user u ON gm.userid = u.id and u.username::text = u1.nom_usuario::text
   LEFT JOIN mdl_context ctx ON  ctx.instanceid=c.id
   LEFT JOIN mdl_role_assignments ra ON ctx.id = ra.contextid and u.id = ra.userid
   LEFT JOIN mdl_certificate cert ON cert.course=c.id
   LEFT JOIN mdl_certificate_issues iss ON iss.userid=u.id and cert.id=iss.certificateid
   LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.certificateid 
   LEFT JOIN departments.ssd_cat_depto_adscripcion ad ON u.cve_departamental = ad.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
   LEFT JOIN nomina.ssn_categoria cat ON pre.cve_cat = cat.cve_categoria
   WHERE ra.roleid=5 AND ctx.contextlevel = 50
  ORDER BY cve_usuario
$_$;


ALTER FUNCTION calificaciones.f_calificaciones_aprobadas(integer) OWNER TO postgres;

--
-- Name: f_calificaciones_aprobadas_hist(integer); Type: FUNCTION; Schema: calificaciones; Owner: postgres
--

CREATE FUNCTION f_calificaciones_aprobadas_hist(integer) RETURNS TABLE(cve_del integer, nom_delegacion text, cve_matricula text, cve_usuario bigint, desc_nombrecompleto text, cve_grupo bigint, desc_grupo text, calporcentual numeric, aprobado text, desc_email text, phone1 text, phone2 text, numred text, cve_categoria integer, nom_categoria text, cve_depto_adscripcion text, cve_curso bigint)
    LANGUAGE sql
    AS $_$
 SELECT max(u.del), max(d.nom_delegacion), u.username AS cve_matricula, u.id AS cve_usuario,
    max(concat(u.nom, ' ', u.pat, ' ', u.mat)) AS desc_nombrecompleto, 
    g.id AS cve_grupo, max(g.name) AS nombre_grupo, max(cg.caltot), 
        CASE
            WHEN max(cg.caltot) <= 5.0 THEN 'NO APROBADO'::text
            WHEN max(cg.caltot) > 5.0 THEN 'APROBADO'::text
            ELSE 'NO APROBADO'::text
        END AS aprobado,
    max(u.email::text) AS desc_email,
    max(u.phone1), max(u.phone2), max(u.numred), max(pre.cve_cat), max(((cat.nom_nombre::text || '('::text) || cat.des_clave::text) || ')'::text) AS nom_categoria, 
      max(ad.cve_depto_adscripcion::text), max(c.id) as cve_curso
   FROM (SELECT * FROM mdl_course WHERE id=$1) c  
   LEFT JOIN mdl_groups g ON g.courseid = c.id
   LEFT JOIN mdl_groups_members gm ON gm.groupid = g.id
   LEFT JOIN gestion.sgp_tab_preregistro_al pre on c.id = pre.cve_curso
   LEFT JOIN gestion.sgp_tab_usuario u1 ON pre.nom_usuario::text = u1.nom_usuario::text
   LEFT JOIN mdl_user u ON gm.userid = u.id and u.username::text = u1.nom_usuario::text
   LEFT JOIN mdl_role_assignments ra ON u.id = ra.userid
   LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id and cg.idcurso=c.id
   LEFT JOIN departments.ssd_cat_depto_adscripcion ad ON u.cve_departamental = ad.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
   LEFT JOIN nomina.ssn_categoria cat ON pre.cve_cat = cat.cve_categoria
   WHERE ra.roleid=5	
  GROUP BY u.id, g.id  
  ORDER BY cve_usuario
$_$;


ALTER FUNCTION calificaciones.f_calificaciones_aprobadas_hist(integer) OWNER TO postgres;

--
-- Name: f_calificaciones_moduni(integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_moduni(integer) RETURNS TABLE(id bigint, alumno text, matricula character, correo_electronico character, red character, telefono character, direccion_normativa character, unidad character, unidad2 character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, idcurso integer, idgmoduni integer, nomelem character, nummoduni integer, numuni integer, tipoelemento integer, tiporecurso character, porcentaje numeric, catrec smallint, trabfin integer, tipo character, caltot numeric)
    LANGUAGE sql
    AS $_$
 SELECT  u.id,
                  concat(u.nom, ' ', u.pat, ' ', u.mat) AS Alumno, 
                  u.username AS Matricula,  
                  u.email AS Correo_electronico,u.numred AS Red, 
		  phone2 AS telefono,
		  nom_normativa AS Direccion_normativa,
		  dep.nom_dependencia AS Unidad, 
		  des_unidad_atencion AS Unidad2,
		  d.nom_delegacion AS Delegacion, 
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,
		  el.idcurso, 
		  el.idgmoduni, 
		  el.nomelem, 
		  mod.moduni AS nummoduni, 
		  un.numuni, 
		  mod.tipopc AS tipoelemento, 
		  f_get_tipo_recurso(mo.id::integer) AS tiporecurso, 
		  el.porcentaje, 
		  el.catrec, 
		  mod.trabfin, 
		  cg.tipo, 
		  cg.caltot

 
   FROM (SELECT * FROM mdl_course WHERE id=$1) c
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id

   LEFT JOIN mdl_user u ON gm.userid = u.id

	JOIN mdl_role_assignments ra ON u.id = ra.userid

   LEFT JOIN mdl_certificate cert ON cert.course = c.id
   LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.certificateid 
	JOIN mdl_context ctx ON ra.contextid = ctx.id AND ctx.instanceid = c.id
	JOIN mdl_role r ON r.id = ra.roleid

   LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid = u.id AND cg.idcurso = c.id
   LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni = cg.idmod
   LEFT JOIN calificaciones.mdl_unidades un ON el.idgmoduni = un.id
   LEFT JOIN calificaciones.mdl_moduni mod ON un.idmoduni = mod.id
   LEFT JOIN mdl_modules mo ON el.module = mo.id

   LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental = ads.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
   LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
   LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
   LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
   LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
   WHERE r.id=5
   ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_calificaciones_moduni(integer) OWNER TO innovaedu;

--
-- Name: f_cursos_usuarios(bigint); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_cursos_usuarios(bigint) RETURNS TABLE(id bigint, fullname character, shortname character, startdatepre date, lastdatepre date, cuotacurso integer, preact numeric, achsel numeric, category bigint, startdate bigint)
    LANGUAGE sql
    AS $_$
SELECT distinct c.id ,
       c.fullname ,
       c.shortname ,
       cc.startdatepre ,
       cc.lastdatepre ,	
       cuotacurso , 
       cc.preact ,
       cc.achsel ,
       c.category ,
       c.startdate 

 FROM public.mdl_course c
LEFT JOIN public.mdl_course_config cc on cc.course=c.id 
JOIN mdl_course_categories cat on c.category= cat.id and not (concat('/', cat.path , '/') like '%/1/%' or concat('/', cat.path , '/') like '%/81/%')
JOIN public.mdl_context ctx ON ctx.instanceid = c.id
JOIN public.mdl_role_assignments ra ON ra.contextid = ctx.id
JOIN public.mdl_role r ON r.id = ra.roleid
where  c.visible=1 and ra.userid = $1
ORDER BY fullname

$_$;


ALTER FUNCTION calificaciones.f_cursos_usuarios(bigint) OWNER TO innovaedu;

--
-- Name: f_datos_generales(integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_datos_generales(integer) RETURNS TABLE(id bigint, alumno text, matricula character, correo_electronico character, red character, telefono character, direccion_normativa character, unidad character, unidad2 character, delegacion character, nivel_de_atencion character, curso text, grupo character, rolename character, tstatus text)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.id,
                  concat(u.nom, ' ', u.pat, ' ', u.mat) AS Alumno, 
                  u.username AS Matricula,  
                  u.email AS Correo_electronico,u.numred AS Red, 
		  phone2 AS telefono,
		  nom_normativa AS Direccion_normativa,
		  dep.nom_dependencia AS Unidad, 
		  des_unidad_atencion AS Unidad2,
		  d.nom_delegacion AS Delegacion, 
	          niv.des_nivel_atencion AS Nivel_de_atencion,
      		  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
      		  g.name AS Grupo,
		  r.name as rolename,
	 (CASE
            WHEN iss.vigente = 1 THEN 'Aprobado'::text
          
            ELSE 'No Aprobado'::text
	 END) AS status

	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	 
	     JOIN mdl_groups g ON g.courseid = c.id
	     JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id 
	     JOIN mdl_role_assignments ra ON u.id = ra.userid
	LEFT JOIN mdl_certificate cert ON cert.course=c.id
	LEFT JOIN mdl_certificate_issues iss ON iss.userid=u.id and cert.id=iss.certificateid
   	     JOIN mdl_context ctx ON ra.contextid = ctx.id and ctx.instanceid=c.id
	     JOIN mdl_role r ON r.id = ra.roleid
	LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id

	LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
	LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
	LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
	LEFT JOIN mdl_modules mo  ON el.module = mo.id  
	
	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	WHERE r.id=5
	ORDER BY  Alumno
$_$;


ALTER FUNCTION calificaciones.f_datos_generales(integer) OWNER TO innovaedu;

--
-- Name: f_estadistica_curso(integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_estadistica_curso(integer) RETURNS TABLE(delegacion character, matricula character, ap_paterno character, ap_materno character, nombre character, nombre_completo character, correo_electronico character, clave_adscripcion character, categoria character, clave_categoria character, tipo_categoria character, numero_red character, telefono_laboral character, telefono_particular character, curso character, grupo character, calificacion numeric, estado_certificado numeric, certificado_vigente integer)
    LANGUAGE sql
    AS $_$
    SELECT k.nom_delegacion, e.username, e.pat, e.mat, e.nom, 
	   CONCAT(e.nom,' ',e.pat,' ',e.mat) nombre_completo,
	   i.des_email_pers, i.cve_departamental, l.nom_nombre, 
	   l.des_clave, m.nom_nombre, i.desc_numred, i.desc_teltrab,
	   i.desc_telpart, a.shortname, f.name, o.finalgrade, 
	   COALESCE(b.estcert,0) estcert, COALESCE(r.vigente,0) vigente

    FROM public.mdl_course a
    JOIN public.mdl_course_config b ON b.course = a.id AND a.id = $1
    JOIN public.mdl_context c ON c.instanceid = a.id AND c.contextlevel = 50
    JOIN public.mdl_role_assignments d ON d.contextid = c.id AND d.roleid = 5
    JOIN public.mdl_user e ON e.id = d.userid
    JOIN public.mdl_groups f ON f.courseid = a.id
    JOIN public.mdl_groups_members g ON g.groupid = f.id AND g.userid = e.id
    LEFT JOIN gestion.sgp_tab_usuario h ON h.nom_usuario = e.username
    LEFT JOIN gestion.sgp_tab_preregistro_al i ON i.nom_usuario = h.nom_usuario AND i.cve_curso = a.id
    LEFT JOIN departments.ssd_cat_dependencia j ON j.cve_depto_adscripcion = i.cve_departamental
    LEFT JOIN departments.ssd_cat_delegacion k ON k.cve_delegacion = j.cve_delegacion
    LEFT JOIN nomina.ssn_categoria l ON l.cve_categoria = i.cve_cat
    LEFT JOIN nomina.ssn_tipo_catgoria m ON m.cve_tipo_categoria = l.cve_tipo_categoria
    LEFT JOIN public.mdl_grade_items n ON n.courseid = a.id AND n.itemtype = 'course'
    LEFT JOIN public.mdl_grade_grades o ON o.itemid = n.id AND o.userid = e.id
    LEFT JOIN mdl_certificate p ON p.course = a.id
    LEFT JOIN mdl_certificate_issues q ON q.certificateid = p.id AND q.userid = e.id
    LEFT JOIN cert.ssc_tab_cert_issues_conf r ON r.cert_issues_id = q.id
$_$;


ALTER FUNCTION calificaciones.f_estadistica_curso(integer) OWNER TO innovaedu;

--
-- Name: f_lista_cargo(integer, character); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_lista_cargo(integer, character) RETURNS TABLE(username character, nombret text, roleid bigint, iduser bigint, idgpo bigint, name character)
    LANGUAGE sql
    AS $_$

select u.username,(CASE when ut.esp>0 then concat(esp.abrev, ' ', u.firstname, ' ', u.lastname)
			 when ut.esp=0 then  concat(car.abrev, ' ',u.firstname, ' ', u.lastname)
			 else concat(u.firstname, ' ', u.lastname)
			 end 
			 )  AS  nombret ,ra.roleid,u.id as iduser,g.id as idgpo,g.name 


 from mdl_groups_members gm1 
    join mdl_groups g on g.id=gm1.groupid
    JOIN mdl_course c on c.id= g.courseid
    JOIN public.mdl_context ctx ON ctx.instanceid = c.id and ctx.contextlevel=50 
    JOIN mdl_user u on gm1.userid=u.id
    JOIN public.mdl_role_assignments ra ON ra.contextid = ctx.id and ra.userid=u.id and ra.roleid in(4,14,18)

    left join tutorias.mdl_usertutor ut on ut.id_curso=c.id and ut.iduser=u.id
	left join tutorias.mdl_carreras car on car.id= ut.licenciatura
	left join tutorias.mdl_especialidades esp on esp.id=ut.esp

where  g.courseid=$1 AND g.name=$2

$_$;


ALTER FUNCTION calificaciones.f_lista_cargo(integer, character) OWNER TO innovaedu;

--
-- Name: f_lista_cargo_ads(integer, integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_lista_cargo_ads(integer, integer) RETURNS TABLE(username character, nombre text, adscripcion text, del character, numred character)
    LANGUAGE sql
    AS $_$

select DISTINCT u.username,u.firstname || ' ' || u.lastname as nombrealu , 

	CASE
            WHEN pre.cve_departamental IS NOT NULL THEN 
            CASE
                WHEN ads.nom_depto_adscripcion IS NOT NULL THEN pg_catalog.concat(ads.nom_depto_adscripcion, ' - ', dep.nom_dependencia, ' (', pre.cve_departamental, ')')
                ELSE ' '::text
            END
            ELSE ' '::text
        END AS adsarea, del.nom_delegacion as del, pre.desc_numred as numred

from mdl_user u
 join mdl_role_assignments ra on  ra.userid = u.id 
 JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid AND tr.ind_tipo=3
 JOIN mdl_role r ON r.id = ra.roleid
 join mdl_context ctx on ctx.id=ra.contextid AND ctx.contextlevel = 50
 JOIN mdl_groups_members gm ON gm.userid=u.id 
 join mdl_groups g on g.id= gm.groupid 
JOIN mdl_course c on c.id= g.courseid and ctx.instanceid = c.id
LEFT JOIN gestion.sgp_tab_usuario tabu ON tabu.nom_usuario = u.username
LEFT JOIN gestion.sgp_tab_preregistro_al pre ON pre.nom_usuario = tabu.nom_usuario  AND pre.cve_curso = c.id
LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ads.cve_depto_adscripcion = pre.cve_departamental
LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion   
LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_delegacion = del.cve_delegacion
LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
where g.courseid=$1 and g.id=$2 


$_$;


ALTER FUNCTION calificaciones.f_lista_cargo_ads(integer, integer) OWNER TO innovaedu;

--
-- Name: f_lista_cargo_tutor(integer, integer); Type: FUNCTION; Schema: calificaciones; Owner: innovaedu
--

CREATE FUNCTION f_lista_cargo_tutor(integer, integer) RETURNS TABLE(username character, nombret text, email character, titular integer, name character, iduserexp integer)
    LANGUAGE sql
    AS $_$

select u.username,
(CASE when ut.esp>0 then concat(esp.abrev, ' ', u.firstname, ' ', u.lastname)
			 when ut.esp=0 then  concat(car.abrev, ' ',u.firstname, ' ', u.lastname)
			 else concat(u.firstname, ' ', u.lastname)
			 end 
			 )  AS nombret,
u.email,exp.role as titular,r.name,exp.id as iduserexp  
from tutorias.mdl_userexp exp
left join mdl_user u on exp.userid=u.id 
left join mdl_course c on exp.cursoid=c.id 
left join mdl_groups g on exp.grupoid=g.id 
left join tutorias.mdl_usertutor ut on ut.id_curso=c.id and ut.iduser=exp.userid
left join tutorias.mdl_carreras car on car.id= ut.licenciatura
left join tutorias.mdl_especialidades esp on esp.id=ut.esp
  JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = exp.role
   JOIN mdl_role r ON r.id = tr.cve_role and tr.ind_tipo=2

where exp.cursoid=$1 and g.id=$2 
order by tr.jerarquia

$_$;


ALTER FUNCTION calificaciones.f_lista_cargo_tutor(integer, integer) OWNER TO innovaedu;

SET search_path = cert, pg_catalog;

--
-- Name: aux_mayor_que(numeric, numeric); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION aux_mayor_que(valor1 numeric, valor2 numeric) RETURNS numeric
    LANGUAGE plpgsql IMMUTABLE SECURITY DEFINER COST 10
    AS $$
DECLARE
intValor integer;
BEGIN
intValor := 0;
IF valor1 >= valor2 
THEN intValor:=1;
END IF;
RETURN intValor;
END;
$$;


ALTER FUNCTION cert.aux_mayor_que(valor1 numeric, valor2 numeric) OWNER TO innovaedu;

--
-- Name: f_calificaciones_act(integer, character); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_act(integer, character) RETURNS TABLE(matricula character, grademin numeric, finalgrade numeric)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT   u.username AS Matricula,
		gi.grademin,
		  gra.finalgrade
	 
	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id
	LEFT JOIN mdl_grade_items gi ON gi.courseid = c.id
	LEFT JOIN mdl_grade_grades gra ON gra.userid = u.id AND gi.id = gra.itemid

   LEFT JOIN mdl_grade_categories cat ON cat.id = gi.categoryid AND cat.courseid = c.id


  WHERE u.username=$2 AND  gi.itemtype='course'
$_$;


ALTER FUNCTION cert.f_calificaciones_act(integer, character) OWNER TO innovaedu;

--
-- Name: f_calificaciones_his(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_his(integer) RETURNS TABLE(usuario bigint, matricula character, alumno text, roleid bigint, calfin numeric, rol character)
    LANGUAGE sql
    AS $_$


SELECT  DISTINCT  u.id as usuario, u.username AS Matricula, concat(u.nom, ' ', u.pat, ' ', u.mat) as alumno, r.id as roleid ,
                  cg.caltot as calfin, r.name as rol

FROM (SELECT * FROM mdl_course WHERE id=$1) c 
JOIN mdl_groups g ON g.courseid = c.id
JOIN mdl_groups_members gm ON gm.groupid = g.id
LEFT JOIN mdl_user u ON gm.userid = u.id 
JOIN mdl_role_assignments ra ON u.id = ra.userid 
JOIN mdl_role r ON r.id = ra.roleid
	
LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id 

LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
LEFT JOIN mdl_modules mo  ON el.module = mo.id  
WHERE  tipo='T'  
	
	$_$;


ALTER FUNCTION cert.f_calificaciones_his(integer) OWNER TO innovaedu;

--
-- Name: f_calificaciones_his(integer, character); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_his(integer, character) RETURNS TABLE(matricula character, caltot numeric)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT  u.username AS Matricula,  
                   
		  cg.caltot
		  FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	 JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id 
	
	LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id 

	LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
	LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
	LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
	LEFT JOIN mdl_modules mo  ON el.module = mo.id  


	WHERE  tipo='T'  AND  u.username=$2
$_$;


ALTER FUNCTION cert.f_calificaciones_his(integer, character) OWNER TO innovaedu;

--
-- Name: f_calificaciones_his_masiva(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_his_masiva(integer) RETURNS TABLE(usuario bigint, matricula character, alumno text, roleid bigint, calfin numeric, rol character, calfin_base numeric, aprobados numeric)
    LANGUAGE sql
    AS $_$


SELECT  L.usuario, L.Matricula,L.alumno, L.roleid ,
                  L.calfin, L.rol, L.calfin_base,  sum(aprobado)aprobado FROM(
select distinct n.usuario, n.Matricula,n.alumno, n.roleid ,
                  n.calfin, n.rol, n.calfin_base,  sum(cert.aux_mayor_que(n.finalcal, n.grademin)) as aprobado, n.finalcal,n.itemname


                   from(
SELECT  DISTINCT  u.id as usuario, u.username AS Matricula, concat(u.nom, ' ', u.pat, ' ', u.mat) as alumno, r.id as roleid ,
                  cg.caltot as calfin, r.name as rol, cg.caltot * 10 as calfin_base ,a.grademin, a.grademax ,ca.finalcal,i.itemname
                  

FROM (SELECT* FROM mdl_course c WHERE id=$1) c
JOIN mdl_groups g ON g.courseid = c.id
JOIN mdl_groups_members gm ON gm.groupid = g.id
LEFT JOIN mdl_user u ON gm.userid = u.id 
JOIN mdl_role_assignments ra ON u.id = ra.userid 
JOIN mdl_role r ON r.id = ra.roleid
JOIN mdl_course_modules m on m.course=c.id and m.module=18  	
LEFT JOIN  mdl_course_modules_availability a ON a.coursemoduleid=m.id
JOIN mdl_grade_items i ON a.gradeitemid=i.id
 left join mdl_grade_grades gg on gg.itemid=a.gradeitemid

LEFT JOIN  calificaciones.mdl_caltotalgral  cg ON cg.userid=u.id AND cg.idcurso=c.id and cg.tipo='T'

--LEFT JOIN  calificaciones.mdl_elementoscal  el ON el.idcurso=cg.idcurso 
   JOIN calificaciones.mdl_calificaciones  ca on gg.id=ca.idgrade and ca.userid=gg.userid AND cg.userid=ca.userid
  
 LEFT JOIN mdl_certificate cert ON cert.course = m.course
 LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.userid=u.id and isc.certificateid=cert.id
	
WHERE   isc.certificateid isnull and r.id=5 )n 
group by  n.usuario, n.Matricula,n.alumno, n.roleid,n.calfin, n.rol, n.calfin_base, n.finalcal, n.itemname order by alumno
)L group by   l.usuario, l.Matricula,l.alumno, l.roleid,l.calfin, l.rol, l.calfin_base 
;
	
	$_$;


ALTER FUNCTION cert.f_calificaciones_his_masiva(integer) OWNER TO innovaedu;

--
-- Name: f_calificaciones_his_masiva1(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_calificaciones_his_masiva1(integer) RETURNS TABLE(usuario bigint, matricula character, alumno text, roleid bigint, calfin numeric, rol character, calfin_base numeric, aprobados numeric)
    LANGUAGE sql
    AS $_$

select distinct n.usuario, n.Matricula,n.alumno, n.roleid ,
                  n.calfin, n.rol, n.calfin_base,  sum(cert.aux_mayor_que(n.calfin_base, n.grademin)) as aprobado


                   from(
SELECT  DISTINCT  u.id as usuario, u.username AS Matricula, concat(u.nom, ' ', u.pat, ' ', u.mat) as alumno, r.id as roleid ,
                  cg.caltot as calfin, r.name as rol, cg.caltot * 10 as calfin_base ,a.grademin, a.grademax
                  

FROM (SELECT * FROM mdl_course WHERE id=$1) c 
JOIN mdl_groups g ON g.courseid = c.id
JOIN mdl_groups_members gm ON gm.groupid = g.id
LEFT JOIN mdl_user u ON gm.userid = u.id 
JOIN mdl_role_assignments ra ON u.id = ra.userid 
JOIN mdl_role r ON r.id = ra.roleid
JOIN mdl_course_modules m on m.course=c.id and m.module=18  	
LEFT JOIN  mdl_course_modules_availability a ON a.coursemoduleid=m.id
JOIN mdl_grade_items i ON a.gradeitemid=i.id
	
LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=u.id AND cg.idcurso=c.id and cg.tipo='T'

LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod and el.instance=i.iteminstance
LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
LEFT JOIN mdl_modules mo  ON el.module = mo.id  
 LEFT JOIN mdl_certificate cert ON cert.course = m.course
 LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.userid=u.id and isc.certificateid=cert.id
	
WHERE   isc.certificateid isnull and r.id=5)n where calfin_base>=n.grademin
group by  n.usuario, n.Matricula,n.alumno, n.roleid,n.calfin, n.rol, n.calfin_base order by alumno;
	$_$;


ALTER FUNCTION cert.f_calificaciones_his_masiva1(integer) OWNER TO innovaedu;

--
-- Name: f_certificados_vigentes(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_certificados_vigentes(integer) RETURNS TABLE(matricula character, id bigint, alumno text, curso text, code character, rolname character, id_cert bigint, vigente integer, grademin numeric, finalgrade numeric, fecha bigint)
    LANGUAGE sql
    AS $_$
 SELECT u.username as Matricula, u.id,  concat(u.firstname, ' ', u.lastname) AS Alumno, 
	concat(cur.fullname, ' (', cur.shortname, ') ') AS Curso, iss.code,
	r.name as rolename,
	iss.id as id_cert,
	issc.vigente,
	gi.grademin,
	gra.finalgrade,
	iss.timecreated AS fecha


	FROM (SELECT id, fullname, shortname FROM mdl_course WHERE id=$1) cur 
								
	LEFT JOIN mdl_certificate c ON c.course=cur.id 
	LEFT JOIN mdl_certificate_issues iss ON c.id=iss.certificateid 
	LEFT JOIN cert.ssc_tab_cert_issues_conf issc ON iss.id=issc.cert_issues_id 
	LEFT JOIN mdl_role r on issc.roleid=r.id 
	LEFT JOIN mdl_user u ON issc.userid=u.id 
	LEFT JOIN mdl_grade_items gi ON  gi.courseid = cur.id
	LEFT JOIN mdl_grade_grades gra ON gra.userid = u.id AND gi.id = gra.itemid 
	LEFT JOIN mdl_grade_categories cat ON cat.id = gi.categoryid AND cat.courseid = c.id
	WHERE gi.itemtype='course' AND issc.vigente=1
	ORDER BY  Alumno
	

	$_$;


ALTER FUNCTION cert.f_certificados_vigentes(integer) OWNER TO innovaedu;

--
-- Name: f_certificar(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_certificar(integer) RETURNS TABLE(usuario bigint, matricula character, alumno text, aprobado numeric, calfin numeric, roleid bigint, rol character)
    LANGUAGE sql
    AS $_$

Select  distinct  usuario,u.username AS Matricula, concat(u.nom, ' ', u.pat, ' ', u.mat), aprobado,  g2.finalgrade, r.id as roleid, r.name from

(SELECT g.userid usuario, sum(cert.aux_mayor_que(g.finalgrade, a.grademin)) as aprobado,
 count(*) as totales

 FROM (SELECT * FROM 
		 mdl_course_modules WHERE course=$1 and module=18) m  	
		 LEFT JOIN  mdl_course_modules_availability a ON 
		 a.coursemoduleid=m.id
		 JOIN mdl_grade_items i ON a.gradeitemid=i.id
		 JOIN mdl_grade_grades g ON i.id = g.itemid
		 LEFT JOIN mdl_certificate cert ON cert.course = m.course
		 LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.userid=g.userid and isc.certificateid=cert.id
		 where isc.certificateid isnull
group by g.userid
) t
left join mdl_user as u on u.id=t.usuario
JOIN mdl_role_assignments ra ON u.id = ra.userid 
JOIN mdl_role r ON r.id = ra.roleid

left join   mdl_grade_grades as g2 on g2.userid=u.id  
left join mdl_grade_items i2 on i2.id = g2.itemid
left join mdl_enrol en on en.courseid=i2.courseid
join mdl_user_enrolments ue on ue.enrolid=en.id and ue.userid=u.id


where i2.courseid=$1 and itemtype='course' and r.id=5 

$_$;


ALTER FUNCTION cert.f_certificar(integer) OWNER TO innovaedu;

--
-- Name: f_certificar_tutor(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_certificar_tutor(integer) RETURNS TABLE(usuario integer, matricula character, alumno text, roleid bigint, rol character)
    LANGUAGE sql
    AS $_$

select t.userid, t.matricula,t.alumno,t.roleid,t.name from (
Select  distinct exp.userid,u.username AS Matricula, concat(u.nom, ' ', u.pat, ' ', u.mat)alumno, ue.status  ,r.id as roleid, r.name, (CASE
			   WHEN isc.vigente = 1 THEN '1'::text
          
			   ELSE '0'::text
			   END) AS estatus, tip.jerarquia
 from

( SELECT * FROM mdl_course WHERE id=$1) c 
	JOIN mdl_course_config co ON co.course=c.id
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id
	 
	
	LEFT JOIN mdl_certificate cert ON cert.course = c.id
	LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
	LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.id

	LEFT JOIN tutorias.mdl_userexp exp on c.id = exp.cursoid and u.id=exp.userid 
	LEFT JOIN parametrizacion.ssp_tipo_roles tip ON exp.role=tip.cve_role
	 JOIN mdl_role r ON r.id=exp.role
	left join mdl_enrol en on en.courseid=c.id
	join mdl_user_enrolments ue on ue.enrolid=en.id and ue.userid=exp.userid
	order by tip.jerarquia) t

	where estatus='0' and status=0

	
$_$;


ALTER FUNCTION cert.f_certificar_tutor(integer) OWNER TO innovaedu;

--
-- Name: f_modulo(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_modulo(integer) RETURNS TABLE(course bigint, gradeitemid bigint, itemname character, itemtype character, itemmodule character, grademin numeric, grademax numeric, sortorder bigint)
    LANGUAGE sql
    AS $_$

SELECT DISTINCT course,a.gradeitemid, i.itemname, i.itemtype,
		 i.itemmodule,a.grademin, a.grademax,i.sortorder FROM (SELECT * FROM 
		 mdl_course_modules WHERE course=$1 and module=18) m  	
		 LEFT JOIN  mdl_course_modules_availability a ON 
		 a.coursemoduleid=m.id
		 JOIN mdl_grade_items i ON a.gradeitemid=i.id
		 ORDER BY  i.sortorder


$_$;


ALTER FUNCTION cert.f_modulo(integer) OWNER TO innovaedu;

--
-- Name: f_por_certificar(integer); Type: FUNCTION; Schema: cert; Owner: innovaedu
--

CREATE FUNCTION f_por_certificar(integer) RETURNS TABLE(matricula character, id bigint, alumno text, curso text, code character, grupo character, rolname character, rolname_exp character, rolexp integer, vigente integer, estatus text, grademin numeric, finalgrade numeric, estatus_curso numeric)
    LANGUAGE sql
    AS $_$
SELECT  DISTINCT   u.username AS Matricula, u.id,

			(CASE when max(ut.esp)>0 then concat(max(esp.abrev), ' ', u.nom, ' ', u.pat, ' ', u.mat)
			 when max(ut.esp)=0 then  concat(max(car.abrev), ' ', u.nom, ' ', u.pat, ' ', u.mat)
			 else concat(u.nom, ' ', u.pat, ' ', u.mat)
			 end 
			 )  AS Alumno, 

                  concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
                  iss.code,
      		  g.name AS Grupo,
		  r.name as rolename,
		  r2.name as rolname_exp,
		  exp.role AS rolexp,
		  isc.vigente,

		  	  (CASE
			   WHEN isc.vigente = 1 THEN '1'::text
          
			   ELSE '0'::text
			   END) AS estatus,
			   
		  gi.grademin,
		  gra.finalgrade,
		  co.estcert AS estatus_curso
		    
		    
	FROM (SELECT * FROM mdl_course WHERE id=$1) c 
	JOIN mdl_course_config co ON co.course=c.id
	JOIN mdl_groups g ON g.courseid = c.id
	JOIN mdl_groups_members gm ON gm.groupid = g.id
	LEFT JOIN mdl_user u ON gm.userid = u.id
	JOIN mdl_role_assignments ra ON u.id = ra.userid
	LEFT JOIN mdl_certificate cert ON cert.course = c.id
	LEFT JOIN mdl_certificate_issues iss ON iss.userid = u.id AND cert.id = iss.certificateid
	LEFT JOIN cert.ssc_tab_cert_issues_conf isc ON isc.cert_issues_id=iss.id
	JOIN mdl_context ctx ON ra.contextid = ctx.id AND ctx.instanceid = c.id
	JOIN mdl_role r ON r.id = ra.roleid
	LEFT JOIN mdl_grade_grades gra ON gra.userid = u.id
	LEFT JOIN mdl_grade_items gi ON gi.id = gra.itemid AND gi.courseid = c.id
	LEFT JOIN mdl_grade_categories cat ON cat.id = gi.categoryid AND cat.courseid = c.id

	LEFT JOIN nomina.ssn_categoria cc ON u.cat = cc.cve_categoria

	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	LEFT JOIN tutorias.mdl_userexp exp on c.id = exp.cursoid and u.id=exp.userid and g.id=exp.grupoid and r.id=exp.idrole_asignado
	LEFT JOIN parametrizacion.ssp_tipo_roles tip ON exp.role=tip.cve_role
	LEFT JOIN mdl_role r2 ON r2.id=exp.role

	left join tutorias.mdl_usertutor ut on ut.id_curso=c.id and ut.iduser=u.id
	left join tutorias.mdl_carreras car on car.id= ut.licenciatura
	left join tutorias.mdl_especialidades esp on esp.id=ut.esp

	WHERE gi.itemtype='course' 

	GROUP BY  u.username,u.id, c.fullname, c.shortname, iss.code,  g.name,r.name,  r2.name, exp.role,isc.vigente, gi.grademin, gra.finalgrade, co.estcert

    	ORDER BY  Alumno
$_$;


ALTER FUNCTION cert.f_por_certificar(integer) OWNER TO innovaedu;

--
-- Name: random_string(integer); Type: FUNCTION; Schema: cert; Owner: postgres
--

CREATE FUNCTION random_string(length integer) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
  chars text[] := '{0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z}';
  result text := '';
  i integer := 0;
begin
  if length < 0 then
    raise exception 'Given length cannot be less than 0';
  end if;
  for i in 1..length loop
    result := result || chars[1+random()*(array_length(chars, 1)-1)];
  end loop;
  return result;
end;
$$;


ALTER FUNCTION cert.random_string(length integer) OWNER TO postgres;

SET search_path = departments, pg_catalog;

--
-- Name: get_arbol_clave(character varying); Type: FUNCTION; Schema: departments; Owner: innovaedu
--

CREATE FUNCTION get_arbol_clave(clave_departametal character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	dept_row RECORD;	
BEGIN
	SELECT INTO dept_row cve_depto_adscripcion,cve_depto_adscripcion_padre FROM departments.ssd_cat_depto_adscripcion depto_adsc WHERE depto_adsc.cve_depto_adscripcion=clave_departametal;
	IF(dept_row.cve_depto_adscripcion_padre IS NULL)THEN
		--return dept_row.cve_depto_adscripcion||':hijo';		
		return dept_row.cve_depto_adscripcion;		
	ELSE
		--return dept_row.cve_depto_adscripcion_padre||':padre';
		return dept_row.cve_depto_adscripcion||'/'||departments.get_arbol_clave(dept_row.cve_depto_adscripcion_padre);
	END IF;	
END;
$$;


ALTER FUNCTION departments.get_arbol_clave(clave_departametal character varying) OWNER TO innovaedu;

--
-- Name: get_arbol_nombre(character varying); Type: FUNCTION; Schema: departments; Owner: innovaedu
--

CREATE FUNCTION get_arbol_nombre(clave_departametal character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	dept_row RECORD;	
BEGIN
	SELECT INTO dept_row * FROM departments.ssd_cat_depto_adscripcion depto_adsc WHERE depto_adsc.cve_depto_adscripcion=clave_departametal;
	IF(dept_row.cve_depto_adscripcion_padre IS NULL)THEN
		--return dept_row.cve_depto_adscripcion||':hijo';		
		return dept_row.nom_depto_adscripcion;		
	ELSE
		--return dept_row.cve_depto_adscripcion_padre||':padre';
		return dept_row.nom_depto_adscripcion||'/'||departments.get_arbol_nombre(dept_row.cve_depto_adscripcion_padre);
	END IF;	
END;
$$;


ALTER FUNCTION departments.get_arbol_nombre(clave_departametal character varying) OWNER TO innovaedu;

--
-- Name: get_arbol_table(character varying); Type: FUNCTION; Schema: departments; Owner: innovaedu
--

CREATE FUNCTION get_arbol_table(clave_departametal character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	dpt_raiz VARCHAR;
	dept_row RECORD;
	i Integer;
BEGIN
    dpt_raiz = '';
	i=7;
	WHILE i > 0 LOOP
		SELECT INTO dept_row nom_depto_adscripcion,cve_depto_adscripcion_padre FROM departments.ssd_cat_depto_adscripcion WHERE cve_depto_adscripcion = clave_departametal;
		dpt_raiz = dpt_raiz || '/' || dept_row.nom_depto_adscripcion;		
		clave_departametal = dept_row.cve_depto_adscripcion_padre;
		--return dept_row.cve_depto_adscripcion_padre;
		IF clave_departametal IS NULL THEN
			EXIT;
		END IF;
		i = i -1;
	END LOOP;
	return dpt_raiz;
END;
$$;


ALTER FUNCTION departments.get_arbol_table(clave_departametal character varying) OWNER TO innovaedu;

--
-- Name: get_rama_completa(character varying, integer); Type: FUNCTION; Schema: departments; Owner: innovaedu
--

CREATE FUNCTION get_rama_completa(clave_departametal character varying, top integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	dept_row RECORD;	
BEGIN
	SELECT INTO dept_row * FROM departments.ssd_cat_depto_adscripcion depto_adsc WHERE depto_adsc.cve_depto_adscripcion=clave_departametal;
	IF(dept_row.cve_depto_adscripcion_padre IS NULL OR top=0)THEN
		return  dept_row.cve_depto_adscripcion||':'||dept_row.nom_depto_adscripcion;
	ELSE
		top = top - 1;
		return  dept_row.cve_depto_adscripcion||':'||dept_row.nom_depto_adscripcion||'|'||departments.get_rama_json(dept_row.cve_depto_adscripcion_padre,top);
	END IF;	
END;
$$;


ALTER FUNCTION departments.get_rama_completa(clave_departametal character varying, top integer) OWNER TO innovaedu;

--
-- Name: get_rama_json(character varying, integer); Type: FUNCTION; Schema: departments; Owner: innovaedu
--

CREATE FUNCTION get_rama_json(clave_departametal character varying, top integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	dept_row RECORD;
		
BEGIN
	SELECT INTO dept_row * FROM departments.ssd_cat_depto_adscripcion depto_adsc	
	inner join  departments.ssd_cat_dependencia depto_dep on depto_adsc.cve_depto_adscripcion=depto_dep.cve_depto_adscripcion
	inner join departments.ssd_cat_delegacion depto_del  on  depto_del.cve_delegacion=depto_dep.cve_delegacion
	WHERE depto_adsc.cve_depto_adscripcion=clave_departametal;

	IF(dept_row.cve_depto_adscripcion_padre IS NULL OR top=0)THEN
		--return dept_row.cve_depto_adscripcion||':hijo';		
		return dept_row.cve_depto_adscripcion||':'||dept_row.nom_depto_adscripcion||'&'||dept_row.nom_delegacion||':'||dept_row.cve_nivel_atencion;		
	ELSE
		--return dept_row.cve_depto_adscripcion_padre||':padre';
		top = top - 1;
		return dept_row.cve_depto_adscripcion||':'||dept_row.nom_depto_adscripcion||'&'||dept_row.nom_delegacion||':'||dept_row.cve_nivel_atencion||':'||departments.get_rama_json(dept_row.cve_depto_adscripcion_padre,top);
	END IF;	

	
END;
$$;


ALTER FUNCTION departments.get_rama_json(clave_departametal character varying, top integer) OWNER TO innovaedu;

SET search_path = encuestas, pg_catalog;

--
-- Name: get_yes_not_tutorizado(character varying); Type: FUNCTION; Schema: encuestas; Owner: innovaedu
--

CREATE FUNCTION get_yes_not_tutorizado(clave_curso character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE	lst_row RECORD;	
DECLARE texto_a varchar;
--DECLARE texto_b varchar;
BEGIN
	texto_a := '';
	--texto_b := '';
	FOR lst_row IN 
	SELECT DISTINCT r.id 
	--INTO lst_row 
	FROM  mdl_role_assignments ra JOIN public.mdl_role r ON(r.id = ra.roleid AND r.id IN (14,18,32,33))
	JOIN mdl_context ct ON ct.id = ra.contextid	JOIN mdl_course cur ON ct.instanceid = cur.id
	WHERE cur.shortname = clave_curso ORDER BY r.id
	LOOP
	  texto_a := texto_a || lst_row.id;
	  --NEXT lst_row;
	END LOOP;
	
	CASE 
		WHEN texto_a = '' THEN 
			texto_a := 'NO_Tutorizado';
		WHEN texto_a = '14' THEN 
			texto_a := 'NO_Tutorizado';
		ELSE 
		texto_a :=  'Tutorizado';
	END CASE; 
	
	RETURN texto_a;
END;
$$;


ALTER FUNCTION encuestas.get_yes_not_tutorizado(clave_curso character varying) OWNER TO innovaedu;

--
-- Name: gettutorizado_notutorizado(character varying); Type: FUNCTION; Schema: encuestas; Owner: innovaedu
--

CREATE FUNCTION gettutorizado_notutorizado(clave_curso character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE	lst_row RECORD;	
DECLARE texto_a varchar;
--DECLARE texto_b varchar;
BEGIN
	texto_a := '';
	--texto_b := '';
	FOR lst_row IN 
	SELECT DISTINCT r.id 
	--INTO lst_row 
	FROM  mdl_role_assignments ra JOIN public.mdl_role r ON(r.id = ra.roleid AND r.id IN (14,18,32,33))
	JOIN mdl_context ct ON ct.id = ra.contextid	JOIN mdl_course cur ON ct.instanceid = cur.id
	WHERE cur.shortname = clave_curso ORDER BY r.id
	LOOP
	  texto_a := texto_a || lst_row.id;
	  --NEXT lst_row;
	END LOOP;
	
		CASE 
		WHEN texto_a = '' THEN 
			texto_a := -1;
		WHEN texto_a = '14' THEN 
			texto_a := 0;
		ELSE 
		texto_a :=  1;
	END CASE;  
	
	RETURN texto_a;
END;
$$;


ALTER FUNCTION encuestas.gettutorizado_notutorizado(clave_curso character varying) OWNER TO innovaedu;

SET search_path = estadisticas, pg_catalog;

--
-- Name: f_aprobados(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_aprobados(bigint) RETURNS SETOF integer
    LANGUAGE sql
    AS $_$
SELECT  
                CASE
                    WHEN co.vigente = 1 THEN 1
                    else 0
                END AS aprobados
           
           FROM   mdl_user  u
            JOIN mdl_groups_members gm ON gm.userid=u.id
     join mdl_groups g on g.id=gm.groupid
     JOIN mdl_course c on c.id= g.courseid 
   left  JOIN mdl_certificate ce ON ce.course = c.id
   left JOIN mdl_certificate_issues iss ON iss.certificateid = ce.id AND iss.userid =u.id
   left JOIN  cert.ssc_tab_cert_issues_conf co ON co.cert_issues_id = iss.id 
   where gm.userid=$1 

    
$_$;


ALTER FUNCTION estadisticas.f_aprobados(bigint) OWNER TO innovaedu;

--
-- Name: f_comparativa_path(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_comparativa_path(integer) RETURNS TABLE(idcurso bigint, path character)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT 
						
			c.id, cc.path

      from (select * from mdl_course where id=$1) c 
     JOIN mdl_course_categories cc ON cc.id = c.category


    
   
   
$_$;


ALTER FUNCTION estadisticas.f_comparativa_path(integer) OWNER TO innovaedu;

--
-- Name: f_cursos_categoria(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_cursos_categoria(bigint) RETURNS TABLE(idcurso bigint, curso character, clve character, idcategoria bigint)
    LANGUAGE sql
    AS $_$

select 	c.id as idcurso,
	c.fullname as curso, 
	shortname as clave, 
	cc.id as categoria 
   from mdl_course  c 
   JOIN mdl_course_categories cc ON cc.id = c.category
   where cc. parent=$1

   $_$;


ALTER FUNCTION estadisticas.f_cursos_categoria(bigint) OWNER TO innovaedu;

--
-- Name: f_datos_cursos(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_datos_cursos(integer) RETURNS TABLE(cursoid bigint, curso text, periodo text)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT 
						
			c.id cursoid, CONCAT(c.fullname,' ',c.shortname) curso,
			CONCAT(TO_CHAR(TO_TIMESTAMP(c.startdate),'DD-TMMon-YYYY'),' al ', TO_CHAR( cc.lastdate,'DD-TMMon-YYYY')) periodo
			
    FROM mdl_user u
    JOIN mdl_groups_members gm1 ON gm1.userid=u.id
    join mdl_groups g on g.id=gm1.groupid
    JOIN mdl_course c on c.id= g.courseid
    JOIN public.mdl_course_config cc ON cc.course = c.id
    JOIN public.mdl_context ctx ON ctx.instanceid = c.id

WHERE c.id=$1

    
   
   
$_$;


ALTER FUNCTION estadisticas.f_datos_cursos(integer) OWNER TO innovaedu;

--
-- Name: f_datos_cursos_alumnos(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_datos_cursos_alumnos(integer) RETURNS TABLE(nombre_completo character, matricula character, correo_electronico character, red character, telefono_trabajo character, tipo_categoria character, adscripcion character, cve_depto_adscripcion character, cursoid bigint, curso text, periodo text, rol character, calificacion numeric, perfil integer)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT CONCAT(u.lastname, ' ', u.firstname) nombre_completo, 
			u.username matricula,
			pre.des_email_pers correo_electronico, 
			pre.desc_numred red,
			pre.desc_teltrab telefono_trabajo, 
			CONCAT(cat.nom_nombre,' (',cat.des_clave,')') tipo_categoria,
			
			CASE WHEN pre.cve_departamental IS NOT NULL THEN
			CASE WHEN ads.nom_depto_adscripcion IS NOT NULL THEN
			CONCAT(ads.nom_depto_adscripcion,' - ',dep.nom_dependencia,' (',pre.cve_departamental,')')
			ELSE 'Sin Adscripción' END
			ELSE 'Sin clave' END adscripcion, 
			pre.cve_departamental cve_depto_adscripcion,
			
			
			c.id cursoid, CONCAT(c.fullname,' ',c.shortname) curso,
			CONCAT(TO_CHAR(TO_TIMESTAMP(c.startdate),'DD-TMMon-YYYY'),' al ', TO_CHAR( cc.lastdate,'DD-TMMon-YYYY')) periodo,
			r.name rol, gg.finalgrade calificacion, tr.ind_tipo as perfil
			
    FROM (select * from public.mdl_user where id=$1) u
    JOIN mdl_groups_members gm1 ON gm1.userid=u.id
    join mdl_groups g on g.id=gm1.groupid
    JOIN mdl_course c on c.id= g.courseid
    JOIN public.mdl_course_config cc ON cc.course = c.id
    JOIN public.mdl_context ctx ON ctx.instanceid = c.id
    JOIN public.mdl_role_assignments ra ON ra.contextid = ctx.id
    JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
    JOIN public.mdl_role r ON r.id = ra.roleid


    
     JOIN public.mdl_grade_items gt ON gt.courseid = c.id AND gt.itemtype = 'course'
    LEFT JOIN public.mdl_grade_grades gg ON gg.itemid = gt.id AND gg.userid = u.id
    LEFT JOIN gestion.sgp_tab_usuario tb ON tb.nom_usuario =u.username
    LEFT JOIN gestion.sgp_tab_preregistro_al  pre ON pre.nom_usuario = tb.nom_usuario AND pre.cve_curso = c.id
    LEFT JOIN nomina.ssn_categoria cat ON cat.cve_categoria = pre.cve_cat
    LEFT JOIN nomina.ssn_tipo_catgoria tcat ON tcat.cve_tipo_categoria = cat.cve_tipo_categoria
    LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ads.cve_depto_adscripcion = pre.cve_departamental
    LEFT JOIN departments.ssd_cat_dependencia dep ON dep.cve_depto_adscripcion = ads.cve_depto_adscripcion
   
   
$_$;


ALTER FUNCTION estadisticas.f_datos_cursos_alumnos(integer) OWNER TO innovaedu;

--
-- Name: f_datos_cursos_tutores(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_datos_cursos_tutores(integer) RETURNS TABLE(cursoid bigint, curso text, periodo text, activo text, rol text)
    LANGUAGE sql
    AS $_$
   SELECT DISTINCT 
			
			c.id cursoid, CONCAT(c.fullname,' ',c.shortname) curso,
			CONCAT(TO_CHAR(TO_TIMESTAMP(c.startdate),'DD-TMMon-YYYY'),' al ',  TO_CHAR( cc.lastdate,'DD-TMMon-YYYY')) periodo,
			case 
			when  c.tipocur = '0' AND (to_timestamp(la.timeaccess::double precision) + '5 days'::interval) >= now() then 'Activo'
			when c.tipocur = '1' AND (to_timestamp(la.timeaccess::double precision) + '15 days'::interval) >= now() then  'Activo'
			else
			'Inactivo'
			end  as activo,

			

			 array_to_string(ARRAY( SELECT DISTINCT r1.name
           FROM tutorias.mdl_userexp exp2
           
         JOIN mdl_role r1 ON r1.id = exp2.role
 where exp.userid = exp2.userid AND exp.cursoid=exp2.cursoid  ORDER BY r1.name DESC), ' / '::text) AS rol
						
			
        FROM mdl_course c
   LEFT JOIN tutorias.mdl_userexp exp ON c.id = exp.cursoid
   LEFT JOIN tutorias.mdl_usertutor tut ON tut.iduser = exp.userid AND tut.id_curso = c.id
    join (select * from mdl_user where id=$1) u ON u.id = exp.userid
   LEFT JOIN gestion.sgp_tab_usuario tab ON tab.nom_usuario::text = u.username::text
    JOIN mdl_groups g ON exp.grupoid = g.id AND g.courseid=exp.cursoid
   JOIN mdl_groups_members gm1 ON gm1.groupid = g.id  and gm1.userid = u.id
   JOIN mdl_course_config cc ON cc.course = c.id and cc.course = g.courseid
   JOIN mdl_context ctx ON ctx.instanceid = c.id and ctx.contextlevel=50 and ctx.instanceid = cc.course
   JOIN mdl_user_lastaccess la ON la.courseid=c.id and la.userid=gm1.userid
   LEFT JOIN mdl_role r ON r.id = exp.role
   JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = r.id AND tr.ind_tipo = 2
   
   order by cursoid
$_$;


ALTER FUNCTION estadisticas.f_datos_cursos_tutores(integer) OWNER TO innovaedu;

--
-- Name: f_formacion_tutores(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_formacion_tutores(integer) RETURNS TABLE(id_user bigint, id_grupo bigint, grupo character, tutor text, cursoid bigint, alumnos bigint, aprobados bigint, no_aprobados bigint, fecha_inicio text)
    LANGUAGE sql
    AS $_$

SELECT u.id AS id_user, m.grupos as id_grupo, m.grupo as grupo,
	 concat(u.firstname,' ', u.lastname) as tutor  ,
	m.cursoid, 
	 m.alumnos,
	 m.aprobados,
	 m.no_aprobados, 
	 to_char(to_timestamp(c.startdate::double precision), 'DD-TMMon-YYYY'::text) as fecha_inicio
  FROM estadisticas.v_estadisticas_formacion_tutores_p m
 left JOIN mdl_user u ON u.id=m.tutor
 left join mdl_course c on c.id=m.cursoid
  where cursoid=$1
$_$;


ALTER FUNCTION estadisticas.f_formacion_tutores(integer) OWNER TO innovaedu;

--
-- Name: f_general_comparativa_fecha(date, date); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_general_comparativa_fecha(date, date) RETURNS TABLE(cursoid bigint, curso text, clave_corta character, fecha_inicio date, fecha_final date)
    LANGUAGE sql
    AS $_$

select  m.cursoid, m.curso, m.clave_corta, m.fecha_inicio,m.fecha_final from (
 SELECT n.cursoid, n.curso, n.clave_corta, 
    to_date(n.fecha_inicio, 'DD/MM/YYYY'::text) AS fecha_inicio, 
    to_date(n.fecha_final, 'DD/MM/YYYY'::text) AS fecha_final
   FROM ( SELECT DISTINCT c.id AS cursoid, 
            pg_catalog.concat(c.fullname, ' ', '(', c.shortname, ')') AS curso, 
            c.shortname AS clave_corta, 
            to_char(to_timestamp(c.startdate::double precision), 'DD-MM-YYYY'::text) AS fecha_inicio, 
                       to_char(cc.lastdate, 'DD-MM-YYYY'::text) AS fecha_final

           FROM mdl_user u
      JOIN mdl_groups_members gm1 ON gm1.userid = u.id
   JOIN mdl_groups g ON g.id = gm1.groupid
   JOIN mdl_course c ON c.id = g.courseid
   JOIN mdl_course_config cc ON cc.course = c.id) n)m
   WHERE  m.Fecha_inicio BETWEEN $1 AND  $2;
--WHERE  Fecha_inicio >= '2013-01-01' AND  Fecha_inicio >= '2013-06-30' --and Fecha_final>='2013-01-01' and  Fecha_final >='2013-06-30'


$_$;


ALTER FUNCTION estadisticas.f_general_comparativa_fecha(date, date) OWNER TO innovaedu;

--
-- Name: f_get_datos_alumno(integer, bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_datos_alumno(integer, bigint) RETURNS TABLE(nombre_completo character, matricula character, correo_electronico character, red character, telefono_trabajo character, tipo_categoria character, adscripcion character, cve_depto_adscripcion character)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT CONCAT(u.lastname,' ',u.firstname) nombre_completo,
		    u.username matricula,
		    pre.des_email_pers correo_electronico, 
		    pre.desc_numred red,
		    pre.desc_teltrab telefono_trabajo, 

		CASE WHEN cat.des_clave IS NOT NULL THEN 
			  CONCAT(cat.nom_nombre,' (',cat.des_clave,')') 
		ELSE ' ' END tipo_categoria,
		
		       CASE
            WHEN pre.cve_departamental IS NOT NULL THEN 
            CASE
                WHEN ads.nom_depto_adscripcion IS NOT NULL THEN pg_catalog.concat(ads.nom_depto_adscripcion, ' - ', dep.nom_dependencia, ' (', pre.cve_departamental, ')')
                ELSE ' '::text
            END
            ELSE ' '::text
        END AS adscripcion, COALESCE(pre.cve_departamental, ' '::bpchar) AS cve_depto_adscripcion
    FROM public.mdl_user u
    LEFT JOIN gestion.sgp_tab_usuario tabu ON tabu.nom_usuario = u.username
    LEFT JOIN  gestion.sgp_tab_preregistro_al pre ON pre.nom_usuario = tabu.nom_usuario
    LEFT JOIN nomina.ssn_categoria cat ON cat.cve_categoria = pre.cve_cat
    LEFT JOIN nomina.ssn_tipo_catgoria tcat ON tcat.cve_tipo_categoria = cat.cve_tipo_categoria
    LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ads.cve_depto_adscripcion = pre.cve_departamental
    LEFT JOIN departments.ssd_cat_dependencia dep ON dep.cve_depto_adscripcion = ads.cve_depto_adscripcion
    WHERE u.id = $1 and pre.cve_curso=$2
$_$;


ALTER FUNCTION estadisticas.f_get_datos_alumno(integer, bigint) OWNER TO innovaedu;

--
-- Name: f_get_datos_alumno_curso(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_datos_alumno_curso(integer) RETURNS TABLE(cursoid bigint, curso character, periodo character, rol character, calificacion numeric)
    LANGUAGE sql
    AS $_$
  
    SELECT mdl_course.id cursoid, CONCAT(mdl_course.fullname,' ',mdl_course.shortname) curso,
    CONCAT(TO_CHAR(TO_TIMESTAMP(mdl_course.startdate),'DD-TMMon-YYYY'),' al ',  TO_CHAR( mdl_course_config.lastdate,'DD-TMMon-YYYY'))  periodo,
    (SELECT * from  estadisticas.f_multirol_usuario($1, mdl_course.id)) as rol,
    case 
    when public.mdl_course.startdate>=1388534400 then  mdl_grade_grades.finalgrade 
    when public.mdl_course.startdate<1388534400 then cg.caltot 
    
    end as calificacion
    FROM public.mdl_course
    JOIN public.mdl_course_config ON mdl_course_config.course = mdl_course.id
    JOIN public.mdl_context ON mdl_context.instanceid = mdl_course.id
    JOIN public.mdl_role_assignments ON mdl_role_assignments.contextid = mdl_context.id
    JOIN public.mdl_role ON mdl_role.id = mdl_role_assignments.roleid

    LEFT JOIN public.mdl_grade_items ON mdl_grade_items.courseid = mdl_course.id AND mdl_grade_items.itemtype = 'course'
    LEFT JOIN public.mdl_grade_grades ON mdl_grade_grades.itemid = mdl_grade_items.id AND mdl_grade_grades.userid = mdl_role_assignments.userid

    LEFT JOIN calificaciones.mdl_caltotalgral cg ON cg.userid=mdl_role_assignments.userid AND cg.idcurso=mdl_course.id AND cg.tipo='T' 
    LEFT JOIN calificaciones.mdl_elementoscal el ON el.idgmoduni=cg.idmod 
    LEFT JOIN calificaciones.mdl_unidades un  ON el.idgmoduni = un.id  
    LEFT JOIN calificaciones.mdl_moduni mod  ON un.idmoduni = mod.id  
    LEFT JOIN  mdl_modules mo  ON el.module = mo.id  
	
    WHERE mdl_role_assignments.userid = $1
$_$;


ALTER FUNCTION estadisticas.f_get_datos_alumno_curso(integer) OWNER TO innovaedu;

--
-- Name: f_get_datos_tutores(integer, bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_datos_tutores(integer, bigint) RETURNS TABLE(nombre_completo character, matricula character, correo_electronico character, red character, telefono_trabajo character, tipo_categoria character, adscripcion character, cve_depto_adscripcion character)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT CONCAT(u.lastname,' ',u.firstname) nombre_completo,
		    tut.nom_usuario matricula,
		    tut.emailpart correo_electronico, 
		    u.numred red,
		    u.phone2 telefono_trabajo, 

		CASE WHEN cat.des_clave IS NOT NULL THEN 
			  CONCAT(cat.nom_nombre,' (',cat.des_clave,')') 
		ELSE ' ' END tipo_categoria,
		
		CASE WHEN tut.cve_departamento IS NOT NULL THEN
		CASE WHEN ads.nom_depto_adscripcion IS NOT NULL THEN
			  CONCAT(ads.nom_depto_adscripcion,' - ',dep.nom_dependencia,' (',tut.cve_departamento,')')
		ELSE '' END
		ELSE '' END adscripcion,

		CASE WHEN ads.nom_depto_adscripcion IS NOT NULL THEN
		CASE WHEN tut.cve_departamento IS NOT NULL THEN 
			  tut.cve_departamento
		ELSE '' END
		ELSE '' END cve_depto_asdcripcion

    FROM (select * from public.mdl_user where id =$1) u
     LEFT JOIN tutorias.mdl_userexp exp ON u.id = exp.userid
  left JOIN tutorias.mdl_usertutor tut ON tut.iduser = exp.userid AND tut.id_curso = exp.cursoid
    LEFT JOIN gestion.sgp_tab_usuario tab ON tab.nom_usuario::text = u.username::text
  
	
	 JOIN mdl_role_assignments ra ON u.id = ra.userid
	 JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
	 JOIN mdl_role r ON r.id = ra.roleid
    LEFT JOIN nomina.ssn_categoria cat ON cat.cve_categoria = tut.cve_categoria
    LEFT JOIN nomina.ssn_tipo_catgoria tcat ON tcat.cve_tipo_categoria = cat.cve_tipo_categoria
    LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON tut.cve_departamento = ads.cve_depto_adscripcion
    LEFT JOIN departments.ssd_cat_dependencia dep ON dep.cve_depto_adscripcion = ads.cve_depto_adscripcion
    WHERE ind_tipo=2 and  exp.cursoid=$2
$_$;


ALTER FUNCTION estadisticas.f_get_datos_tutores(integer, bigint) OWNER TO innovaedu;

--
-- Name: f_get_est_curso_ao07_01(integer, character); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_est_curso_ao07_01(integer, character) RETURNS TABLE(usuarios bigint, hits bigint)
    LANGUAGE sql
    AS $_$
    SELECT COUNT(DISTINCT userid) usuarios, COUNT(userid) hits
    FROM public.mdl_log ml
    WHERE course = $1
    AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
    EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
$_$;


ALTER FUNCTION estadisticas.f_get_est_curso_ao07_01(integer, character) OWNER TO innovaedu;

--
-- Name: f_get_est_curso_ao07_01(bigint, character); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_est_curso_ao07_01(bigint, character) RETURNS TABLE(usuarios bigint, hits bigint)
    LANGUAGE sql
    AS $_$
    SELECT COUNT(DISTINCT userid) usuarios, COUNT(userid) hits
    FROM public.mdl_log ml
    WHERE course = $1
    AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
    EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
$_$;


ALTER FUNCTION estadisticas.f_get_est_curso_ao07_01(bigint, character) OWNER TO innovaedu;

--
-- Name: f_get_est_curso_ao07_02(integer, character); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_est_curso_ao07_02(integer, character) RETURNS TABLE(hora text, acceso_inicial bigint, usuarios_concurrentes bigint)
    LANGUAGE sql
    AS $_$
    SELECT hora, COUNT(DISTINCT acceso_inicial) acceso_inicial, COUNT(DISTINCT usuarios_concurrentes) usuarios_concurrentes
    FROM (
        SELECT LPAD(DATE_PART('hour',TO_TIMESTAMP(fecha_hora))::TEXT,2,'0') hora,
        CASE acceso_inicial WHEN 1 THEN userid ELSE null END acceso_inicial,
        CASE acceso_inicial WHEN 0 THEN userid ELSE null END usuarios_concurrentes
        FROM (
            SELECT MIN(id) logid, MIN(time) fecha_hora, course, 1 acceso_inicial, userid
            FROM public.mdl_log
            WHERE course = $1
            AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
            EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
            GROUP BY course,userid
            UNION
            SELECT id logid, time fecha_hora, course, 0 acceso_inicial, userid
            FROM public.mdl_log
            WHERE course = $1
            AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
            EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT

        ) s
    ) t
    GROUP BY hora;
$_$;


ALTER FUNCTION estadisticas.f_get_est_curso_ao07_02(integer, character) OWNER TO innovaedu;

--
-- Name: f_get_est_curso_ao07_02(bigint, character); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_est_curso_ao07_02(bigint, character) RETURNS TABLE(hora text, acceso_inicial bigint, usuarios_concurrentes bigint)
    LANGUAGE sql
    AS $_$
    SELECT hora, COUNT(DISTINCT acceso_inicial) acceso_inicial, COUNT(DISTINCT usuarios_concurrentes) usuarios_concurrentes
    FROM (
        SELECT LPAD(DATE_PART('hour',TO_TIMESTAMP(fecha_hora))::TEXT,2,'0') hora,
        CASE acceso_inicial WHEN 1 THEN userid ELSE null END acceso_inicial,
        CASE acceso_inicial WHEN 0 THEN userid ELSE null END usuarios_concurrentes
        FROM (
            SELECT MIN(id) logid, MIN(time) fecha_hora, course, 1 acceso_inicial, userid
            FROM public.mdl_log
            WHERE course = $1
            AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
            EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
            GROUP BY course,userid
            UNION
            SELECT id logid, time fecha_hora, course, 0 acceso_inicial, userid
            FROM public.mdl_log
            WHERE course = $1
            AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
            EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
            AND id NOT IN (
                SELECT logid
                FROM (
                    SELECT MIN(id) logid, course, 1 acceso_inicial, userid
                    FROM public.mdl_log
                    WHERE course = $1
                    AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
                    EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
                    GROUP BY course,userid
                ) r
            )
        ) s
    ) t
    GROUP BY hora;
$_$;


ALTER FUNCTION estadisticas.f_get_est_curso_ao07_02(bigint, character) OWNER TO innovaedu;

--
-- Name: f_get_est_curso_ao07_03(integer, character); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_get_est_curso_ao07_03(integer, character) RETURNS TABLE(fecha_hora text, nombre_completo text)
    LANGUAGE sql
    AS $_$
    SELECT TO_CHAR(TO_TIMESTAMP(mdl_log.time),'DD-MM-YYYY, HH24:MI') fecha_hora, CONCAT(mdl_user.pat,' ',mdl_user.mat,' ',mdl_user.nom) nombre_completo
    FROM public.mdl_log
    JOIN public.mdl_user ON mdl_user.id = mdl_log.userid
    WHERE course = $1
    AND time BETWEEN EXTRACT('epoch' FROM DATE_TRUNC('day',$2::DATE))::BIGINT AND
    EXTRACT('epoch' FROM (DATE_TRUNC('day',$2::DATE) + INTERVAL '1 day' - INTERVAL '1 second'))::BIGINT
$_$;


ALTER FUNCTION estadisticas.f_get_est_curso_ao07_03(integer, character) OWNER TO innovaedu;

--
-- Name: f_grupo_alumnos(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_grupo_alumnos(bigint) RETURNS TABLE(matricula character, userid bigint, nombre text, email character, delegacion character, tipounidad text, nivel_atencion character, unidad_medica character, adscripcion text, cve_depto_adscripcion character, id bigint, curso character)
    LANGUAGE sql
    AS $_$

SELECT   DISTINCT u.username as matricula, u.id as userid, concat( u.firstname, ' ', u.lastname) AS nombre,
		  pre.des_email_pers,del.nom_delegacion AS delegacion,
			CASE
			WHEN atn.ind_medica = 1::numeric THEN 'Medica'::text
			WHEN atn.ind_medica = 0 THEN 'No Medica'::text
			END AS tipounidad,
		  niv.des_nivel_atencion AS nivel_de_atencion, atn.des_unidad_atencion AS unidad_medica,

		  CASE WHEN pre.cve_departamental IS NOT NULL THEN
			CASE WHEN ads.nom_depto_adscripcion IS NOT NULL THEN
			CONCAT(ads.nom_depto_adscripcion,' - ',dep.nom_dependencia,' (',pre.cve_departamental,')')
			ELSE ' ' END
			ELSE ' ' END adscripcion,


		 pre.cve_departamental AS cve_depto_adscripcion, c.id, c.shortname

	FROM mdl_user u
	JOIN mdl_groups_members gm1 ON gm1.userid=u.id
	JOIN mdl_groups g on g.id=gm1.groupid and gm1.userid=u.id
	JOIN mdl_course c on c.id= g.courseid
	
	JOIN mdl_course_config co ON co.course=c.id
	JOIN mdl_course_categories cc ON cc.id=c.category
	JOIN mdl_context ctx ON  ctx.instanceid = c.id 
	JOIN mdl_role_assignments ra ON u.id = ra.userid and ra.contextid = ctx.id 
	JOIN mdl_role r ON r.id = ra.roleid
	JOIN parametrizacion.ssp_tipo_roles tr on tr.cve_role=ra.roleid and tr.ind_tipo=3
	JOIN  mdl_groups_members gm ON  gm.groupid=g.id  

	LEFT JOIN gestion.sgp_tab_usuario tb ON tb.nom_usuario =u.username
	LEFT JOIN gestion.sgp_tab_preregistro_al  pre ON pre.nom_usuario = tb.nom_usuario AND pre.cve_curso = c.id
	LEFT JOIN nomina.ssn_categoria cat ON cat.cve_categoria = pre.cve_cat
	LEFT JOIN nomina.ssn_tipo_catgoria tcat ON tcat.cve_tipo_categoria = cat.cve_tipo_categoria
	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ads.cve_depto_adscripcion = pre.cve_departamental
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_delegacion = del.cve_delegacion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	where gm1.groupid=$1
	$_$;


ALTER FUNCTION estadisticas.f_grupo_alumnos(bigint) OWNER TO innovaedu;

--
-- Name: f_grupo_tutor(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_grupo_tutor(bigint) RETURNS TABLE(id bigint, curso text, categoria character, grupo character, userid integer, tutor text, periodo text, alumnos bigint, role character, jerarquia integer)
    LANGUAGE sql
    AS $_$

SELECT   DISTINCT c.id, concat(c.fullname, ' (', c.shortname, ') ') AS Curso, 
		  cc.name AS Categoria,
		  g.name AS Grupo, 
		  exp.userid,
		  (CASE when ut.esp>0 then concat(esp.abrev, ' ',  u.firstname, ' ', u.lastname)
			 when ut.esp=0 then  concat(car.abrev, ' ',  u.firstname, ' ', u.lastname)
			 else concat( u.firstname, ' ', u.lastname)
			 end 
			 )  AS  tutor,  
		 --concat(TIMESTAMP 'epoch' +startdate * INTERVAL '1 second', ' al ', co.lastdate, ' ' )  AS Periodo, 
		  pg_catalog.concat(to_char(to_timestamp(c.startdate::double precision), 'DD-MM-YYYY'::text), ' al ', to_char(to_timestamp(c.lastdate::double precision), 'DD-MM-YYYY'::text)) AS periodo, 

		  (  select count (* ) from (
					SELECT   distinct gm1.userid, r.name, r.id
	

					FROM mdl_user u
						JOIN mdl_groups_members gm1 ON gm1.userid=u.id
						join mdl_groups g on g.id=gm1.groupid and gm1.userid=u.id
						JOIN mdl_course c1 on c1.id= g.courseid
						JOIN mdl_context ctx ON  ctx.instanceid = c1.id 
						JOIN mdl_role_assignments ra ON u.id = ra.userid and ra.contextid = ctx.id 
						JOIN mdl_role r ON r.id = ra.roleid
						JOIN parametrizacion.ssp_tipo_roles tr on tr.cve_role=ra.roleid and tr.ind_tipo=3
						JOIN  mdl_groups_members gm ON  gm.groupid=g.id  
	
						where gm1.groupid=$1) as alumnos )as alumnos, r.name as role, tr.jerarquia

	

	FROM mdl_user u
	     JOIN mdl_groups_members gm1 ON gm1.userid=u.id
	     join mdl_groups g on g.id=gm1.groupid and gm1.userid=u.id
	     JOIN mdl_course c on c.id= g.courseid
	     JOIN tutorias.mdl_userexp exp on c.id = exp.cursoid and gm1.userid= exp.userid and exp.userid=u.id
	     left join tutorias.mdl_usertutor ut on ut.id_curso=c.id and ut.iduser=exp.userid
	left join tutorias.mdl_carreras car on car.id= ut.licenciatura
	left join tutorias.mdl_especialidades esp on esp.id=ut.esp
	     JOIN mdl_course_config co ON co.course=c.id
	     JOIN mdl_course_categories cc ON cc.id=c.category
	     JOIN mdl_context ctx ON  ctx.instanceid = c.id 
	     JOIN mdl_role_assignments ra ON u.id = ra.userid and ra.contextid = ctx.id 
	     JOIN mdl_role r ON r.id = ra.roleid 
	     JOIN parametrizacion.ssp_tipo_roles tr on tr.cve_role=ra.roleid and tr.ind_tipo=2
	     JOIN  mdl_groups_members gm ON  gm.groupid=g.id  
	
	     where gm1.groupid=$1
	     order by tr.jerarquia 

$_$;


ALTER FUNCTION estadisticas.f_grupo_tutor(bigint) OWNER TO innovaedu;

--
-- Name: f_menu_reporte(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_menu_reporte(integer) RETURNS TABLE(userid bigint, cve_usuario integer, nom character, pat_mat character, cve_rol integer, username character, cve_menu_padre integer, cve_menu integer, des_menu character)
    LANGUAGE sql
    AS $_$

SELECT DISTINCT u.id,
       um.cve_usuario,
       u.firstname, 
       u.lastname,
       cve_rol,
       u.username,
       cm.cve_menu_padre,
       um.cve_menu, 
       cm.des_menu


 FROM (SELECT * FROM mdl_user where id=$1)u

   LEFT JOIN mdl_groups_members gm1 ON gm1.userid = u.id
   LEFT JOIN mdl_groups g ON g.id = gm1.groupid
   LEFT JOIN mdl_course c ON c.id = g.courseid
   LEFT JOIN mdl_context ctx  ON ctx.instanceid = c.id AND ctx.contextlevel = 50
   LEFT JOIN mdl_role_assignments ra ON ra.userid = u.id and ra.contextid = ctx.id
   LEFT JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
   LEFT JOIN parametrizacion.ssp_tab_usuario_menu um on um.cve_rol=ra.roleid or um.cve_usuario=u.id
   LEFT JOIN parametrizacion.ssp_cat_menu cm on cm.cve_menu=um.cve_menu
   WHERE  cm.cve_menu_padre=55


$_$;


ALTER FUNCTION estadisticas.f_menu_reporte(integer) OWNER TO innovaedu;

--
-- Name: f_menu_reporte(integer, integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_menu_reporte(integer, integer) RETURNS TABLE(userid bigint, cve_usuario integer, nom character, pat_mat character, cve_rol integer, username character, cve_menu_padre integer, cve_menu integer, des_menu character)
    LANGUAGE sql
    AS $_$

SELECT DISTINCT u.id,
       um.cve_usuario,
       u.firstname, 
       u.lastname,
       cve_rol,
       u.username,
       cm.cve_menu_padre,
       um.cve_menu, 
       cm.des_menu


 FROM mdl_user u 

   LEFT JOIN mdl_groups_members gm1 ON gm1.userid = u.id
   LEFT JOIN mdl_groups g ON g.id = gm1.groupid
   LEFT JOIN mdl_course c ON c.id = g.courseid
   LEFT JOIN mdl_context ctx  ON ctx.instanceid = c.id AND ctx.contextlevel = 50
   LEFT JOIN mdl_role_assignments ra ON ra.userid = u.id and ra.contextid = ctx.id
   left JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid 
    JOIN parametrizacion.ssp_tab_usuario_menu um on um.cve_rol=ra.roleid or um.cve_usuario=u.id
JOIN parametrizacion.ssp_cat_menu cm on cm.cve_menu=um.cve_menu  and  cm.cve_menu_padre=55
   WHERE   u.id=$1 or um.cve_rol=$1


$_$;


ALTER FUNCTION estadisticas.f_menu_reporte(integer, integer) OWNER TO innovaedu;

--
-- Name: f_menu_reporte_rol(integer); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_menu_reporte_rol(integer) RETURNS TABLE(userid bigint, cve_usuario integer, nom character, pat_mat character, cve_rol integer, username character, cve_menu_padre integer, cve_menu integer, des_menu character)
    LANGUAGE sql
    AS $_$

SELECT DISTINCT u.id,
       um.cve_usuario,
       u.firstname, 
       u.lastname,
       cve_rol,
       u.username,
       cm.cve_menu_padre,
       um.cve_menu, 
       cm.des_menu


 FROM mdl_user u 

   LEFT JOIN mdl_groups_members gm1 ON gm1.userid = u.id
   LEFT JOIN mdl_groups g ON g.id = gm1.groupid
   LEFT JOIN mdl_course c ON c.id = g.courseid
   LEFT JOIN mdl_context ctx  ON ctx.instanceid = c.id AND ctx.contextlevel = 50
   LEFT JOIN mdl_role_assignments ra ON ra.userid = u.id and ra.contextid = ctx.id
   left JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid 
    JOIN parametrizacion.ssp_tab_usuario_menu um on um.cve_rol=ra.roleid or um.cve_usuario=u.id
JOIN parametrizacion.ssp_cat_menu cm on cm.cve_menu=um.cve_menu  and  cm.cve_menu_padre=55
   WHERE  um.cve_rol=$1


$_$;


ALTER FUNCTION estadisticas.f_menu_reporte_rol(integer) OWNER TO innovaedu;

--
-- Name: f_multirol(bigint, bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_multirol(bigint, bigint) RETURNS SETOF text
    LANGUAGE sql
    AS $_$
select * from 
	(	 select array_to_string (ARRAY( SELECT DISTINCT r1.name
           FROM mdl_user u2
      JOIN mdl_groups_members gm ON gm.userid = u2.id
   JOIN mdl_groups g1 ON g1.id = gm.groupid
   JOIN mdl_course c1 ON c1.id = g1.courseid
   JOIN mdl_context ctx ON ctx.instanceid = c1.id
   JOIN mdl_role_assignments ra1 ON ra1.contextid = ctx.id AND u2.id = ra1.userid
   JOIN parametrizacion.ssp_tipo_roles tr1 ON tr1.cve_role = ra1.roleid
   JOIN mdl_role r1 ON r1.id = ra1.roleid
  WHERE u2.id=$1 and c1.id=$2
  order by name desc 
  ), ' \ '::text)) AS rol
 
  
   $_$;


ALTER FUNCTION estadisticas.f_multirol(bigint, bigint) OWNER TO innovaedu;

--
-- Name: f_multirol_usuario(bigint, bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_multirol_usuario(bigint, bigint) RETURNS SETOF text
    LANGUAGE sql
    AS $_$
select * from 
	(	 select array_to_string (ARRAY( SELECT DISTINCT r1.name
			FROM mdl_user u2
			JOIN mdl_groups_members gm ON gm.userid = u2.id
			JOIN mdl_groups g1 ON g1.id = gm.groupid
			JOIN mdl_course c1 ON c1.id = g1.courseid
			JOIN mdl_context ctx ON ctx.instanceid = c1.id
			JOIN mdl_role_assignments ra1 ON ra1.contextid = ctx.id AND u2.id = ra1.userid
			JOIN parametrizacion.ssp_tipo_roles tr1 ON tr1.cve_role = ra1.roleid
			JOIN mdl_role r1 ON r1.id = ra1.roleid
			WHERE u2.id=$1 and c1.id=$2
						order by name 
						), ' \ '::text)) AS rol
   $_$;


ALTER FUNCTION estadisticas.f_multirol_usuario(bigint, bigint) OWNER TO innovaedu;

--
-- Name: f_noaprobados(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_noaprobados(bigint) RETURNS SETOF integer
    LANGUAGE sql
    AS $_$
SELECT  
                CASE
                    WHEN co.vigente = 1 THEN 1
                    else 0
                END AS aprobados
           
           FROM   mdl_user  u
            JOIN mdl_groups_members gm ON gm.userid=u.id
     join mdl_groups g on g.id=gm.groupid
     JOIN mdl_course c on c.id= g.courseid 
   left  JOIN mdl_certificate ce ON ce.course = c.id
   left JOIN mdl_certificate_issues iss ON iss.certificateid = ce.id AND iss.userid =u.id
   left JOIN  cert.ssc_tab_cert_issues_conf co ON co.cert_issues_id = iss.id 
   where gm.userid=$1 

    
$_$;


ALTER FUNCTION estadisticas.f_noaprobados(bigint) OWNER TO innovaedu;

--
-- Name: f_procesos_tutores_rol(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_procesos_tutores_rol(bigint) RETURNS TABLE(tutor text, roleid bigint, perfil text)
    LANGUAGE sql
    AS $_$


 SELECT DISTINCT pg_catalog.concat(u.firstname, '', u.lastname) AS tutor, r.id as roleid,
        CASE
            WHEN tr.ind_tipo = 1 THEN pg_catalog.concat(r.name, '(', 'Administrador', ')')
            WHEN tr.ind_tipo = 2 THEN pg_catalog.concat(r.name, '(', 'Plana Docente', ')')
	    WHEN tr.ind_tipo = 3 THEN pg_catalog.concat(r.name, '(', 'Alumo', ')')
	    WHEN tr.ind_tipo = 4 THEN pg_catalog.concat(r.name, '(', 'Mesa de ayuda', ')')
            ELSE NULL::text
        END AS perfil
   FROM tutorias.mdl_userexp exp
   JOIN mdl_user u ON u.id = exp.userid
   JOIN mdl_role_assignments ra ON ra.userid = u.id
   JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid 
     JOIN mdl_role r ON r.id = ra.roleid
   where r.id=$1
$_$;


ALTER FUNCTION estadisticas.f_procesos_tutores_rol(bigint) OWNER TO innovaedu;

--
-- Name: f_resultados_comparativa(bigint); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION f_resultados_comparativa(bigint) RETURNS TABLE(cursoid bigint, curso text, fecha_inicio text, fecha_fin text)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT 
						
			c.id cursoid, CONCAT(c.fullname,' ',c.shortname) curso,
			TO_CHAR(TO_TIMESTAMP(c.startdate),'DD-TMMon-YYYY') as fecha_inicio,
			TO_CHAR( co.lastdate,'DD-TMMon-YYYY') as fecha_fin			

     from mdl_course c 
     JOIN public.mdl_course_config co ON co.course = c.id
     JOIN mdl_course_categories cc ON cc.id = c.category
     where cc. parent=$1


    
   
   
$_$;


ALTER FUNCTION estadisticas.f_resultados_comparativa(bigint) OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_p(); Type: FUNCTION; Schema: estadisticas; Owner: innovaedu
--

CREATE FUNCTION v_estadistica_curso_p() RETURNS TABLE(id_curso bigint, delegacion character, userid bigint, matricula character, ap_paterno character, ap_materno character, nombre character, nombre_completo text, ind_tipo integer, correo_electronico character, clave_adscripcion character, nombre_adscripcion character, nombre_dependencia character, nombre_categoria character, clave_categoria character, tipo_categoria character, numero_red character, telefono_laboral character, telefono_particular character, curso character, grupoid bigint, grupo character, calificacion numeric, estado_certificado numeric, certificado_vigente integer)
    LANGUAGE sql
    AS $$
 SELECT DISTINCT mdl_course.id AS id_curso, ssd_cat_delegacion.nom_delegacion AS delegacion, mdl_user.id AS userid, mdl_user.username AS matricula, mdl_user.pat AS ap_paterno, mdl_user.mat AS ap_materno, mdl_user.nom AS nombre, pg_catalog.concat(mdl_user.pat, ' ', mdl_user.mat, ' ', mdl_user.nom) AS nombre_completo, ssp_tipo_roles.ind_tipo, sgp_tab_preregistro_al.des_email_pers AS correo_electronico, sgp_tab_preregistro_al.cve_departamental AS clave_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion AS nombre_adscripcion, ssd_cat_dependencia.nom_dependencia AS nombre_dependencia, ssn_categoria.nom_nombre AS nombre_categoria, ssn_categoria.des_clave AS clave_categoria, ssn_tipo_catgoria.nom_nombre AS tipo_categoria, sgp_tab_preregistro_al.desc_numred AS numero_red, sgp_tab_preregistro_al.desc_teltrab AS telefono_laboral, sgp_tab_preregistro_al.desc_telpart AS telefono_particular, mdl_course.shortname AS curso, mdl_groups.id AS grupoid, mdl_groups.name AS grupo, mdl_grade_grades.finalgrade AS calificacion, COALESCE(mdl_course_config.estcert, 0::numeric) AS estado_certificado, COALESCE(ssc_tab_cert_issues_conf.vigente, 0) AS certificado_vigente
   FROM mdl_course
   JOIN mdl_course_config ON mdl_course_config.course = mdl_course.id
   JOIN mdl_groups ON mdl_groups.courseid = mdl_course.id
   JOIN mdl_groups_members ON mdl_groups_members.groupid = mdl_groups.id
   LEFT JOIN gestion.sgp_tab_preregistro_al ON sgp_tab_preregistro_al.cve_curso = mdl_course.id
   LEFT JOIN gestion.sgp_tab_usuario ON sgp_tab_usuario.nom_usuario::text = sgp_tab_preregistro_al.nom_usuario::text
   LEFT JOIN mdl_user ON mdl_groups_members.userid = mdl_user.id AND mdl_user.username::text = sgp_tab_preregistro_al.nom_usuario::text
   JOIN mdl_role_assignments ON mdl_user.id = mdl_role_assignments.userid
   JOIN parametrizacion.ssp_tipo_roles ON ssp_tipo_roles.cve_role = mdl_role_assignments.roleid AND (ssp_tipo_roles.ind_tipo = ANY (ARRAY[2, 3]))
   LEFT JOIN mdl_certificate ON mdl_certificate.course = mdl_course.id
   LEFT JOIN mdl_certificate_issues ON mdl_certificate_issues.certificateid = mdl_certificate.id AND mdl_certificate_issues.userid = mdl_user.id
   LEFT JOIN cert.ssc_tab_cert_issues_conf ON ssc_tab_cert_issues_conf.cert_issues_id = mdl_certificate_issues.id
   JOIN mdl_context ON mdl_context.instanceid = mdl_course.id
   LEFT JOIN mdl_grade_items ON mdl_grade_items.courseid = mdl_course.id AND mdl_grade_items.itemtype::text = 'course'::text
   LEFT JOIN mdl_grade_grades ON mdl_grade_grades.itemid = mdl_grade_items.id AND mdl_grade_grades.userid = mdl_user.id
   LEFT JOIN nomina.ssn_categoria ON ssn_categoria.cve_categoria = sgp_tab_preregistro_al.cve_cat
   LEFT JOIN nomina.ssn_tipo_catgoria ON ssn_tipo_catgoria.cve_tipo_categoria = ssn_categoria.cve_tipo_categoria
   LEFT JOIN departments.ssd_cat_depto_adscripcion ON ssd_cat_depto_adscripcion.cve_depto_adscripcion = sgp_tab_preregistro_al.cve_departamental
   LEFT JOIN departments.ssd_cat_dependencia ON ssd_cat_dependencia.cve_depto_adscripcion = ssd_cat_depto_adscripcion.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion ON ssd_cat_delegacion.cve_delegacion = ssd_cat_dependencia.cve_delegacion;

	     
$$;


ALTER FUNCTION estadisticas.v_estadistica_curso_p() OWNER TO innovaedu;

SET search_path = gestion, pg_catalog;

--
-- Name: categoria_pre(integer, character); Type: FUNCTION; Schema: gestion; Owner: innovaedu
--

CREATE FUNCTION categoria_pre(integer, character) RETURNS SETOF bigint
    LANGUAGE sql
    AS $_$
select * from(
select count(n.idcurso) as  cursos from (
select 	c.id as idcurso
	
   from (select * from mdl_course where category=$1) c 
   left JOIN mdl_course_categories cc ON cc.id = c.category
     JOIN gestion.sgp_tab_preregistro_al pre ON pre.cve_curso = c.id  
    left  JOIN mdl_user u ON  u.username::text = pre.nom_usuario
    
   WHERE u.username=$2)n)l 

   $_$;


ALTER FUNCTION gestion.categoria_pre(integer, character) OWNER TO innovaedu;

--
-- Name: f_mant_temp_accesos(); Type: FUNCTION; Schema: gestion; Owner: innovaedu
--

CREATE FUNCTION f_mant_temp_accesos() RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE

no_rows int;
BEGIN
 DELETE FROM gestion.sgp_tab_temp_usuario
 WHERE acceso< NOW() + INTERVAL '-1 Day';
 get diagnostics no_rows = ROW_COUNT;
 RETURN no_rows;
END;
$$;


ALTER FUNCTION gestion.f_mant_temp_accesos() OWNER TO innovaedu;

--
-- Name: f_rpt_niveles(character, character, integer, character); Type: FUNCTION; Schema: gestion; Owner: innovaedu
--

CREATE FUNCTION f_rpt_niveles(character, character, integer, character) RETURNS TABLE(id bigint, category bigint, fullname character, shortname character, startdate bigint, startdatepre date, lastdatepre date, cuotacurso integer, preact numeric, achsel numeric, num_cuotacont integer, num__nvl_cuota integer, ind_catalogo numeric, cve_categoria integer, cve_del character, cve_dept character, cve_nvlat integer, des_clave character, tipocur numeric, descategoria character)
    LANGUAGE sql
    AS $_$

SELECT public.mdl_course.id,public.mdl_course.category,
fullname,shortname,public.mdl_course.startdate,public.mdl_course_config.startdatepre,
public.mdl_course_config.lastdatepre,cuotacurso,public.mdl_course_config.preact,
public.mdl_course_config.achsel,num_cuotacont,num_nvl_cuota,ind_catalogo,gestion.sgp_tab_cuodel.cve_categoria,
cve_del,cve_dept,cve_nvlat,nomina.ssn_categoria.des_clave,mdl_course_config.tipocur,public.mdl_course_categories.name as descategoria

FROM public.mdl_course 
left join public.mdl_course_config on public.mdl_course_config.course=public.mdl_course.id
left join public.mdl_course_categories on public.mdl_course_categories.id=public.mdl_course.category
left join gestion.sgp_tab_cuodel on gestion.sgp_tab_cuodel.cve_curso=public.mdl_course.id
left join nomina.ssn_categoria on gestion.sgp_tab_cuodel.cve_categoria=nomina.ssn_categoria.cve_categoria
where public.mdl_course_config.preact=1 and public.mdl_course_config.achsel=0 
and  current_date BETWEEN public.mdl_course_config.startdatepre and public.mdl_course_config.lastdatepre 
and nomina.ssn_categoria.des_clave=$1 
and (gestion.sgp_tab_cuodel.cve_del is null or gestion.sgp_tab_cuodel.cve_del=$2) 
and (gestion.sgp_tab_cuodel.cve_nvlat is null or gestion.sgp_tab_cuodel.cve_nvlat=$3) 
and (gestion.sgp_tab_cuodel.cve_dept is null or gestion.sgp_tab_cuodel.cve_dept=$4)

$_$;


ALTER FUNCTION gestion.f_rpt_niveles(character, character, integer, character) OWNER TO innovaedu;

--
-- Name: f_rpt_pre_cursos(character); Type: FUNCTION; Schema: gestion; Owner: innovaedu
--

CREATE FUNCTION f_rpt_pre_cursos(character) RETURNS TABLE(id bigint, fullname character, shortname character, startdate bigint, startdatepre date, lastdatepre date, tipocur numeric)
    LANGUAGE sql
    AS $_$

SELECT distinct c.id,c.fullname,c.shortname,c.startdate,cc.startdatepre,cc.lastdatepre,cc.tipocur

FROM public.mdl_course c
left join public.mdl_course_config cc on cc.course=c.id
join gestion.sgp_tab_preregistro_al al on al.cve_curso=c.id

where cc.preact=1 and cc.achsel=0 and  
current_date BETWEEN cc.startdatepre 
and cc.lastdatepre and al.nom_usuario=$1

$_$;


ALTER FUNCTION gestion.f_rpt_pre_cursos(character) OWNER TO innovaedu;

--
-- Name: f_rpt_preregistro(integer); Type: FUNCTION; Schema: gestion; Owner: innovaedu
--

CREATE FUNCTION f_rpt_preregistro(integer) RETURNS TABLE(nom_usuario text, nom_paterno text, nom_materno text, nom_nombre text, des_email_pers text, des_email_inst text, nom_curp text, nombre text, cve_categoria integer, cve_tipo_categoria integer, idcategoria text, tiponomina character, desnivate text, cvenivate integer, nomdel text, cvdel character, descr text, atencion integer, ads text, cve_depto_adscripcion character, desc_teltrab character, desc_telpart character, desc_numred text, fchact date, tms_fecha_prereg timestamp without time zone, nom_pwd character, cve_curso bigint, desc_curso text, nombrecurso text, nombregrupo character, edo_pre numeric, ind_estado_preregistro text, ind_tipo_carga text)
    LANGUAGE sql
    AS $_$
SELECT DISTINCT al.nom_usuario, 
            u1.nom_paterno, 
            u1.nom_materno,
            u1.nom_nombre, 
            al.des_email_pers, 
            al.des_email_inst,
            u1.nom_curp, 
            cat.nom_nombre AS nombre, 
            al.cve_cat AS cve_categoria, 
            cat.cve_tipo_categoria, 
            cat.des_clave AS idcategoria, 
            cat.des_tipo_nomina AS tiponomina, 
            niv.des_nivel_atencion AS desnivate, 
            niv.cve_nivel_atencion AS cvenivate, 
            del.nom_delegacion AS nomdel, 
            del.cve_delegacion AS cvdel, 
            atn.des_unidad_atencion AS descr, 
            atn.cve_unidad_atencion AS atencion, 
            ads.nom_depto_adscripcion AS ads, 
            al.cve_departamental AS cve_depto_adscripcion, 
            al.desc_teltrab, 
            al.desc_telpart,
            al.desc_numred, 
             al.fchact, 
            al.tms_fecha_prereg, 
            al.nom_pwd, 
            al.cve_curso, 
            c.fullname AS desc_curso,
            c.shortname AS nombrecurso,
            g.name AS nombregrupo, 
            al.ind_estado_preregistro AS edo_pre,
      

		CASE WHEN al.ind_estado_preregistro = 0 THEN 'Pre-registro no realizado' ELSE 'Pre-registro realizado' END AS ind_estado_preregistro,
		CASE WHEN al.ind_tipo_carga =1 THEN 'Externo'
				 WHEN al.ind_tipo_carga =2 THEN 'Abierto' 
				 WHEN al.ind_tipo_carga =3 THEN 'Nominativo' 
				 WHEN al.ind_tipo_carga =4 THEN 'Extranjero' 
				 WHEN al.ind_tipo_carga =5 THEN 'Jubilado' 
				 WHEN al.ind_tipo_carga =6 THEN 'Especial' 
				 ELSE 'Sin clasificar' END AS ind_tipo_carga
				
                FROM (select * from gestion.sgp_tab_preregistro_al WHERE gestion.sgp_tab_preregistro_al.cve_curso=$1) as al

		
		LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON al.cve_departamental=ads.cve_depto_adscripcion
		LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion
		LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_departamento = del.cve_delegacion
		LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	
        
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	
		left join gestion.sgp_tab_usuario u1 on al.nom_usuario=u1.nom_usuario
		LEFT JOIN mdl_groups g ON al.cve_gposel = g.id
            	LEFT JOIN nomina.ssn_categoria cat ON al.cve_cat =cat.cve_categoria 
	        left join public.mdl_course c on al.cve_curso=c.id
	        

				  ORDER BY al.cve_departamental
$_$;


ALTER FUNCTION gestion.f_rpt_preregistro(integer) OWNER TO innovaedu;

SET search_path = parametrizacion, pg_catalog;

--
-- Name: f_menus_arbol(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_arbol(integer) RETURNS TABLE(nivel integer, des_menu character, orden integer)
    LANGUAGE sql
    AS $_$

select distinct  n.nivel, n.des_menu , n.orden  from (SELECT nivel1 as nivel, des_menu_n1 as des_menu, 1 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel2 as nivel , des_menu_n2 as des_menu, 2 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel3 as nivel, des_menu_n3 as des_menu, 3 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel4 as nivel, des_menu_n4 as des_menu, 4 as orden  from parametrizacion.f_menus_des($1)
union
SELECT nivel5 as nivel, des_menu_n5 as des_menu, 5 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel6 as nivel, des_menu_n6 as des_menu, 6 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel7 as nivel, des_menu_n7 as des_menu, 7 as orden  from parametrizacion.f_menus_des($1)


union 
SELECT nivel_i1 as nivel, des_menu_in1 as des_menu, 8 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel_i2 as nivel, des_menu_in2  as des_menu, 9 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel_i3 as nivel, des_menu_in3 as des_menu, 10 as orden  from parametrizacion.f_menus_des($1)
union
SELECT nivel_i4 as nivel, des_menu_in4 as des_menu, 11 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel_i5, des_menu_in5 as des_menu, 12 as orden  from parametrizacion.f_menus_des($1)
union 
SELECT nivel_i6 as nivel, des_menu_in6 as des_menu, 13 as orden  from parametrizacion.f_menus_des($1)) as n

where not nivel  isnull
order by n.orden

$_$;


ALTER FUNCTION parametrizacion.f_menus_arbol(integer) OWNER TO innovaedu;

--
-- Name: f_menus_des(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_des(integer) RETURNS TABLE(nivel1 integer, des_menu_n1 character, nivel2 integer, des_menu_n2 character, nivel3 integer, des_menu_n3 character, nivel4 integer, des_menu_n4 character, nivel5 integer, des_menu_n5 character, nivel6 integer, des_menu_n6 character, nivel7 integer, des_menu_n7 character, nivel_i1 integer, des_menu_in1 character, nivel_i2 integer, des_menu_in2 character, nivel_i3 integer, des_menu_in3 character, nivel_i4 integer, des_menu_in4 character, nivel_i5 integer, des_menu_in5 character, nivel_i6 integer, des_menu_in6 character, nivel_i7 integer, des_menu_in7 character)
    LANGUAGE sql
    AS $_$
SELECT  p7.cve_menu,p7.des_menu as des_menu,
	p6.cve_menu,p6.des_menu as des_menu,  
	p5.cve_menu,p5.des_menu as des_menu,  
	p4.cve_menu,p4.des_menu as des_menu,
	p3.cve_menu,p3.des_menu as des_menu,
	p2.cve_menu,p2.des_menu as des_menu,  
	p1.cve_menu,p1.des_menu as des_menu,  
	i1.cve_menu, i1.des_menu,
	i2.cve_menu, i2.des_menu,
	i3.cve_menu, i3.des_menu,
	i4.cve_menu, i4.des_menu,
	i5.cve_menu, i5.des_menu,
	i6.cve_menu, i6.des_menu,
	i7.cve_menu, i7.des_menu
	
 FROM (select * from parametrizacion.ssp_cat_menu where cve_menu=$1) m
left JOIN parametrizacion.ssp_cat_menu i1 on i1.cve_menu_padre=m.cve_menu 
left join parametrizacion.ssp_cat_menu p1 on p1.cve_menu=m.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i2 on i2.cve_menu_padre=i1.cve_menu 
left join parametrizacion.ssp_cat_menu p2 on p2.cve_menu=p1.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i3 on i3.cve_menu_padre=i2.cve_menu 
left join parametrizacion.ssp_cat_menu p3 on p3.cve_menu=p2.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i4 on i4.cve_menu_padre=i3.cve_menu 
left join parametrizacion.ssp_cat_menu p4 on p4.cve_menu=p3.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i5 on i5.cve_menu_padre=i4.cve_menu 
left join parametrizacion.ssp_cat_menu p5 on p5.cve_menu=p4.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i6 on i6.cve_menu_padre=i5.cve_menu 
left join parametrizacion.ssp_cat_menu p6 on p6.cve_menu=p5.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i7 on i7.cve_menu_padre=i2.cve_menu 
left join parametrizacion.ssp_cat_menu p7 on p7.cve_menu=p2.cve_menu_padre


$_$;


ALTER FUNCTION parametrizacion.f_menus_des(integer) OWNER TO innovaedu;

--
-- Name: f_menus_ph(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_ph(integer) RETURNS TABLE(cve_menu integer, des_menu character, cve_menu_padre integer, cve_rol integer, id numeric, ind_tipo text)
    LANGUAGE sql
    AS $_$


select distinct  n.nivel as cve_menu , n.des_menu,n.cve_menu_padre,  r.cve_rol, r.ind_activo AS id,  
	case when n.ind_tipo=1 then 'Menu'
        when n.ind_tipo=2  then 'Sub Menu'
        when n.ind_tipo=3  then 'Sub Menu'
        when n.ind_tipo=4  then 'Sub Menu'
        when n.ind_tipo=5  then 'Sub Menu'
        when n.ind_tipo=6  then 'Sub Menu'
        when n.ind_tipo=7  then 'Sub Menu'
        when n.ind_tipo=8  then 'Sub Menu'
        when n.ind_tipo=9  then 'Sub Menu'
        when n.ind_tipo=10 then 'Boton'
    end as ind_tipo
 from (SELECT nivel1 as nivel, des_menu_n1 as des_menu,cve_menu_padre1  as cve_menu_padre, ind_tipo1 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel2 as nivel , des_menu_n2 as des_menu, cve_menu_padre2 as cve_menu_padre, ind_tipo2 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel3 as nivel, des_menu_n3 as des_menu, cve_menu_padre3 as cve_menu_padre, ind_tipo3 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel4 as nivel, des_menu_n4 as des_menu, cve_menu_padre4 as cve_menu_padre, ind_tipo4 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union
SELECT nivel5 as nivel, des_menu_n5 as des_menu, cve_menu_padre5 as cve_menu_padre, ind_tipo5 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel6 as nivel, des_menu_n6 as des_menu, cve_menu_padre6 as cve_menu_padre, ind_tipo6 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel7 as nivel, des_menu_n7 as des_menu, cve_menu_padre7 as cve_menu_padre , ind_tipo7 as ind_tipo from parametrizacion.f_menus_ph_rol($1)


union 
SELECT nivel_i1 as nivel, des_menu_in1 as des_menu, cve_menu_padrei1 as cve_menu_padre, ind_tipoi1 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i2 as nivel, des_menu_in2  as des_menu, cve_menu_padrei2 as cve_menu_padre, ind_tipoi2 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i3 as nivel, des_menu_in3 as des_menu, cve_menu_padrei3 as cve_menu_padre, ind_tipoi3 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union
SELECT nivel_i4 as nivel, des_menu_in4 as des_menu, cve_menu_padrei4 as cve_menu_padre , ind_tipoi4 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i5, des_menu_in5 as des_menu, cve_menu_padrei5 as cve_menu_padre , ind_tipoi5 as ind_tipo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i6 as nivel, des_menu_in6 as des_menu, cve_menu_padrei6 as cve_menu_padre , ind_tipoi6 as ind_tipo from parametrizacion.f_menus_ph_rol($1)) as n
 JOIN parametrizacion.ssp_tab_usuario_menu r on r.cve_menu=n.nivel

where not nivel  isnull

order by n.nivel

$_$;


ALTER FUNCTION parametrizacion.f_menus_ph(integer) OWNER TO innovaedu;

--
-- Name: f_menus_ph_rol(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_ph_rol(integer) RETURNS TABLE(nivel1 integer, des_menu_n1 character, cve_menu_padre1 integer, ind_tipo1 integer, ind_activo_p1 numeric, nivel2 integer, des_menu_n2 character, cve_menu_padre2 integer, ind_tipo2 integer, ind_activo_p2 numeric, nivel3 integer, des_menu_n3 character, cve_menu_padre3 integer, ind_tipo3 integer, ind_activo_p3 numeric, nivel4 integer, des_menu_n4 character, cve_menu_padre4 integer, ind_tipo4 integer, ind_activo_p4 numeric, nivel5 integer, des_menu_n5 character, cve_menu_padre5 integer, ind_tipo5 integer, ind_activo_p5 numeric, nivel6 integer, des_menu_n6 character, cve_menu_padre6 integer, ind_tipo6 integer, ind_activo_p6 numeric, nivel7 integer, des_menu_n7 character, cve_menu_padre7 integer, ind_tipo7 integer, ind_activo_p7 numeric, nivel_i1 integer, des_menu_in1 character, cve_menu_padrei1 integer, ind_tipoi1 integer, ind_activo_i1 numeric, nivel_i2 integer, des_menu_in2 character, cve_menu_padrei2 integer, ind_tipoi2 integer, ind_activo_i2 numeric, nivel_i3 integer, des_menu_in3 character, cve_menu_padrei3 integer, ind_tipoi3 integer, ind_activo_i3 numeric, nivel_i4 integer, des_menu_in4 character, cve_menu_padrei4 integer, ind_tipoi4 integer, ind_activo_i4 numeric, nivel_i5 integer, des_menu_in5 character, cve_menu_padrei5 integer, ind_tipoi5 integer, ind_activo_i5 numeric, nivel_i6 integer, des_menu_in6 character, cve_menu_padrei6 integer, ind_tipoi6 integer, ind_activo_i6 numeric, nivel_i7 integer, des_menu_in7 character, cve_menu_padrei7 integer, ind_tipoi7 integer, ind_activo_i7 numeric)
    LANGUAGE sql
    AS $_$
SELECT  p7.cve_menu,p7.des_menu as des_menu,p7.cve_menu_padre, p7.ind_tipo,p7.ind_activo,
	p6.cve_menu,p6.des_menu as des_menu,p6.cve_menu_padre,p6.ind_tipo,p6.ind_activo,
	p5.cve_menu,p5.des_menu as des_menu, p5.cve_menu_padre,p5.ind_tipo,p5.ind_activo,
	p4.cve_menu,p4.des_menu as des_menu,p4.cve_menu_padre,p4.ind_tipo,p4.ind_activo,
	p3.cve_menu,p3.des_menu as des_menu,p3.cve_menu_padre,p3.ind_tipo,p3.ind_activo,
	p2.cve_menu,p2.des_menu as des_menu, p2.cve_menu_padre,p2.ind_tipo,p2.ind_activo,
	p1.cve_menu,p1.des_menu as des_menu, p1.cve_menu_padre,p1.ind_tipo,p1.ind_activo,
	i1.cve_menu, i1.des_menu, i1.cve_menu_padre, i1.ind_tipo,i1.ind_activo,
	i2.cve_menu, i2.des_menu,i2.cve_menu_padre,i2.ind_tipo,i2.ind_activo,
	i3.cve_menu, i3.des_menu,i3.cve_menu_padre,i3.ind_tipo,i3.ind_activo,
	i4.cve_menu, i4.des_menu,i4.cve_menu_padre,i4.ind_tipo,i4.ind_activo,
	i5.cve_menu, i5.des_menu,i5.cve_menu_padre,i5.ind_tipo,i5.ind_activo,
	i6.cve_menu, i6.des_menu,i6.cve_menu_padre,i6.ind_tipo,i6.ind_activo,
	i7.cve_menu, i7.des_menu,i7.cve_menu_padre,i7.ind_tipo,i7.ind_activo
	
 FROM (select * from parametrizacion.ssp_cat_menu where cve_menu=$1) m
left JOIN parametrizacion.ssp_cat_menu i1 on i1.cve_menu_padre=m.cve_menu 
left join parametrizacion.ssp_cat_menu p1 on p1.cve_menu=m.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i2 on i2.cve_menu_padre=i1.cve_menu 
left join parametrizacion.ssp_cat_menu p2 on p2.cve_menu=p1.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i3 on i3.cve_menu_padre=i2.cve_menu 
left join parametrizacion.ssp_cat_menu p3 on p3.cve_menu=p2.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i4 on i4.cve_menu_padre=i3.cve_menu 
left join parametrizacion.ssp_cat_menu p4 on p4.cve_menu=p3.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i5 on i5.cve_menu_padre=i4.cve_menu 
left join parametrizacion.ssp_cat_menu p5 on p5.cve_menu=p4.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i6 on i6.cve_menu_padre=i5.cve_menu 
left join parametrizacion.ssp_cat_menu p6 on p6.cve_menu=p5.cve_menu_padre
left JOIN parametrizacion.ssp_cat_menu i7 on i7.cve_menu_padre=i2.cve_menu 
left join parametrizacion.ssp_cat_menu p7 on p7.cve_menu=p2.cve_menu_padre


$_$;


ALTER FUNCTION parametrizacion.f_menus_ph_rol(integer) OWNER TO innovaedu;

--
-- Name: f_menus_ph_sn(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_ph_sn(integer) RETURNS TABLE(cve_menu integer, des_menu character, cve_menu_padre integer, ind_activo numeric)
    LANGUAGE sql
    AS $_$


select  distinct n.nivel as cve_menu ,n.des_menu,n.cve_menu_padre, n.ind_activo
      
 from (SELECT nivel1 as nivel, des_menu_n1 as des_menu,cve_menu_padre1  as cve_menu_padre, ind_tipo1 as ind_tipo, ind_activo_p1 as ind_activo  from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel2 as nivel , des_menu_n2 as des_menu, cve_menu_padre2 as cve_menu_padre, ind_tipo2 as ind_tipo, ind_activo_p2 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel3 as nivel, des_menu_n3 as des_menu, cve_menu_padre3 as cve_menu_padre, ind_tipo3 as ind_tipo, ind_activo_p3 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel4 as nivel, des_menu_n4 as des_menu, cve_menu_padre4 as cve_menu_padre, ind_tipo4 as ind_tipo, ind_activo_p4 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union
SELECT nivel5 as nivel, des_menu_n5 as des_menu, cve_menu_padre5 as cve_menu_padre, ind_tipo5 as ind_tipo, ind_activo_p5 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel6 as nivel, des_menu_n6 as des_menu, cve_menu_padre6 as cve_menu_padre, ind_tipo6 as ind_tipo, ind_activo_p6 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel7 as nivel, des_menu_n7 as des_menu, cve_menu_padre7 as cve_menu_padre , ind_tipo7 as ind_tipo, ind_activo_p7 as ind_activo from parametrizacion.f_menus_ph_rol($1)


union 
SELECT nivel_i1 as nivel, des_menu_in1 as des_menu, cve_menu_padrei1 as cve_menu_padre, ind_tipoi1 as ind_tipo , ind_activo_i1 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i2 as nivel, des_menu_in2  as des_menu, cve_menu_padrei2 as cve_menu_padre, ind_tipoi2 as ind_tipo, ind_activo_i2 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i3 as nivel, des_menu_in3 as des_menu, cve_menu_padrei3 as cve_menu_padre, ind_tipoi3 as ind_tipo, ind_activo_i3 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union
SELECT nivel_i4 as nivel, des_menu_in4 as des_menu, cve_menu_padrei4 as cve_menu_padre , ind_tipoi4 as ind_tipo, ind_activo_i4 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i5 as nivel, des_menu_in5 as des_menu, cve_menu_padrei5 as cve_menu_padre , ind_tipoi5 as ind_tipo,ind_activo_i5 as ind_activo from parametrizacion.f_menus_ph_rol($1)
union 
SELECT nivel_i6 as nivel, des_menu_in6 as des_menu, cve_menu_padrei6 as cve_menu_padre , ind_tipoi6 as ind_tipo, ind_activo_i6 as ind_activo from parametrizacion.f_menus_ph_rol($1)) as n
-- JOIN parametrizacion.ssp_tab_usuario_menu r on r.cve_menu=n.nivel
 
where not nivel  isnull

order by n.nivel

$_$;


ALTER FUNCTION parametrizacion.f_menus_ph_sn(integer) OWNER TO innovaedu;

--
-- Name: f_menus_rol(integer, integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_rol(integer, integer) RETURNS TABLE(cve_menu integer, des_menu text, cve_menu_padre integer, cve_rol integer, ind_activo numeric)
    LANGUAGE sql
    AS $_$
SELECT distinct m2.cve_menu,m2.des_menu as des_menu,
       m2.cve_menu_padre, r.cve_rol, r.ind_activo

FROM (select * from parametrizacion.ssp_cat_menu where cve_menu_padre =$1) m
LEFT JOIN parametrizacion.ssp_cat_menu m2 on m.cve_menu=m2.cve_menu_padre or m2.cve_menu_padre=$1
LEFT JOIN parametrizacion.ssp_tab_usuario_menu r on r.cve_menu=m2.cve_menu
LEFT JOIN parametrizacion.ssp_cat_menu m3 on m2.cve_menu_padre=m3.cve_menu_padre
LEFT JOIN parametrizacion.ssp_cat_menu m4 on m3.cve_menu_padre=m4.cve_menu_padre
LEFT JOIN parametrizacion.ssp_cat_menu m5 on m4.cve_menu_padre=m5.cve_menu_padre
LEFT JOIN parametrizacion.ssp_cat_menu m6 on m5.cve_menu_padre=m6.cve_menu_padre
LEFT JOIN parametrizacion.ssp_cat_menu m7 on m6.cve_menu_padre=m7.cve_menu_padre
WHERE r.cve_rol=$2

order by m2.cve_menu

$_$;


ALTER FUNCTION parametrizacion.f_menus_rol(integer, integer) OWNER TO innovaedu;

--
-- Name: f_menus_sied(bigint); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_sied(bigint) RETURNS TABLE(userid bigint, roleid bigint, cve_menu integer, des_menu character, ref_url character, num_posicion smallint, cve_menu_padre integer, cve_rol integer, ind_activo numeric)
    LANGUAGE sql
    AS $_$

SELECT  distinct u.id as userid, ra.roleid, m.cve_menu, 
		 m.des_menu as des_menu, m.ref_url,
		 m.num_posicion, 
		 
			case 
				when m.cve_menu_padre is null then 0
			else 
				m.cve_menu_padre
			end as cve_menu_padre, 
			
		 um.cve_rol, um.ind_activo
      
	FROM (select * from mdl_user where id=$1) u 
	JOIN mdl_role_assignments ra ON ra.userid = u.id 
	JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
	JOIN mdl_role rr ON rr.id = ra.roleid 
 
	JOIN  parametrizacion.ssp_tab_usuario_menu um  ON tr.cve_role=um.cve_rol or um.cve_usuario=u.id
	JOIN  parametrizacion.ssp_cat_menu m on  um.cve_menu=m.cve_menu and m.ind_tipo<>10
	where m.ind_activo=1
	ORDER BY cve_menu_padre,m.num_posicion

  
$_$;


ALTER FUNCTION parametrizacion.f_menus_sied(bigint) OWNER TO innovaedu;

--
-- Name: f_menus_sied_admin(); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_sied_admin() RETURNS TABLE(userid text, roleid text, cve_menu integer, des_menu character, ref_url character, num_posicion smallint, cve_menu_padre integer, cve_rol text, ind_activo numeric)
    LANGUAGE sql
    AS $$

SELECT  distinct'','', m.cve_menu, 
		 m.des_menu as des_menu, m.ref_url,
		 m.num_posicion, 
		 
			case 
				when m.cve_menu_padre is null then 0
			else 
				m.cve_menu_padre
			end as cve_menu_padre, 
			
		 '', um.ind_activo
      
	FROM mdl_user u 
	JOIN  parametrizacion.ssp_tab_usuario_menu um  ON um.cve_usuario=u.id
	JOIN  parametrizacion.ssp_cat_menu m on  um.cve_menu=m.cve_menu and m.ind_tipo<>10
	JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role =um.cve_rol
	JOIN mdl_role rr ON rr.id = tr.cve_role
 	WHERE tr.cve_role=1 and m.ind_activo=1 
	ORDER BY cve_menu_padre,m.num_posicion

  
$$;


ALTER FUNCTION parametrizacion.f_menus_sied_admin() OWNER TO innovaedu;

--
-- Name: f_menus_sied_conf(bigint); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_sied_conf(bigint) RETURNS TABLE(userid bigint, roleid bigint, cve_menu integer, des_menu character, ref_url character, num_posicion smallint, cve_menu_padre integer, cve_rol integer, ind_activo numeric)
    LANGUAGE sql
    AS $_$

SELECT  distinct u.id as userid, ra.roleid, m.cve_menu, 
		 m.des_menu as des_menu, m.ref_url,
		 m.num_posicion, 
		 
			case 
				when m.cve_menu_padre is null then 0
			else 
				m.cve_menu_padre
			end as cve_menu_padre, 
			
		 um.cve_rol, um.ind_activo
      
	FROM (select * from mdl_user where id=$1) u 
	JOIN mdl_role_assignments ra ON ra.userid = u.id 
	JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
	JOIN mdl_role rr ON rr.id = ra.roleid 
 
	JOIN  parametrizacion.ssp_tab_usuario_menu um  ON (tr.cve_role=um.cve_rol or um.cve_usuario=u.id) and um.ind_activo=1
	JOIN  parametrizacion.ssp_cat_menu m on  um.cve_menu=m.cve_menu 
	ORDER BY cve_menu_padre,m.num_posicion

  
$_$;


ALTER FUNCTION parametrizacion.f_menus_sied_conf(bigint) OWNER TO innovaedu;

--
-- Name: f_menus_sied_preview(bigint); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_menus_sied_preview(bigint) RETURNS TABLE(userid bigint, roleid bigint, cve_menu integer, des_menu character, ref_url character, num_posicion smallint, cve_menu_padre integer, cve_rol integer, ind_activo numeric)
    LANGUAGE sql
    AS $_$

SELECT  distinct u.id as userid, ra.roleid, m.cve_menu, 
		 m.des_menu as des_menu, m.ref_url,
		 m.num_posicion, 
		 
			case 
				when m.cve_menu_padre is null then 0
			else 
				m.cve_menu_padre
			end as cve_menu_padre, 
			
		 um.cve_rol, um.ind_activo
      
	FROM (select * from mdl_user where id=$1) u 
	JOIN mdl_role_assignments ra ON ra.userid = u.id 
	JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
	JOIN mdl_role rr ON rr.id = ra.roleid 
 
	JOIN  parametrizacion.ssp_tab_usuario_menu um  ON (tr.cve_role=um.cve_rol or um.cve_usuario=u.id)
	JOIN  parametrizacion.ssp_cat_menu m on  um.cve_menu=m.cve_menu 
	ORDER BY cve_menu_padre,m.num_posicion

  
$_$;


ALTER FUNCTION parametrizacion.f_menus_sied_preview(bigint) OWNER TO innovaedu;

--
-- Name: f_perfil(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_perfil(integer) RETURNS SETOF integer
    LANGUAGE sql
    AS $_$
 SELECT DISTINCT tr.ind_tipo as perfil
 
   FROM (SELECT * FROM mdl_user WHERE id=$1)  u 
   JOIN mdl_role_assignments ra ON ra.userid = u.id
   JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
   JOIN mdl_role r ON r.id = ra.roleid

$_$;


ALTER FUNCTION parametrizacion.f_perfil(integer) OWNER TO innovaedu;

--
-- Name: f_perfiles_rol(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION f_perfiles_rol(integer) RETURNS TABLE(id bigint, name character, id_perfil integer, perfil character)
    LANGUAGE sql
    AS $$
 SELECT DISTINCT r.id, r.name, tr.ind_tipo as id_perfil, pm.descripcion as perfil
 
   FROM  mdl_user   u 
   JOIN mdl_role_assignments ra ON ra.userid = u.id
   JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid
   join parametrizacion.ssp_cat_perfil_nombre pm on pm.id_tipo= tr.ind_tipo
   JOIN mdl_role r ON r.id = ra.roleid

$$;


ALTER FUNCTION parametrizacion.f_perfiles_rol(integer) OWNER TO innovaedu;

--
-- Name: get_arbol_menu(integer); Type: FUNCTION; Schema: parametrizacion; Owner: innovaedu
--

CREATE FUNCTION get_arbol_menu(menuid integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	menu_row RECORD;	
BEGIN
	SELECT INTO menu_row cve_menu,cve_menu_padre,des_menu FROM parametrizacion.ssp_cat_menu menu WHERE menu.cve_menu = menuid;
	IF(menu_row.cve_menu_padre IS NULL OR menu_row.cve_menu_padre = menu_row.cve_menu)THEN
		--return dept_row.cve_depto_adscripcion||':hijo';		
		return menu_row.des_menu;		
	ELSE
		--return dept_row.cve_depto_adscripcion_padre||':padre';
		return menu_row.des_menu||'/'||parametrizacion.get_arbol_menu(menu_row.cve_menu_padre);
	END IF;	
END;
$$;


ALTER FUNCTION parametrizacion.get_arbol_menu(menuid integer) OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: f_get_tipo_recurso(integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION f_get_tipo_recurso(p_tiporecurso integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
	tipo RECORD;
BEGIN 
    SELECT INTO tipo CASE p_tiporecurso
        WHEN 1 THEN 'Tarea'
        WHEN 2 THEN 'Chat'
        WHEN 5 THEN 'Foro'
        WHEN 12 THEN 'Cuestionario'
        WHEN 14 THEN 'Scorm'
        WHEN 16 THEN 'Wiki'
        WHEN 20 THEN 'Blog'
        WHEN 21 THEN 'Chat ajax'
        ELSE NULL
    END AS "valor";
	return tipo.valor;
END;
$$;


ALTER FUNCTION public.f_get_tipo_recurso(p_tiporecurso integer) OWNER TO innovaedu;

--
-- Name: insertarexterno(integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertarexterno(integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcurso ALIAS FOR $1;
  ext_cursor  CURSOR FOR select * from mdl_elementoscal where module in(2,16,20,21) and idcurso=idcurso;
  externo     mdl_elementoscal%ROWTYPE; 
  fechaact timestamp;
  sal varchar;
  alu_cursor  refcursor;
  alumnos      record;
  calif    RECORD;
  val integer;




BEGIN
sal:='1';
fechaact :='now';

OPEN ext_cursor;
  --abre cursor  
   LOOP
      FETCH ext_cursor INTO externo;  
      EXIT WHEN NOT FOUND;
            OPEN alu_cursor FOR SELECT mdl_user.id FROM mdl_course 
	  INNER JOIN mdl_context ON mdl_context.instanceid = mdl_course.id 
	  INNER JOIN mdl_role_assignments ON mdl_context.id = mdl_role_assignments.contextid
	  INNER JOIN mdl_role ON mdl_role.id = mdl_role_assignments.roleid
	  INNER JOIN mdl_user ON mdl_user.id = mdl_role_assignments.userid
	  WHERE mdl_role.id = 5 AND mdl_course.id = idcurso;
          LOOP  	    
           FETCH alu_cursor INTO alumnos;  
      	    EXIT WHEN NOT FOUND;
            
            select into calif *  from mdl_calificaciones where idelemento=externo.id and userid=alumnos.id;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val=1;
              ELSE
              val:=val+1;
              END IF;
              insert into mdl_calificaciones values(val,externo.id,alumnos.id,0,fechaact,fechaact,'WEB',0);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return '0';
              END IF;

            END IF;
         END LOOP;

      CLOSE alu_cursor;
  --cierra cursor
END LOOP;

CLOSE ext_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertarexterno(integer) OWNER TO innovaedu;

--
-- Name: insertcal(integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcal(integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcurso ALIAS FOR $1;
  prog_cursor  CURSOR FOR select * from mdl_grade_items where courseid=idcurso and itemmodule != '';
  programa     mdl_grade_items%ROWTYPE; 
  moduleitem   RECORD;
  elemcal    RECORD;
  fechaact timestamp;
  sal varchar;
  grades_cursor  refcursor;
  grades      mdl_grade_grades%ROWTYPE;
  calif    RECORD;
  val integer;
  cal numeric(10,5);




BEGIN
sal:='1';
fechaact :='now';

OPEN prog_cursor;
  --abre cursor  
    LOOP
      FETCH prog_cursor INTO programa;  
      EXIT WHEN NOT FOUND;
      select into moduleitem  *  from mdl_modules where name=programa.itemmodule;
      select into elemcal * from mdl_elementoscal where module=moduleitem.id and instance=programa.iteminstance and idcurso=idcurso;
      IF elemcal.id IS NOT NULL THEN
      /*actualiza*/
      update mdl_elementoscal set calmax=programa.grademax,calmin=programa.grademin,calpass=programa.gradepass,nomelem=programa.itemname where id=elemcal.id;
      IF NOT FOUND THEN
         raise exception 'No actualizo1';
         return sal= '0';
      END IF;
      IF(sal= '1') then
      OPEN grades_cursor FOR select * from mdl_grade_grades where itemid=programa.id;
          LOOP
      	    FETCH grades_cursor INTO grades;  
      	    EXIT WHEN NOT FOUND;
            --Checar scoes
            IF ((moduleitem.id = 14) and (programa.grademax <> 1)) THEN
              cal:= (grades.finalgrade*100)/programa.grademax;
              cal:= round(cal,5);
            ELSE
              cal:=grades.finalgrade;
            END IF;
            --checar scoes

            select into calif *  from mdl_calificaciones where idelemento=elemcal.id and userid=grades.userid;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val=1;
              ELSE
              val:=val+1;
              END IF;
              --insert into mdl_calificaciones values(val,elemcal.id,grades.userid,grades.finalgrade,fechaact,fechaact,'WEB',grades.id);
              insert into mdl_calificaciones values(val,elemcal.id,grades.userid,cal,fechaact,fechaact,'WEB',grades.id);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return '0';
              END IF;

            ELSE
	    --actualiza
	      --update mdl_calificaciones set idelemento=elemcal.id,userid=grades.userid,finalcal=grades.finalgrade,idgrade=grades.id,timemodified=fechaact,responsable='WEB' where id=calif.id;
              update mdl_calificaciones set idelemento=elemcal.id,userid=grades.userid,finalcal=cal,idgrade=grades.id,timemodified=fechaact,responsable='WEB' where id=calif.id;
      	      IF NOT FOUND THEN
                  raise exception 'No actualizo2';
                  return '0';
              END IF;

	    END IF;

           END LOOP;
      CLOSE grades_cursor;
      
      END IF;
      
      END IF;
      
          END LOOP;
  --cierra cursor
CLOSE prog_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertcal(integer) OWNER TO innovaedu;

--
-- Name: insertcal2(integer, integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcal2(integer, integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcur ALIAS FOR $1;
  idgrupo ALIAS FOR $2;
  prog_cursor  CURSOR FOR select * from mdl_grade_items where courseid=idcur and itemmodule != '';
  programa     mdl_grade_items%ROWTYPE; 
  moduleitem   RECORD;
  elemcal    RECORD;
  fechaact timestamp;
  sal varchar;
  grades_cursor  refcursor;
  grades      record;
  calif    RECORD;
  val integer;
  cal numeric(10,5);




BEGIN
sal:='1';
fechaact :='now';

OPEN prog_cursor;
  --abre cursor  
    LOOP
      FETCH prog_cursor INTO programa;  
      EXIT WHEN NOT FOUND;
      select into moduleitem  *  from mdl_modules where name=programa.itemmodule;
      select into elemcal * from mdl_elementoscal where module=moduleitem.id and instance=programa.iteminstance and idcurso=idcur;
      IF elemcal.id IS NOT NULL THEN
      /*actualiza*/
      update mdl_elementoscal set calmax=programa.grademax,calmin=programa.grademin,calpass=programa.gradepass,nomelem=programa.itemname where id=elemcal.id;
      IF NOT FOUND THEN
         raise exception 'No actualizo1';
         return sal= '0';
      END IF;
      IF(sal= '1') then
      --OPEN grades_cursor FOR select * from mdl_grade_grades where itemid=programa.id;
      OPEN grades_cursor FOR select mdl_grade_grades.id,mdl_grade_grades.userid,mdl_grade_grades.finalgrade from mdl_groups_members inner join mdl_grade_grades on mdl_grade_grades.userid=mdl_groups_members.userid inner join mdl_groups on mdl_groups.id=mdl_groups_members.groupid where mdl_grade_grades.itemid=programa.id and mdl_groups.id=idgrupo and mdl_groups.courseid=idcur;
          LOOP
      	    FETCH grades_cursor INTO grades;  
      	    EXIT WHEN NOT FOUND;
            --
            IF ((moduleitem.id = 14) and (programa.grademax <> 1)) THEN
              cal:=(grades.finalgrade*100)/programa.grademax;
            ELSE
              cal:=grades.finalgrade;
            END IF;

            --
            select into calif *  from mdl_calificaciones where idelemento=elemcal.id and userid=grades.userid;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val=1;
              ELSE
              val:=val+1;
              END IF;
              insert into mdl_calificaciones values(val,elemcal.id,grades.userid,cal,fechaact,fechaact,'WEB',grades.id);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return sal= '0';
              END IF;

            ELSE
	    --actualiza
	      update mdl_calificaciones set idelemento=elemcal.id,userid=grades.userid,finalcal=cal,idgrade=grades.id,timemodified=fechaact,responsable='WEB' where id=calif.id;
      	      IF NOT FOUND THEN
                  raise exception 'No actualizo2';
                  return sal= '0';
              END IF;

	    END IF;

           END LOOP;
      CLOSE grades_cursor;
      
      END IF;
      
      END IF;
      
          END LOOP;
  --cierra cursor
CLOSE prog_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertcal2(integer, integer) OWNER TO innovaedu;

--
-- Name: insertcal3(integer, integer, integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcal3(integer, integer, integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcur ALIAS FOR $1;
  idgrupo ALIAS FOR $2;
  idmodunir ALIAS FOR $3;
  /*prog_cursor  CURSOR FOR select * from mdl_grade_items where courseid=idcurso and itemmodule != '';*/
  prog_cursor  CURSOR FOR select * from mdl_grade_items where courseid=idcur and itemmodule != '' and iteminstance in(select instance from mdl_elementoscal inner join mdl_unidades on mdl_unidades.id=mdl_elementoscal.idgmoduni where idcurso=idcur and idmoduni=idmodunir);
  programa     mdl_grade_items%ROWTYPE; 
  moduleitem   RECORD;
  elemcal    RECORD;
  fechaact timestamp;
  sal varchar;
  grades_cursor  refcursor;
  grades      record;
  calif    RECORD;
  val integer;
  cal numeric(10,5);




BEGIN
sal:='1';
fechaact :='now';

OPEN prog_cursor;
  --abre cursor  
    LOOP
      FETCH prog_cursor INTO programa;  
      EXIT WHEN NOT FOUND;
      select into moduleitem  *  from mdl_modules where name=programa.itemmodule;
      select into elemcal * from mdl_elementoscal where module=moduleitem.id and instance=programa.iteminstance and idcurso=idcur;
      IF elemcal.id IS NOT NULL THEN
      /*actualiza*/
      update mdl_elementoscal set calmax=programa.grademax,calmin=programa.grademin,calpass=programa.gradepass,nomelem=programa.itemname where id=elemcal.id;
      IF NOT FOUND THEN
         raise exception 'No actualizo1';
         return sal= '0';
      END IF;
      IF(sal= '1') then
      --OPEN grades_cursor FOR select * from mdl_grade_grades where itemid=programa.id;
      OPEN grades_cursor FOR select mdl_grade_grades.id,mdl_grade_grades.userid,mdl_grade_grades.finalgrade from mdl_groups_members inner join mdl_grade_grades on mdl_grade_grades.userid=mdl_groups_members.userid inner join mdl_groups on mdl_groups.id=mdl_groups_members.groupid where mdl_grade_grades.itemid=programa.id and mdl_groups.id=idgrupo and mdl_groups.courseid=idcur;
          LOOP
      	    FETCH grades_cursor INTO grades;  
      	    EXIT WHEN NOT FOUND;
            --
            IF ((moduleitem.id = 14) and (programa.grademax <> 1)) THEN
              cal:=(grades.finalgrade*100)/programa.grademax;
            ELSE
              cal:=grades.finalgrade;
            END IF;

            --
            select into calif *  from mdl_calificaciones where idelemento=elemcal.id and userid=grades.userid;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val=1;
              ELSE
              val:=val+1;
              END IF;
              insert into mdl_calificaciones values(val,elemcal.id,grades.userid,cal,fechaact,fechaact,'WEB',grades.id);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return sal= '0';
              END IF;

            ELSE
	    --actualiza
	      update mdl_calificaciones set idelemento=elemcal.id,userid=grades.userid,finalcal=cal,idgrade=grades.id,timemodified=fechaact,responsable='WEB' where id=calif.id;
      	      IF NOT FOUND THEN
                  raise exception 'No actualizo2';
                  return sal= '0';
              END IF;

	    END IF;

           END LOOP;
      CLOSE grades_cursor;
      
      END IF;
      
      END IF;
      
          END LOOP;
  --cierra cursor
CLOSE prog_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertcal3(integer, integer, integer) OWNER TO innovaedu;

--
-- Name: insertcalext(integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcalext(integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcurso ALIAS FOR $1;
  ext_cursor  CURSOR FOR select * from mdl_elementoscal where module in(2,16,20,21) and idcurso=idcurso;
  externo     mdl_elementoscal%ROWTYPE; 
  fechaact timestamp;
  sal varchar;
  alu_cursor  refcursor;
  alumnos      record;
  calif    RECORD;
  val integer;




BEGIN
sal:='1';
fechaact :='now';

OPEN ext_cursor;
  --abre cursor  
    LOOP
      FETCH ext_cursor INTO externo;  
      EXIT WHEN NOT FOUND;
            OPEN alu_cursor FOR SELECT mdl_user.id FROM mdl_course 
	  INNER JOIN mdl_context ON mdl_context.instanceid = mdl_course.id 
	  INNER JOIN mdl_role_assignments ON mdl_context.id = mdl_role_assignments.contextid
	  INNER JOIN mdl_role ON mdl_role.id = mdl_role_assignments.roleid
	  INNER JOIN mdl_user ON mdl_user.id = mdl_role_assignments.userid
	  WHERE mdl_role.id = 5 AND mdl_course.id = idcurso;
          LOOP
      	    FETCH alu_cursor INTO alumnos;  
      	    EXIT WHEN NOT FOUND;
            
            select into calif *  from mdl_calificaciones where idelemento=externo.id and userid=alumnos.id;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val:=1;
              ELSE
              val:=val+1;
              END IF;
              insert into mdl_calificaciones values(val,externo.id,alumnos.id,0,fechaact,fechaact,'WEB',0);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return '0';
              END IF;

            END IF;


          END LOOP;
      CLOSE alu_cursor;
      
        END LOOP;
  --cierra cursor
CLOSE ext_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertcalext(integer) OWNER TO innovaedu;

--
-- Name: insertcalexterno2(integer, integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcalexterno2(integer, integer) RETURNS character varying
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcur ALIAS FOR $1;
  idgrupo ALIAS FOR $2;
  ext_cursor  CURSOR FOR select * from mdl_elementoscal where module in(2,16,20,21) and idcurso=idcur;
  externo     mdl_elementoscal%ROWTYPE; 
  fechaact timestamp;
  sal varchar;
  alu_cursor  refcursor;
  alumnos      record;
  calif    RECORD;
  val integer;




BEGIN
sal:='1';
fechaact :='now';

OPEN ext_cursor;
  --abre cursor  
    LOOP
      FETCH ext_cursor INTO externo;  
      EXIT WHEN NOT FOUND;
            --OPEN alu_cursor FOR SELECT mdl_user.id FROM mdl_course 
	  --INNER JOIN mdl_context ON mdl_context.instanceid = mdl_course.id 
	  --INNER JOIN mdl_role_assignments ON mdl_context.id = mdl_role_assignments.contextid
	  --INNER JOIN mdl_role ON mdl_role.id = mdl_role_assignments.roleid
	  --INNER JOIN mdl_user ON mdl_user.id = mdl_role_assignments.userid
	  --WHERE mdl_role.id = 5 AND mdl_course.id = idcurso;
          
             OPEN alu_cursor FOR select mdl_user.id from mdl_user
             left join mdl_role_assignments on  mdl_role_assignments.userid = mdl_user.id
             left join mdl_context on mdl_context.id=mdl_role_assignments.contextid
             left JOIN mdl_groups_members ON mdl_groups_members.userid=mdl_user.id
             left join mdl_groups on mdl_groups.id= mdl_groups_members.groupid
             where mdl_context.contextlevel=50 and
             mdl_role_assignments.roleid=5 and 
             mdl_context.instanceid=idcur and
             mdl_groups.id=idgrupo and 
             mdl_groups.courseid=idcur;
          LOOP
      	    FETCH alu_cursor INTO alumnos;  
      	    EXIT WHEN NOT FOUND;
            
            select into calif *  from mdl_calificaciones where idelemento=externo.id and userid=alumnos.id;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              IF val IS NULL THEN
              val=1;
              ELSE
              val:=val+1;
              END IF;
              insert into mdl_calificaciones values(val,externo.id,alumnos.id,0,fechaact,fechaact,'WEB',0);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return sal= '0';

              END IF;

            END IF;


          END LOOP;
      CLOSE alu_cursor;
      
        END LOOP;
  --cierra cursor
CLOSE ext_cursor;
RETURN sal;
END;$_$;


ALTER FUNCTION public.insertcalexterno2(integer, integer) OWNER TO innovaedu;

--
-- Name: insertcalif(integer); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION insertcalif(integer) RETURNS character
    LANGUAGE plpgsql
    AS $_$DECLARE  
  idcurso ALIAS FOR $1;
  prog_cursor  CURSOR FOR select * from mdl_grade_items where courseid=idcurso and itemmodule != '';
  programa     mdl_grade_items%ROWTYPE; 
  moduleitem   RECORD;
  elemcal    RECORD;
  fechaact timestamp;
  sal varchar;
  grades_cursor  refcursor;
  grades      mdl_grade_grades%ROWTYPE;
  calif    RECORD;
  val integer;




BEGIN

fechaact :='now';

OPEN prog_cursor;
  --abre cursor  
    LOOP
      FETCH prog_cursor INTO programa;  
      EXIT WHEN NOT FOUND;
      select into moduleitem  *  from mdl_modules where name=programa.itemmodule;
      select into elemcal * from mdl_elementoscal where module=moduleitem.id and instance=programa.iteminstance and idcurso=idcurso;

     /*actualiza*/
      update mdl_elementoscal set calmax=programa.grademax,calmin=programa.grademin,calpass=programa.gradepass where id=elemcal.id;
      IF NOT FOUND THEN
         raise exception 'No actualizo1';
         return '0';
      END IF;
IF(sal='1') then
      OPEN grades_cursor FOR select * from mdl_grade_grades where itemid=programa.id;
          LOOP
      	    FETCH prog_cursor INTO grades;  
      	    EXIT WHEN NOT FOUND;
            IF elemcal.catrec <> 3 THEN 
            select into calif *  from mdl_calificaciones where idelemento=elemcal.id and userid=grades.userid;
            IF NOT FOUND THEN
             --inserta
               select max(id) into val from mdl_calificaciones;
              val:=val+1;
              insert into mdl_calificaciones values(val,elemcal.id,grades.userid,grades.finalgrade,fechaact,fechaact,'WEB',grades.id);
              IF NOT FOUND THEN
     		raise exception 'No inserto';
                return '0';
              END IF;

            ELSE
	    --actualiza
	      update mdl_calificaciones set idelemento=elemcal.id,userid=grades.userid,finalcal=grades.finalgrade,idgrade=grades.id,timemodified=fechaact,responsable='WEB' where id=calif.id;
      	      IF NOT FOUND THEN
                  raise exception 'No actualizo2';
                  return '0';
              END IF;

	    END IF;

           END IF;
          END LOOP;
      CLOSE grades_cursor;
      END IF;




      
          END LOOP;
  --cierra cursor
CLOSE prog_cursor;
RETURN '1';
END;$_$;


ALTER FUNCTION public.insertcalif(integer) OWNER TO innovaedu;

--
-- Name: unix_timestamp(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: innovaedu
--

CREATE FUNCTION unix_timestamp(timestamp without time zone) RETURNS bigint
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT EXTRACT(EPOCH FROM $1)::bigint;
$_$;


ALTER FUNCTION public.unix_timestamp(timestamp without time zone) OWNER TO innovaedu;

SET search_path = tutorias, pg_catalog;

--
-- Name: f_activos(bigint); Type: FUNCTION; Schema: tutorias; Owner: postgres
--

CREATE FUNCTION f_activos(bigint) RETURNS SETOF bigint
    LANGUAGE sql
    AS $_$

select count (* ) as visible from (
select  distinct c.visible

 FROM (select * from mdl_user where id=$1)u
   JOIN mdl_groups_members gm ON gm.userid = u.id
   JOIN mdl_groups g ON g.id = gm.groupid
   JOIN mdl_course c ON c.id = g.courseid
    where c.visible=1) as visible


   
$_$;


ALTER FUNCTION tutorias.f_activos(bigint) OWNER TO postgres;

--
-- Name: f_alumnos_insc_act(integer); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_alumnos_insc_act(integer) RETURNS TABLE(cve_delegacion character, nom_delegacion text, cve_curso integer, desc_curso text, cve_departamental character, cve_usuario bigint, cve_matricula text, desc_nombre text, desc_email text, numred text, cve_grupo bigint, grupo_nombre text, cve_rol bigint, rol_nombre text, num_ingresos bigint, num_activos bigint, jerarquia integer, rolexp integer, status numeric, rolexp_nombre character)
    LANGUAGE sql
    AS $_$
SELECT dep.cve_delegacion AS cve_ciudad, 
	max(d.nom_delegacion) as nom_delegacion, 
	$1 AS cve_curso, 
    max(c.shortname::text) AS desc_curso, 
    u.cve_departamental,  
    u.id AS cve_usuario, 
    u.username AS cve_matricula, 
    max(concat(u.nom::text, ' ', u.pat::text, ' ', u.mat::text)) AS desc_nombre, 
    max(u.email::text) AS desc_email, max(u.numred) AS numred, 
    g.id AS cve_grupo, 
    max(g.name::text) AS grupo_nombre, 
    r.id AS cve_rol, 
    max(r2.name::text) AS rol_nombre,
    count(DISTINCT al.userid) AS num_ingresos,
    count(distinct tutorias.f_aux_count_alumnos_act(la.id, c.tipocur)) AS num_activos, 
    tip.jerarquia AS Jerarquia, 
        exp.role AS rolexp, 
        exp.ind_status AS status,
  
    (CASE
            WHEN exp.ind_status = 0  THEN 'eliminado'::text
          WHEN exp.ind_status = 3  THEN 'baja'::text
          WHEN exp.role = 0  THEN 'sin rol'::text
            ELSE r2.name
            	 END) AS rolexp_nombre
        
   FROM (SELECT * FROM mdl_groups WHERE courseid=$1) g  
   LEFT JOIN mdl_course c ON c.id = g.courseid
   LEFT JOIN mdl_groups_members gm ON gm.groupid = g.id
   LEFT JOIN mdl_user u ON gm.userid = u.id 
   LEFT JOIN mdl_role_assignments ra ON ra.userid = u.id
   LEFT JOIN mdl_context ctx ON ra.contextid = ctx.id and ctx.instanceid=c.id
   LEFT JOIN mdl_role r ON r.id = ra.roleid

   LEFT JOIN mdl_groups_members al ON al.groupid = g.id
   LEFT JOIN mdl_role_assignments ra3 ON ra3.userid = al.userid and ra3.contextid=ctx.id
   LEFT JOIN mdl_user_lastaccess la on la.userid=u.id and la.courseid=c.id

   LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON u.cve_departamental=ads.cve_depto_adscripcion 
   LEFT JOIN departments.ssd_cat_delegacion d ON u.del = d.cve_delegacion::integer
   LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion

   LEFT JOIN tutorias.mdl_userexp exp on c.id = exp.cursoid and u.id=exp.userid and g.id=exp.grupoid and r.id=exp.idrole_asignado
   LEFT JOIN parametrizacion.ssp_tipo_roles tip ON exp.role=tip.cve_role
   LEFT JOIN mdl_role r2 ON r2.id=exp.role
  WHERE ra3.roleid=5 and ctx.contextlevel=50

  GROUP BY dep.cve_delegacion, c.id, u.id, u.username, g.id, r.id, tip.jerarquia,exp.role,exp.ind_status,r2.name
  ORDER BY dep.cve_delegacion
$_$;


ALTER FUNCTION tutorias.f_alumnos_insc_act(integer) OWNER TO innovaedu;

--
-- Name: f_aux_count_alumnos_act(bigint, text); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_aux_count_alumnos_act(bigint, text) RETURNS bigint
    LANGUAGE sql
    AS $_$

select la.userid from mdl_user_lastaccess la where id=$1 
and (($2 = '0'::bpchar AND (to_timestamp(la.timeaccess::double precision) + '5 days'::interval) >= now())
OR ($2 = '1'::bpchar AND (to_timestamp(la.timeaccess::double precision) + '15 days'::interval) >= now()))
$_$;


ALTER FUNCTION tutorias.f_aux_count_alumnos_act(bigint, text) OWNER TO innovaedu;

--
-- Name: f_aux_count_alumnos_act_curso(bigint, text); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_aux_count_alumnos_act_curso(bigint, text) RETURNS SETOF bigint
    LANGUAGE sql
    AS $_$
select la.userid from mdl_user_lastaccess la where courseid=$1 
and (($2 = '0'::bpchar AND (to_timestamp(la.timeaccess::double precision) + '5 days'::interval) >= now())
OR ($2 = '1'::bpchar AND (to_timestamp(la.timeaccess::double precision) + '15 days'::interval) >= now()))
$_$;


ALTER FUNCTION tutorias.f_aux_count_alumnos_act_curso(bigint, text) OWNER TO innovaedu;

--
-- Name: f_aux_count_alumnos_xprofesor(bigint); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_aux_count_alumnos_xprofesor(bigint) RETURNS SETOF bigint
    LANGUAGE sql
    AS $_$
select count (* ) from 
(SELECT   distinct la.userid, u.id, g.id	
	

	FROM (select * from mdl_user  WHERE id=$1) as u
	     JOIN mdl_groups_members gm1 ON gm1.userid=u.id
	     join mdl_groups g on g.id=gm1.groupid
	     JOIN mdl_course c on c.id= g.courseid
	     JOIN mdl_context ctx ON  ctx.instanceid = c.id and ctx.contextlevel=50  
	     JOIN mdl_role_assignments ra ON u.id = ra.userid and ra.contextid = ctx.id 
	   
	     JOIN parametrizacion.ssp_tipo_roles tr on tr.cve_role=ra.roleid and tr.ind_tipo=2 
	   
	

	  
	   JOIN mdl_groups_members gm ON  gm.groupid=g.id  
	  JOIN mdl_role_assignments ra2 ON gm.userid = ra2.userid AND ra2.roleid=5 and  ra2.contextid = ctx.id 
	 

	   JOIN mdl_user_lastaccess la ON la.courseid=c.id and la.userid=gm.userid
	

	   where c.visible= 1 and c.activop=1
	   and (( c.tipocur = '0' AND (to_timestamp(la.timeaccess::double precision) + '5 days'::interval) >= now())OR ( c.tipocur = '1' AND (to_timestamp(la.timeaccess::double precision) + '15 days'::interval) >= now()))
) as alumnos$_$;


ALTER FUNCTION tutorias.f_aux_count_alumnos_xprofesor(bigint) OWNER TO innovaedu;

--
-- Name: f_aux_limit_pre_registro(bigint); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_aux_limit_pre_registro(bigint) RETURNS SETOF numeric
    LANGUAGE sql
    AS $_$

select sum(t.desempeno) from 
(select d.desempeno from tutorias.mdl_usertutor as d where d.iduser=$1 order by d.fch_pre_registro  desc limit(3)) as t


$_$;


ALTER FUNCTION tutorias.f_aux_limit_pre_registro(bigint) OWNER TO innovaedu;

--
-- Name: f_cursos_usuarios(bigint); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_cursos_usuarios(bigint) RETURNS TABLE(id bigint, fullname character, shortname character, startdatepre date, lastdatepre date, cuotacurso integer, preact numeric, achsel numeric, category bigint, startdate bigint, formdocente numeric, path character)
    LANGUAGE sql
    AS $_$
SELECT distinct c.id ,
       c.fullname ,
       c.shortname ,
       cc.startdatepre ,
       cc.lastdatepre ,	
       cuotacurso , 
       cc.preact ,
       cc.achsel ,
       c.category ,
       c.startdate,
       cc.formdocente,
       cat.path

 FROM public.mdl_course c
LEFT JOIN public.mdl_course_config cc on cc.course=c.id 
JOIN mdl_course_categories cat on c.category= cat.id and not (concat('/', cat.path, '/') ~~ '%/1/%'::text OR pg_catalog.concat('/', cat.path, '/') ~~ '%/81/%'::text OR pg_catalog.concat('/', cat.path, '/') ~~ '%/738/%'::text)
JOIN public.mdl_context ctx ON ctx.instanceid = c.id
JOIN public.mdl_role_assignments ra ON ra.contextid = ctx.id
JOIN public.mdl_role r ON r.id = ra.roleid
 WHERE NOT ra.roleid = 5  AND ra.userid = $1
ORDER BY fullname

$_$;


ALTER FUNCTION tutorias.f_cursos_usuarios(bigint) OWNER TO innovaedu;

--
-- Name: f_get_alumnos_activos(integer); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_get_alumnos_activos(integer) RETURNS bigint
    LANGUAGE sql
    AS $_$
    SELECT COUNT(DISTINCT g.userid) n_alumnos
    FROM tutorias.mdl_userexp a
    LEFT JOIN public.mdl_course c ON c.id = a.cursoid
    JOIN public.mdl_groups_members d ON d.groupid = a.grupoid
    JOIN public.mdl_context e ON e.instanceid = a.cursoid AND e.contextlevel = 50
    JOIN public.mdl_role_assignments f ON f.userid = d.userid AND f.roleid = 5 AND f.contextid = e.id
    LEFT JOIN public.mdl_user_lastaccess g ON g.courseid = a.cursoid AND (a.role = 30 OR g.userid = d.userid) AND (
    (c.tipocur = '0' AND (DATE_TRUNC('day',NOW()) - DATE_TRUNC('day',TO_TIMESTAMP(g.timeaccess))) <= INTERVAL '5 days') OR
    (c.tipocur = '1' AND (DATE_TRUNC('day',NOW()) - DATE_TRUNC('day',TO_TIMESTAMP(g.timeaccess))) <= INTERVAL '15 days'))
    WHERE a.userid = $1
$_$;


ALTER FUNCTION tutorias.f_get_alumnos_activos(integer) OWNER TO innovaedu;

--
-- Name: f_rol_curso_usuario(bigint, bigint); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_rol_curso_usuario(bigint, bigint) RETURNS TABLE(id bigint)
    LANGUAGE sql
    AS $_$
    SELECT DISTINCT r.id
			
			
    FROM (select * from public.mdl_user where id=$1) u
    JOIN mdl_groups_members gm1 ON gm1.userid=u.id
    join mdl_groups g on g.id=gm1.groupid
    JOIN mdl_course c on c.id= g.courseid
    JOIN public.mdl_course_config cc ON cc.course = c.id
    JOIN public.mdl_context ctx ON ctx.instanceid = c.id
   JOIN mdl_role_assignments ra ON ra.contextid = ctx.id AND u.id = ra.userid
    JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid and tr.ind_tipo=2
    JOIN public.mdl_role r ON r.id = ra.roleid
    where c.id=$2
   
   
$_$;


ALTER FUNCTION tutorias.f_rol_curso_usuario(bigint, bigint) OWNER TO innovaedu;

--
-- Name: f_rpt_seguimiento_tutoria(integer); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_rpt_seguimiento_tutoria(integer) RETURNS TABLE(id integer, nom_nombre character, nombre text, clave_curso character, desc_curso character, rol character, idrol bigint, tipo integer, total bigint, evaluaciones bigint, alumnos bigint, num_activos bigint, horascur numeric, tipocur numeric)
    LANGUAGE sql
    AS $_$
select max(ue.id) as id,u.username as nom_nombre,
       concat(u.firstname,' ',u.lastname) as nombre,
       c.shortname as clave_curso,c.fullname as desc_curso,
       r.name as rol,r.id  as idrol,et.tipo,sum(et.total) as total,

		count(*) as evaluaciones,(select count(*) from tutorias.v_rpt_curso_enroles where cve_curso=$1 and cve_rol=5 and cve_grupo=max(ue.grupoid) ) as alumnos,
		(select count(*) from tutorias.f_aux_count_alumnos_act_curso(c.id, (cc.tipocur)::text) where f_aux_count_alumnos_act_curso in (select cve_usuario from tutorias.v_rpt_curso_enroles_norm  where cve_curso=c.id and cve_rol=5 and cve_grupo=max(ue.grupoid) )) AS num_activos,cc.horascur,cc.tipocur

from tutorias.mdl_userexp ue
left join public.mdl_role r on r.id=ue.role
left join public.mdl_user u on u.id=ue.userid
left join public.mdl_course c on c.id= ue.cursoid
left join public.mdl_course_config cc on cc.course=c.id

left join tutorias.mdl_evatutor et on et.iduserexp=ue.id

where ue.cursoid=$1 and ue.role>0 and ue.role<>30  and ue.ind_status<>0 and ue.ind_status<>3
group by c.id, u.username, u.firstname,u.lastname,c.shortname,c.fullname,r.name,r.id ,et.tipo,cc.horascur,cc.tipocur
order by c.id,u.firstname,u.lastname,c.shortname,c.fullname,r.name,r.id ,et.tipo,cc.horascur,cc.tipocur

$_$;


ALTER FUNCTION tutorias.f_rpt_seguimiento_tutoria(integer) OWNER TO innovaedu;

--
-- Name: f_rpt_tutores(integer); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION f_rpt_tutores(integer) RETURNS TABLE(id_user bigint, nom_usuario text, nom_nombre text, nom_paterno text, nom_materno text, email character, emailpart text, nom_curp text, passtutor character, nom_categoria text, des_clave character, idcategoria integer, cve_categoria integer, des_tipo_nomina character, nom_delegacion text, cve_delegacion character, des_nivel_atencion text, cve_nivel_atencion integer, des_unidad_atencion text, cve_unidad_atencion integer, cve_depto_adscripcion character, phone1 text, phone2 text, numred text, fchact timestamp with time zone, fch_pre_registro date, grupoid integer, nombregrupo text, cursoid integer, shortname text, role integer, id_exp integer, ind_status numeric, grado character, licenciatura character, especialidad character, cargo character, sexo character, cat_tipo character, rolename character)
    LANGUAGE sql
    AS $_$
SELECT  distinct u.id AS id_user, u.username, u.nom, u.pat, u.mat,u.email, tut.emailpart, u1.nom_curp, passtutor,
	cat.nom_nombre as nom_categoria, cat.des_clave,  cat.cve_tipo_categoria, cat.cve_categoria, cat.des_tipo_nomina,
	del.nom_delegacion, del.cve_delegacion,
	niv.des_nivel_atencion, niv.cve_nivel_atencion,
	atn.des_unidad_atencion, atn.cve_unidad_atencion,
	 tut.cve_departamento as cve_depto_adscripcion,
	u.phone1, u.phone2, u.numred,
	exp.fchact, 
	tut.fch_pre_registro, 

	exp.grupoid, g.name as nombregrupo, 
	exp.cursoid, 
	c.shortname,
	exp.role, 
	exp.id AS id_exp, 
	exp.ind_status,
	est.nombre AS grado,
	car.nombre AS Licenciatura,
	esp.nombre AS especialidad,
	cr.descripcion AS cargo, u1.desc_sexo AS sexo,
	tc.nom_nombre AS cat_tipo,
	

            	 	
	(CASE
            WHEN exp.ind_status = 0  THEN 'eliminado'::text
          WHEN exp.ind_status = 3  THEN 'baja'::text
          WHEN exp.role = 0  THEN 'sin rol'::text
            ELSE r.name
            	 END) AS rolename
	

	FROM (select * from mdl_course WHERE mdl_course.id=$1) as c
	LEFT JOIN tutorias.mdl_userexp exp on c.id = exp.cursoid
        LEFT JOIN tutorias.mdl_usertutor tut ON tut.iduser = exp.userid and tut.id_curso=c.id

	LEFT JOIN tutorias.mdl_especialidades esp ON esp.id=tut.esp
	LEFT JOIN tutorias.mdl_carreras car ON car.id=tut.licenciatura
	LEFT JOIN tutorias.mdl_estudios est ON est.id=tut.grado
	LEFT JOIN tutorias.mdl_cargo cr ON cr.id=tut.cargo
	
        LEFT JOIN mdl_user u ON u.id = exp.userid
                LEFT JOIN gestion.sgp_tab_usuario u1 ON u1.nom_usuario = u.username
	LEFT JOIN mdl_groups g ON exp.grupoid = g.id
	LEFT JOIN mdl_role r ON r.id = exp.role

	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON tut.cve_departamento = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion   
	LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_delegacion = del.cve_delegacion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	
        LEFT JOIN nomina.ssn_categoria cat ON tut.cve_categoria = cat.cve_categoria
        LEFT JOIN nomina.ssn_tipo_catgoria tc ON tc.cve_tipo_categoria=cat.cve_tipo_categoria
        
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	
	     ORDER BY tut.cve_departamento
$_$;


ALTER FUNCTION tutorias.f_rpt_tutores(integer) OWNER TO innovaedu;

--
-- Name: f_rpt_tutores_propuesta(integer); Type: FUNCTION; Schema: tutorias; Owner: postgres
--

CREATE FUNCTION f_rpt_tutores_propuesta(integer) RETURNS TABLE(id_user bigint, nom_usuario text, nom text, pat text, mat text, alumno text, nom_nombre text, nom_paterno text, nom_materno text, emailpart text, nom_curp text, passtutor character, nom_categoria text, idcategoria integer, cve_categoria integer, des_tipo_nomina character, nom_delegacion text, cve_delegacion character, des_nivel_atencion text, cve_nivel_atencion integer, des_unidad_atencion text, cve_unidad_atencion integer, cve_depto_adscripcion character, descripcion_depto character varying, phone1 text, phone2 text, numred text, fch_pre_registro date, shortname character, grado character, licenciatura character, especialidad character, cargo text, city character, idpropuesta integer, email character, propuso text)
    LANGUAGE sql
    AS $_$
SELECT  distinct u.id AS id_user, u.username, u.nom, u.pat, u.mat, 

(CASE when max(tut.esp)>0 then concat(max(esp.abrev), ' ', u.nom, ' ', u.pat, ' ', u.mat)
          when max(tut.esp)=0 then  concat(max(car.abrev), ' ', u.nom, ' ', u.pat, ' ', u.mat)
          else concat(u.nom, ' ', u.pat, ' ', u.mat)
          end 
         )  AS Alumno, 

         u.firstname as nom_nombre, u.lastname as nom_paterno,' ' , tut.emailpart, u1.nom_curp, passtutor,
	cat.nom_nombre as nom_categoria, cat.cve_tipo_categoria, cat.cve_categoria, cat.des_tipo_nomina,
	del.nom_delegacion, del.cve_delegacion,
	niv.des_nivel_atencion, niv.cve_nivel_atencion,
	atn.des_unidad_atencion, atn.cve_unidad_atencion,
	 tut.cve_departamento as cve_departamental,
	ads.nom_depto_adscripcion AS descripcion_depto,
	u.phone1, u.phone2, u.numred,
	tut.fch_pre_registro, 
	c.shortname,
	est.nombre AS grado,
	car.nombre AS Licenciatura,
	esp.nombre AS especialidad,
	(CASE when (tut.esp)>0 then (esp.abrev)
          when (tut.esp)=0 then (car.abrev)
          else ' '::text
          end 
         )  as cargo  ,
	u.city,
	pro.id AS idpropuesta, u.email,
	 concat(u2.firstname , ' ', u2.lastname, ' (', u2.username, ') ') AS propuso

	FROM (select * from mdl_course WHERE mdl_course.id=$1) as c

	LEFT JOIN tutorias.mdl_propuesta pro ON pro.idcurdiplo= c.id
	         LEFT JOIN tutorias.mdl_usertutor tut ON tut.iduser = pro.iduser
	LEFT JOIN tutorias.mdl_especialidades esp ON esp.id=tut.esp
	LEFT JOIN tutorias.mdl_carreras car ON car.id=tut.licenciatura
	LEFT JOIN tutorias.mdl_estudios est ON est.id=tut.grado
	LEFT JOIN tutorias.mdl_cargo cr ON cr.id=tut.cargo

        LEFT JOIN mdl_user u ON u.id = pro.iduser 
        
	LEFT JOIN gestion.sgp_tab_usuario u1 ON u1.nom_usuario = u.username 


	LEFT JOIN mdl_user u2 ON u2.username = pro.responsable or cast(u2.id as text  ) =pro.responsable 
	LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON tut.cve_departamento = ads.cve_depto_adscripcion
	LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion   
	LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_delegacion = del.cve_delegacion
	LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
	
        LEFT JOIN nomina.ssn_categoria cat ON tut.cve_categoria = cat.cve_categoria
        
	LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
	LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
	LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion
	
	    GROUP BY u.id, tut.emailpart, u1.nom_curp, tut.passtutor, cat.nom_nombre, cat.cve_tipo_categoria, cat.cve_categoria, 
	    del.nom_delegacion, del.cve_delegacion,niv.des_nivel_atencion, niv.cve_nivel_atencion, atn.des_unidad_atencion, atn.cve_unidad_atencion,
	 tut.cve_departamento,
	ads.nom_depto_adscripcion,u.phone1, u.phone2, u.numred,	tut.fch_pre_registro,c.shortname,est.nombre,car.nombre,esp.nombre ,cr.descripcion, 
	u.city,	pro.id , u.email, u2.firstname ,  u2.lastname, u2.username, tut.esp, esp.abrev, car.abrev
	    
  ORDER BY  tut.cve_departamento
$_$;


ALTER FUNCTION tutorias.f_rpt_tutores_propuesta(integer) OWNER TO postgres;

--
-- Name: v_rpt_estadisticas_alumnos_p(); Type: FUNCTION; Schema: tutorias; Owner: innovaedu
--

CREATE FUNCTION v_rpt_estadisticas_alumnos_p() RETURNS TABLE(userid bigint, matricula character, alumno text, multi_rol text, correo_electronico character, cve_delegacion character, delegacion character, cve_nivel_atencion integer, nivel_de_atencion character, tipo_unidad numeric, unidad_medica character, cve_unidad_atencion integer, id bigint, curso character, groupid bigint, grupo character, adscripcion text, cve_depto_adscripcion character, id_categoria integer, clave_cat character, categoria character, categoria_concat text, cve_tipo_categoria integer, tipo_categoria character, sexo character)
    LANGUAGE sql COST 1000
    AS $$
 SELECT DISTINCT u.id AS userid, u.username AS matricula, pg_catalog.concat(u.lastname, ' ', u.firstname) AS alumno, r.name AS multi_rol,  pre.des_email_pers AS correo_electronico, del.cve_delegacion, COALESCE(del.nom_delegacion, 'SIN DELEGACIÓN'::character varying) AS delegacion, niv.cve_nivel_atencion, niv.des_nivel_atencion AS nivel_de_atencion, atn.ind_medica AS tipo_unidad, atn.des_unidad_atencion AS unidad_medica, atn.cve_unidad_atencion, c.id, c.shortname AS curso, gm1.groupid, g.name AS grupo, 
        CASE
            WHEN pre.cve_departamental IS NOT NULL THEN 
            CASE
                WHEN ads.nom_depto_adscripcion IS NOT NULL THEN pg_catalog.concat(ads.nom_depto_adscripcion, ' - ', dep.nom_dependencia, ' (', pre.cve_departamental, ')')
                ELSE ' '::text
            END
            ELSE ' '::text
        END AS adscripcion, COALESCE(pre.cve_departamental, ' '::bpchar) AS cve_depto_adscripcion, cat.cve_tipo_categoria AS id_categoria, COALESCE(cat.des_clave, 'SIN CATEGORIA'::character varying) AS clave_cat, cat.nom_nombre AS categoria, 
        CASE
            WHEN cat.nom_nombre IS NOT NULL THEN pg_catalog.concat(cat.nom_nombre, '(', cat.des_clave, ')')
            ELSE ' SIN CATEGORIA'::text
        END AS categoria_concat, tc.cve_tipo_categoria, tc.nom_nombre AS tipo_categoria, 
        CASE
            WHEN tab.desc_sexo = 'M'::bpchar THEN 'Femenino'::text
            WHEN tab.desc_sexo = 'F'::bpchar THEN 'Masculino'::text
            ELSE NULL::text
        END AS sexo
        
    FROM mdl_course c
    
    JOIN mdl_groups g ON g.courseid = c.id 
   JOIN mdl_groups_members gm1 ON gm1.groupid = g.id 
   JOIN mdl_course_config cc ON cc.course = c.id and cc.course = g.courseid
   JOIN mdl_context ctx ON ctx.instanceid = c.id and ctx.contextlevel=50 and ctx.instanceid = cc.course
     JOIN mdl_user u ON gm1.userid = u.id 
    JOIN gestion.sgp_tab_preregistro_al pre ON pre.cve_curso = c.id  AND u.username::text = pre.nom_usuario::text
   left JOIN gestion.sgp_tab_usuario tab ON tab.nom_usuario::text = pre.nom_usuario::text
  
   
   JOIN mdl_role_assignments ra ON ra.contextid = ctx.id AND u.id = ra.userid
   JOIN parametrizacion.ssp_tipo_roles tr ON tr.cve_role = ra.roleid and tr.ind_tipo = 3
   JOIN mdl_role r ON r.id = ra.roleid
   
   LEFT JOIN nomina.ssn_categoria cat ON pre.cve_cat = cat.cve_categoria
   LEFT JOIN nomina.ssn_tipo_catgoria tc ON tc.cve_tipo_categoria = cat.cve_tipo_categoria
   LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ads.cve_depto_adscripcion = pre.cve_departamental
   LEFT JOIN departments.ssd_cat_dependencia dep ON ads.cve_depto_adscripcion = dep.cve_depto_adscripcion
   LEFT JOIN departments.ssd_cat_delegacion del ON dep.cve_delegacion = del.cve_delegacion
   LEFT JOIN departments.ssd_cat_nivel_atencion niv ON dep.cve_nivel_atencion = niv.cve_nivel_atencion
   LEFT JOIN departments.ssd_cat_normativa nor ON nor.cve_organo_control = dep.cve_organo_control AND nor.cve_departamento = dep.cve_departamento
   LEFT JOIN departments.ssd_cat_organo_control cont ON cont.cve_organo_control = nor.cve_organo_control
   LEFT JOIN departments.ssd_cat_unidad_atencion atn ON atn.cve_unidad_atencion = cont.cve_unidad_atencion

 ORDER BY u.username;
$$;


ALTER FUNCTION tutorias.v_rpt_estadisticas_alumnos_p() OWNER TO innovaedu;

SET search_path = calificaciones, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: mdl_caltotalgral; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_caltotalgral (
    id integer NOT NULL,
    userid integer NOT NULL,
    idmod integer DEFAULT 0 NOT NULL,
    tipo character(1) DEFAULT 0 NOT NULL,
    acred integer DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying DEFAULT 0 NOT NULL,
    caltot numeric(6,3) DEFAULT 0 NOT NULL,
    idcurso integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_caltotalgral OWNER TO innovaedu;

--
-- Name: TABLE mdl_caltotalgral; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_caltotalgral IS 'calificaciones totales';


--
-- Name: COLUMN mdl_caltotalgral.tipo; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON COLUMN mdl_caltotalgral.tipo IS 'P parcial, T total, F final curso';


--
-- Name: COLUMN mdl_caltotalgral.acred; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON COLUMN mdl_caltotalgral.acred IS '0 default, 1 acreditado, 2 reprobado';


--
-- Name: mdl_elementoscal; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_elementoscal (
    id integer NOT NULL,
    idcurso integer NOT NULL,
    idgmoduni integer NOT NULL,
    module bigint NOT NULL,
    instance bigint NOT NULL,
    porcentaje numeric(10,5) NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(20) NOT NULL,
    calmax numeric(10,5) DEFAULT 100 NOT NULL,
    calmin numeric(10,5) DEFAULT 0 NOT NULL,
    calpass numeric(10,5) DEFAULT 0 NOT NULL,
    nomelem character varying(255) DEFAULT 'No existe'::character varying NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_elementoscal OWNER TO innovaedu;

--
-- Name: TABLE mdl_elementoscal; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_elementoscal IS 'Elementos calificables';


--
-- Name: COLUMN mdl_elementoscal.catrec; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON COLUMN mdl_elementoscal.catrec IS '0 obligatorio,1 complementario,2 evaluacion final parcial, 3 externo,4 evaluacion final curso';


--
-- Name: mdl_moduni; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_moduni (
    id integer NOT NULL,
    idcurso integer NOT NULL,
    moduni integer NOT NULL,
    tipopc integer NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(20),
    nommoduni character varying(100) DEFAULT 0 NOT NULL,
    unis integer DEFAULT 0 NOT NULL,
    trabfin integer DEFAULT 0 NOT NULL,
    evafintrabfin integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_moduni OWNER TO innovaedu;

--
-- Name: TABLE mdl_moduni; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_moduni IS 'Numero de modulos y/o unidades por curso';


--
-- Name: COLUMN mdl_moduni.tipopc; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON COLUMN mdl_moduni.tipopc IS '1 unidad , 0 modulo';


--
-- Name: COLUMN mdl_moduni.trabfin; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON COLUMN mdl_moduni.trabfin IS '0 no tiene
1 tiene';


--
-- Name: mdl_unidades; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_unidades (
    id integer NOT NULL,
    idmoduni integer NOT NULL,
    numuni integer NOT NULL,
    nomuni character varying(100) NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(20) NOT NULL
);


ALTER TABLE mdl_unidades OWNER TO innovaedu;

--
-- Name: TABLE mdl_unidades; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_unidades IS 'Unidades por modulo';


SET search_path = public, pg_catalog;

--
-- Name: mdl_context_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_context_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_context_id_seq OWNER TO innovaedu;

--
-- Name: mdl_context; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_context (
    id bigint DEFAULT nextval('mdl_context_id_seq'::regclass) NOT NULL,
    contextlevel bigint DEFAULT 0 NOT NULL,
    instanceid bigint DEFAULT 0 NOT NULL,
    path character varying(255),
    depth smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_context OWNER TO innovaedu;

--
-- Name: TABLE mdl_context; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_context IS 'one of these must be set';


--
-- Name: mdl_course_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course (
    id bigint DEFAULT nextval('mdl_course_id_seq'::regclass) NOT NULL,
    category bigint DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    fullname character varying(254) DEFAULT ''::character varying NOT NULL,
    shortname character varying(255) DEFAULT ''::character varying NOT NULL,
    idnumber character varying(100) DEFAULT ''::character varying NOT NULL,
    summary text,
    format character varying(21) DEFAULT 'topics'::character varying NOT NULL,
    showgrades smallint DEFAULT 1 NOT NULL,
    modinfo text,
    newsitems integer DEFAULT 1 NOT NULL,
    startdate bigint DEFAULT 0 NOT NULL,
    marker bigint DEFAULT 0 NOT NULL,
    maxbytes bigint DEFAULT 0 NOT NULL,
    showreports smallint DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 1 NOT NULL,
    groupmode smallint DEFAULT 0 NOT NULL,
    groupmodeforce smallint DEFAULT 0 NOT NULL,
    lang character varying(30) DEFAULT ''::character varying NOT NULL,
    theme character varying(50) DEFAULT ''::character varying NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    requested smallint DEFAULT 0 NOT NULL,
    lastname character varying(50) DEFAULT 0 NOT NULL,
    lastdate bigint DEFAULT 0 NOT NULL,
    preact integer DEFAULT 0 NOT NULL,
    startdatepre bigint DEFAULT 0 NOT NULL,
    lastdatepre bigint DEFAULT 0 NOT NULL,
    activo integer DEFAULT 0 NOT NULL,
    stopnumber integer DEFAULT 0 NOT NULL,
    horascur integer DEFAULT 0 NOT NULL,
    tipocur character(1) DEFAULT 0 NOT NULL,
    defaultgroupingid bigint DEFAULT 0 NOT NULL,
    activop integer DEFAULT 1 NOT NULL,
    achsel integer DEFAULT 0 NOT NULL,
    cuotadel integer DEFAULT 0 NOT NULL,
    estcert integer DEFAULT 0 NOT NULL,
    visiblesiscalif integer DEFAULT 0 NOT NULL,
    visiblesiscalifcc integer DEFAULT 0 NOT NULL,
    banderacalif integer DEFAULT 0 NOT NULL,
    enablecompletion smallint DEFAULT 0 NOT NULL,
    legacyfiles smallint DEFAULT 0 NOT NULL,
    summaryformat smallint DEFAULT 0 NOT NULL,
    completionnotify smallint DEFAULT 0 NOT NULL,
    visibleold smallint DEFAULT 1 NOT NULL,
    sectioncache text
);


ALTER TABLE mdl_course OWNER TO innovaedu;

--
-- Name: TABLE mdl_course; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_course IS 'Central course table';


--
-- Name: COLUMN mdl_course.tipocur; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.tipocur IS '1 diplomado, 0 Curso';


--
-- Name: COLUMN mdl_course.achsel; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.achsel IS '0 no incluye, 1 incluye';


--
-- Name: COLUMN mdl_course.cuotadel; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.cuotadel IS '0 sin couta delegacional
1 con cuota delegacional';


--
-- Name: COLUMN mdl_course.estcert; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.estcert IS '0 Estatus cerrado, ya no se puede mover
1. Estatus abierto para nuevos cursos a partir de la fecha de 17082012';


--
-- Name: COLUMN mdl_course.visiblesiscalif; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.visiblesiscalif IS 'Debe haber combinacion con visible, si esta apagado tomar en cuenta esta variable que es:
0 no se ve en sistema calificaciones
1 se ve en sistema calificaciones';


--
-- Name: COLUMN mdl_course.banderacalif; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON COLUMN mdl_course.banderacalif IS '2013 en adelante para los nuevos';


--
-- Name: mdl_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groups_id_seq OWNER TO innovaedu;

--
-- Name: mdl_groups; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_groups (
    id bigint DEFAULT nextval('mdl_groups_id_seq'::regclass) NOT NULL,
    name character varying(254) DEFAULT ''::character varying NOT NULL,
    description text,
    enrolmentkey character varying(50) DEFAULT ''::character varying,
    picture bigint DEFAULT 0 NOT NULL,
    hidepicture smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    descriptionformat smallint DEFAULT 0 NOT NULL,
    idnumber character varying(100) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_groups OWNER TO innovaedu;

--
-- Name: TABLE mdl_groups; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_groups IS 'Each record represents a group.';


--
-- Name: mdl_groups_members_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groups_members_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groups_members_id_seq OWNER TO innovaedu;

--
-- Name: mdl_groups_members; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_groups_members (
    id bigint DEFAULT nextval('mdl_groups_members_id_seq'::regclass) NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timeadded bigint DEFAULT 0 NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    itemid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_groups_members OWNER TO innovaedu;

--
-- Name: TABLE mdl_groups_members; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_groups_members IS 'Link a user to a group.';


--
-- Name: mdl_modules_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_modules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_modules_id_seq OWNER TO innovaedu;

--
-- Name: mdl_modules; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_modules (
    id bigint DEFAULT nextval('mdl_modules_id_seq'::regclass) NOT NULL,
    name character varying(20) DEFAULT ''::character varying NOT NULL,
    version bigint DEFAULT 0 NOT NULL,
    cron bigint DEFAULT 0 NOT NULL,
    lastcron bigint DEFAULT 0 NOT NULL,
    search character varying(255) DEFAULT ''::character varying NOT NULL,
    visible smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_modules OWNER TO innovaedu;

--
-- Name: TABLE mdl_modules; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_modules IS 'modules available in the site';


--
-- Name: mdl_role_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role (
    id bigint DEFAULT nextval('mdl_role_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    shortname character varying(100) DEFAULT ''::character varying NOT NULL,
    description text NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    archetype character varying(30) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_role OWNER TO innovaedu;

--
-- Name: TABLE mdl_role; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role IS 'moodle roles';


--
-- Name: mdl_role_assignments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_assignments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_assignments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_assignments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_assignments (
    id bigint DEFAULT nextval('mdl_role_assignments_id_seq'::regclass) NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    contextid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    modifierid bigint DEFAULT 0 NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    itemid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_role_assignments OWNER TO innovaedu;

--
-- Name: TABLE mdl_role_assignments; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role_assignments IS 'assigning roles to different context';


--
-- Name: mdl_user_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user (
    id bigint DEFAULT nextval('mdl_user_id_seq'::regclass) NOT NULL,
    auth character varying(20) DEFAULT 'manual'::character varying NOT NULL,
    confirmed smallint DEFAULT 0 NOT NULL,
    policyagreed smallint DEFAULT 0 NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    mnethostid bigint DEFAULT 0 NOT NULL,
    username character varying(100) DEFAULT ''::character varying NOT NULL,
    password character varying(255) DEFAULT ''::character varying NOT NULL,
    firstname character varying(100) DEFAULT ''::character varying NOT NULL,
    lastname character varying(100) DEFAULT ''::character varying NOT NULL,
    email character varying(100) DEFAULT ''::character varying NOT NULL,
    emailstop smallint DEFAULT 0 NOT NULL,
    icq character varying(15) DEFAULT ''::character varying NOT NULL,
    skype character varying(50) DEFAULT ''::character varying NOT NULL,
    yahoo character varying(50) DEFAULT ''::character varying NOT NULL,
    aim character varying(50) DEFAULT ''::character varying NOT NULL,
    msn character varying(50) DEFAULT ''::character varying NOT NULL,
    phone1 character varying(40) DEFAULT ''::character varying NOT NULL,
    phone2 character varying(40) DEFAULT ''::character varying NOT NULL,
    institution character varying(40) DEFAULT ''::character varying NOT NULL,
    department character varying(100) DEFAULT ''::character varying NOT NULL,
    address character varying(70) DEFAULT ''::character varying NOT NULL,
    city character varying(120) DEFAULT ''::character varying NOT NULL,
    country character varying(2) DEFAULT ''::character varying NOT NULL,
    lang character varying(30) DEFAULT 'en'::character varying NOT NULL,
    theme character varying(50) DEFAULT ''::character varying NOT NULL,
    timezone character varying(100) DEFAULT '99'::character varying NOT NULL,
    firstaccess bigint DEFAULT 0 NOT NULL,
    lastaccess bigint DEFAULT 0 NOT NULL,
    lastlogin bigint DEFAULT 0 NOT NULL,
    currentlogin bigint DEFAULT 0 NOT NULL,
    lastip character varying(45) DEFAULT ''::character varying NOT NULL,
    secret character varying(15) DEFAULT ''::character varying NOT NULL,
    picture bigint DEFAULT 0 NOT NULL,
    url character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    mailformat smallint DEFAULT 1 NOT NULL,
    maildigest smallint DEFAULT 0 NOT NULL,
    maildisplay smallint DEFAULT 2 NOT NULL,
    htmleditor smallint DEFAULT 1 NOT NULL,
    autosubscribe smallint DEFAULT 1 NOT NULL,
    trackforums smallint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    trustbitmask bigint DEFAULT 0 NOT NULL,
    imagealt character varying(255),
    cat integer DEFAULT 0,
    nivdir integer DEFAULT 0 NOT NULL,
    adsarea integer DEFAULT 0 NOT NULL,
    coord integer DEFAULT 0 NOT NULL,
    medio integer DEFAULT 0 NOT NULL,
    turno integer DEFAULT 0 NOT NULL,
    del integer DEFAULT 0 NOT NULL,
    nom character varying(50),
    pat character varying(50),
    mat character varying(50),
    curp character varying(20) DEFAULT 0 NOT NULL,
    cargo character varying(20) DEFAULT 0 NOT NULL,
    numred character varying(20) DEFAULT 0 NOT NULL,
    titular character(1) DEFAULT 0 NOT NULL,
    idnumber character varying(255) DEFAULT ''::character varying NOT NULL,
    descriptionformat smallint DEFAULT 1 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    suspended smallint DEFAULT 0 NOT NULL,
    cve_departamental character(10)
);


ALTER TABLE mdl_user OWNER TO innovaedu;

--
-- Name: TABLE mdl_user; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user IS 'One record for each person';


SET search_path = calificaciones, pg_catalog;

--
-- Name: Calificaciones_historicas; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW "Calificaciones_historicas" AS
SELECT DISTINCT pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS alumno, u.username AS matricula, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, g.name AS grupo, r.name AS rolename, a.idcurso, a.idgmoduni, a.nomelem, cc.moduni AS nummoduni, b.numuni, cc.tipopc AS tipoelemento, public.f_get_tipo_recurso(b.id) AS tiporecurso, a.porcentaje, a.catrec, cc.trabfin, cc.evafintrabfin, cg.tipo, cg.caltot FROM (((((((((((public.mdl_course c JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) JOIN public.mdl_user u ON ((gm.userid = u.id))) JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN public.mdl_context ctx ON (((ra.contextid = ctx.id) AND (ctx.instanceid = c.id)))) LEFT JOIN mdl_caltotalgral cg ON (((cg.userid = u.id) AND (cg.idcurso = c.id)))) LEFT JOIN mdl_elementoscal a ON (((a.idcurso = cg.idcurso) AND (c.id = a.idcurso)))) LEFT JOIN mdl_unidades b ON (((a.idgmoduni = b.id) AND (cg.idmod = b.idmoduni)))) LEFT JOIN mdl_moduni cc ON (((b.idmoduni = cc.id) AND (cg.idmod = cc.id)))) LEFT JOIN public.mdl_modules d ON ((a.module = d.id))) WHERE (r.id = 5) ORDER BY cc.moduni, a.idcurso;


ALTER TABLE "Calificaciones_historicas" OWNER TO innovaedu;

--
-- Name: mdl_califgenerales; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_califgenerales (
    id integer NOT NULL,
    iduser integer NOT NULL,
    idmod integer NOT NULL,
    idunid integer NOT NULL,
    calporcentual numeric(6,3) DEFAULT 0 NOT NULL,
    tipcal integer DEFAULT 0 NOT NULL,
    responsable character varying(20) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL
);


ALTER TABLE mdl_califgenerales OWNER TO innovaedu;

--
-- Name: TABLE mdl_califgenerales; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_califgenerales IS 'Calificaciones por modulo-unidad y evaluacion final.';


--
-- Name: mdl_califgenerales_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_califgenerales_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_califgenerales_id_seq OWNER TO innovaedu;

--
-- Name: mdl_califgenerales_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_califgenerales_id_seq OWNED BY mdl_califgenerales.id;


--
-- Name: mdl_calificaciones; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_calificaciones (
    id integer NOT NULL,
    idelemento integer NOT NULL,
    userid bigint NOT NULL,
    finalcal numeric(10,5) DEFAULT 0,
    timecreated timestamp with time zone NOT NULL,
    timemodified timestamp with time zone NOT NULL,
    responsable character varying(20) NOT NULL,
    idgrade bigint DEFAULT 0 NOT NULL,
    finalcalporc numeric(6,3) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_calificaciones OWNER TO innovaedu;

--
-- Name: TABLE mdl_calificaciones; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_calificaciones IS 'Calificaciones modulo';


--
-- Name: mdl_calificaciones_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_calificaciones_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_calificaciones_id_seq OWNER TO innovaedu;

--
-- Name: mdl_calificaciones_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_calificaciones_id_seq OWNED BY mdl_calificaciones.id;


--
-- Name: mdl_caltotalgral_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_caltotalgral_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_caltotalgral_id_seq OWNER TO innovaedu;

--
-- Name: mdl_caltotalgral_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_caltotalgral_id_seq OWNED BY mdl_caltotalgral.id;


--
-- Name: mdl_caltotalgral_respo_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_caltotalgral_respo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_caltotalgral_respo_seq OWNER TO innovaedu;

--
-- Name: mdl_caltotalgral_respo_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_caltotalgral_respo_seq OWNED BY mdl_caltotalgral.responsable;


--
-- Name: mdl_elementoscal_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_elementoscal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_elementoscal_id_seq OWNER TO innovaedu;

--
-- Name: mdl_elementoscal_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_elementoscal_id_seq OWNED BY mdl_elementoscal.id;


--
-- Name: mdl_modexterno; Type: TABLE; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_modexterno (
    id integer NOT NULL,
    cursoid integer NOT NULL,
    nombre character varying(100) DEFAULT 0 NOT NULL,
    responsable character varying(20) NOT NULL,
    fchact timestamp with time zone NOT NULL,
    idmodulo integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_modexterno OWNER TO innovaedu;

--
-- Name: TABLE mdl_modexterno; Type: COMMENT; Schema: calificaciones; Owner: innovaedu
--

COMMENT ON TABLE mdl_modexterno IS 'modulos externos';


--
-- Name: mdl_modexterno_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_modexterno_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_modexterno_id_seq OWNER TO innovaedu;

--
-- Name: mdl_modexterno_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_modexterno_id_seq OWNED BY mdl_modexterno.id;


--
-- Name: mdl_moduni_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_moduni_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_moduni_id_seq OWNER TO innovaedu;

--
-- Name: mdl_moduni_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_moduni_id_seq OWNED BY mdl_moduni.id;


--
-- Name: mdl_unidades_id_seq; Type: SEQUENCE; Schema: calificaciones; Owner: innovaedu
--

CREATE SEQUENCE mdl_unidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_unidades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_unidades_id_seq; Type: SEQUENCE OWNED BY; Schema: calificaciones; Owner: innovaedu
--

ALTER SEQUENCE mdl_unidades_id_seq OWNED BY mdl_unidades.id;


SET search_path = departments, pg_catalog;

--
-- Name: ssd_cat_delegacion; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_delegacion (
    cve_delegacion character(2) NOT NULL,
    nom_delegacion character varying(30) NOT NULL,
    ref_tipo character(1) NOT NULL,
    ref_identificador character(1) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL,
    cve_regiones integer
);


ALTER TABLE ssd_cat_delegacion OWNER TO innovaedu;

--
-- Name: ssd_cat_dependencia; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_dependencia (
    cve_depto_adscripcion character(10) NOT NULL,
    nom_dependencia character varying(200),
    cve_delegacion character(2) NOT NULL,
    cve_organo_control character(2),
    cve_departamento character(4),
    ref_ubicacion character varying(200),
    ref_ubicacion_die character varying(200),
    cve_nivel_atencion integer,
    ind_imss_oport numeric(1,0),
    ind_umae numeric(1,0),
    ind_baja integer DEFAULT 1 NOT NULL,
    is_umae character(1),
    cve_unidad character(10),
    cve_normativa character(10)
);


ALTER TABLE ssd_cat_dependencia OWNER TO innovaedu;

--
-- Name: ssd_cat_depto_adscripcion; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_depto_adscripcion (
    cve_depto_adscripcion character(10) NOT NULL,
    nom_depto_adscripcion character varying(50) NOT NULL,
    cve_depto_adscripcion_padre character(10),
    des_nombre_completo character varying(150),
    id_tipo_adscripcion numeric(2,0),
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssd_cat_depto_adscripcion OWNER TO innovaedu;

--
-- Name: ssd_cat_nivel_atencion; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_nivel_atencion (
    cve_nivel_atencion integer NOT NULL,
    des_nivel_atencion character varying(20) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssd_cat_nivel_atencion OWNER TO innovaedu;

--
-- Name: ssd_cat_normativa; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_normativa (
    cve_organo_control character(2) NOT NULL,
    cve_departamento character(4) NOT NULL,
    nom_normativa character varying(60) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssd_cat_normativa OWNER TO innovaedu;

--
-- Name: ssd_cat_organo_control; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_organo_control (
    cve_organo_control character(2) NOT NULL,
    nom_organo_control character varying(80) NOT NULL,
    cve_unidad_atencion integer NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssd_cat_organo_control OWNER TO innovaedu;

--
-- Name: ssd_cat_unidad_atencion; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_unidad_atencion (
    cve_unidad_atencion integer NOT NULL,
    des_unidad_atencion character varying(80) NOT NULL,
    ind_medica numeric(1,0) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssd_cat_unidad_atencion OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_certificate_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate (
    id bigint DEFAULT nextval('mdl_certificate_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    emailteachers smallint DEFAULT 0 NOT NULL,
    emailothers text,
    savecert smallint DEFAULT 0 NOT NULL,
    delivery smallint DEFAULT 0 NOT NULL,
    certificatetype character varying(50) DEFAULT ''::character varying NOT NULL,
    borderstyle character varying(255) DEFAULT ''::character varying NOT NULL,
    bordercolor character varying(30) DEFAULT '0'::character varying NOT NULL,
    printwmark character varying(255) DEFAULT ''::character varying NOT NULL,
    printdate bigint DEFAULT 0 NOT NULL,
    datefmt bigint DEFAULT 0 NOT NULL,
    printnumber smallint DEFAULT 0 NOT NULL,
    printgrade bigint DEFAULT 0 NOT NULL,
    gradefmt bigint DEFAULT 0 NOT NULL,
    printhours character varying(255) DEFAULT '0'::character varying,
    printteacher bigint DEFAULT 0 NOT NULL,
    customtext text,
    printsignature character varying(255) DEFAULT ''::character varying NOT NULL,
    printseal character varying(255) DEFAULT ''::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    printoutcome smallint DEFAULT 0 NOT NULL,
    reportcert smallint DEFAULT 0 NOT NULL,
    intro text,
    abc text DEFAULT 0 NOT NULL,
    cargoa integer,
    cargob integer,
    liberacion smallint DEFAULT 0 NOT NULL,
    btnimp smallint DEFAULT 1 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    orientation character varying(10) DEFAULT ' '::character varying NOT NULL,
    requiredtime bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_certificate OWNER TO innovaedu;

--
-- Name: TABLE mdl_certificate; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_certificate IS 'Defines certificates';


--
-- Name: mdl_certificate_issues_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_issues_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_issues_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_issues; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_issues (
    id bigint DEFAULT nextval('mdl_certificate_issues_id_seq'::regclass) NOT NULL,
    certificateid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT (date_part('epoch'::text, now()))::bigint NOT NULL,
    code character varying(40),
    bandera smallint DEFAULT 0 NOT NULL,
    imprimir text DEFAULT 0 NOT NULL,
    vigente integer DEFAULT 1 NOT NULL,
    comentario text DEFAULT 0 NOT NULL,
    tipo numeric(1,0) DEFAULT 0,
    id_iss bigint
);


ALTER TABLE mdl_certificate_issues OWNER TO innovaedu;

--
-- Name: TABLE mdl_certificate_issues; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_certificate_issues IS 'Info about issued certificates';


--
-- Name: mdl_grade_categories; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_categories (
    id bigint NOT NULL,
    courseid bigint NOT NULL,
    parent bigint,
    depth bigint DEFAULT 0 NOT NULL,
    path character varying(255),
    fullname character varying(255) DEFAULT ''::character varying NOT NULL,
    aggregation bigint DEFAULT 0 NOT NULL,
    keephigh bigint DEFAULT 0 NOT NULL,
    droplow bigint DEFAULT 0 NOT NULL,
    aggregateonlygraded smallint DEFAULT 0 NOT NULL,
    aggregateoutcomes smallint DEFAULT 0 NOT NULL,
    aggregatesubcats smallint DEFAULT 0 NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    hidden smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_categories OWNER TO innovaedu;

--
-- Name: mdl_grade_grades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_grades (
    id bigint NOT NULL,
    itemid bigint NOT NULL,
    userid bigint NOT NULL,
    rawgrade numeric(10,5),
    rawgrademax numeric(10,5) DEFAULT 100 NOT NULL,
    rawgrademin numeric(10,5) DEFAULT 0 NOT NULL,
    rawscaleid bigint,
    usermodified bigint,
    finalgrade numeric(10,5),
    hidden bigint DEFAULT 0 NOT NULL,
    locked bigint DEFAULT 0 NOT NULL,
    locktime bigint DEFAULT 0 NOT NULL,
    exported bigint DEFAULT 0 NOT NULL,
    overridden bigint DEFAULT 0 NOT NULL,
    excluded bigint DEFAULT 0 NOT NULL,
    feedback text,
    feedbackformat bigint DEFAULT 0 NOT NULL,
    information text,
    informationformat bigint DEFAULT 0 NOT NULL,
    timecreated bigint,
    timemodified bigint
);


ALTER TABLE mdl_grade_grades OWNER TO innovaedu;

--
-- Name: mdl_grade_items; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_items (
    id bigint NOT NULL,
    courseid bigint,
    categoryid bigint,
    itemname character varying(255),
    itemtype character varying(30) DEFAULT ''::character varying NOT NULL,
    itemmodule character varying(30),
    iteminstance bigint,
    itemnumber bigint,
    iteminfo text,
    idnumber character varying(255),
    calculation text,
    gradetype smallint DEFAULT 1 NOT NULL,
    grademax numeric(10,5) DEFAULT 100 NOT NULL,
    grademin numeric(10,5) DEFAULT 0 NOT NULL,
    scaleid bigint,
    outcomeid bigint,
    gradepass numeric(10,5) DEFAULT 0 NOT NULL,
    multfactor numeric(10,5) DEFAULT 1.0 NOT NULL,
    plusfactor numeric(10,5) DEFAULT 0 NOT NULL,
    aggregationcoef numeric(10,5) DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    hidden bigint DEFAULT 0 NOT NULL,
    locked bigint DEFAULT 0 NOT NULL,
    locktime bigint DEFAULT 0 NOT NULL,
    needsupdate bigint DEFAULT 0 NOT NULL,
    timecreated bigint,
    timemodified bigint,
    display bigint DEFAULT 0 NOT NULL,
    decimals smallint
);


ALTER TABLE mdl_grade_items OWNER TO innovaedu;

SET search_path = calificaciones, pg_catalog;

--
-- Name: v_calificaciones_actual; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_calificaciones_actual AS
SELECT u.id, pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS alumno, u.username AS matricula, u.email AS correo_electronico, u.numred AS red, u.phone2 AS telefono, nor.nom_normativa AS direccion_normativa, dep.nom_dependencia AS unidad, atn.des_unidad_atencion AS unidad2, d.nom_delegacion AS delegacion, niv.des_nivel_atencion AS nivel_de_atencion, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, g.name AS grupo, r.name AS rolename, gi.itemname, gi.itemtype, gi.itemmodule, gra.rawgrade, gra.finalgrade FROM ((((((((((((((((((public.mdl_course c JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) LEFT JOIN public.mdl_user u ON ((gm.userid = u.id))) JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) LEFT JOIN public.mdl_certificate cert ON ((cert.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.userid = u.id) AND (cert.id = iss.certificateid)))) JOIN public.mdl_context ctx ON (((ra.contextid = ctx.id) AND (ctx.instanceid = c.id)))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN public.mdl_grade_grades gra ON ((gra.userid = u.id))) LEFT JOIN public.mdl_grade_items gi ON (((gi.id = gra.itemid) AND (gi.courseid = c.id)))) LEFT JOIN public.mdl_grade_categories cat ON (((cat.id = gi.categoryid) AND (cat.courseid = c.id)))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ((u.cve_departamental = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion d ON ((u.del = (d.cve_delegacion)::integer))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion))) WHERE (r.id = 5);


ALTER TABLE v_calificaciones_actual OWNER TO innovaedu;

--
-- Name: v_calificaciones_moduni; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_calificaciones_moduni AS
SELECT DISTINCT u.id AS id_usuario, pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS alumno, u.username AS matricula, u.email AS correo_electronico, u.numred AS red, u.phone2 AS telefono, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, g.name AS grupo, r.name AS rolename, a.id, a.idcurso, a.idgmoduni, a.nomelem, cc.moduni AS nummoduni, b.numuni, cc.tipopc AS tipoelemento, public.f_get_tipo_recurso(b.id) AS tiporecurso, a.porcentaje, a.catrec, cc.trabfin, cc.evafintrabfin, cg.tipo, cg.caltot FROM ((((((((((((public.mdl_course c JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) LEFT JOIN public.mdl_user u ON ((gm.userid = u.id))) JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) LEFT JOIN public.mdl_certificate cert ON ((cert.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.userid = u.id) AND (cert.id = iss.certificateid)))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) JOIN mdl_caltotalgral cg ON (((cg.userid = u.id) AND (cg.idcurso = c.id)))) JOIN mdl_elementoscal a ON ((a.idcurso = cg.idcurso))) JOIN mdl_unidades b ON ((a.idgmoduni = b.id))) JOIN mdl_moduni cc ON ((b.idmoduni = cc.id))) JOIN public.mdl_modules d ON ((a.module = d.id))) ORDER BY a.idcurso, cc.moduni, b.numuni, a.id;


ALTER TABLE v_calificaciones_moduni OWNER TO innovaedu;

--
-- Name: v_datos_generales; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_datos_generales AS
SELECT u.id, pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS alumno, u.username AS matricula, u.email AS correo_electronico, u.numred AS red, u.phone2 AS telefono, nor.nom_normativa AS direccion_normativa, dep.nom_dependencia AS unidad, atn.des_unidad_atencion AS unidad2, d.nom_delegacion AS delegacion, niv.des_nivel_atencion AS nivel_de_atencion, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, g.name AS grupo, r.name AS rolename, el.idcurso, el.idgmoduni, el.nomelem, mod.moduni AS nummoduni, un.numuni, mod.tipopc AS tipoelemento, public.f_get_tipo_recurso((mo.id)::integer) AS tiporecurso, el.porcentaje, el.catrec, mod.trabfin, cg.tipo, cg.caltot FROM ((((((((((((((((((((public.mdl_course c JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) LEFT JOIN public.mdl_user u ON ((gm.userid = u.id))) JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) LEFT JOIN public.mdl_certificate cert ON ((cert.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.userid = u.id) AND (cert.id = iss.certificateid)))) JOIN public.mdl_context ctx ON (((ra.contextid = ctx.id) AND (ctx.instanceid = c.id)))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN mdl_caltotalgral cg ON (((cg.userid = u.id) AND (cg.idcurso = c.id)))) LEFT JOIN mdl_elementoscal el ON ((el.idgmoduni = cg.idmod))) LEFT JOIN mdl_unidades un ON ((el.idgmoduni = un.id))) LEFT JOIN mdl_moduni mod ON ((un.idmoduni = mod.id))) LEFT JOIN public.mdl_modules mo ON ((el.module = mo.id))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ((u.cve_departamental = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion d ON ((u.del = (d.cve_delegacion)::integer))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion)));


ALTER TABLE v_datos_generales OWNER TO innovaedu;

--
-- Name: v_repo_his_act; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_repo_his_act AS
SELECT DISTINCT u.username AS matricula, u.pat, u.mat, u.nom, pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS nombre_completo, u.email AS correo_electronico, u.numred AS red, u.phone1 AS telefono1, u.phone2 AS telefono2, nor.nom_normativa AS direccion_normativa, dep.nom_dependencia AS unidad, atn.des_unidad_atencion AS unidad2, d.nom_delegacion AS delegacion, niv.des_nivel_atencion AS nivel_de_atencion, CASE WHEN (atn.ind_medica = (1)::numeric) THEN 'Medica'::text ELSE 'No Medica'::text END AS tipounidad, ads.cve_depto_adscripcion FROM ((((((((((((((((((public.mdl_course c JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) LEFT JOIN public.mdl_user u ON ((gm.userid = u.id))) JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) LEFT JOIN public.mdl_certificate cert ON ((cert.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.userid = u.id) AND (cert.id = iss.certificateid)))) JOIN public.mdl_context ctx ON (((ra.contextid = ctx.id) AND (ctx.instanceid = c.id)))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN public.mdl_grade_grades gra ON ((gra.userid = u.id))) LEFT JOIN public.mdl_grade_items gi ON (((gi.id = gra.itemid) AND (gi.courseid = c.id)))) LEFT JOIN public.mdl_grade_categories cat ON (((cat.id = gi.categoryid) AND (cat.courseid = c.id)))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ((u.cve_departamental = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion d ON ((u.del = (d.cve_delegacion)::integer))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion))) WHERE (r.id = 5);


ALTER TABLE v_repo_his_act OWNER TO innovaedu;

--
-- Name: v_reportegralcal_hist; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_reportegralcal_hist AS
SELECT DISTINCT u.id, pg_catalog.concat(u.nom, ' ', u.pat, ' ', u.mat) AS alumno, u.username AS matricula, u.email AS correo_electronico, u.numred AS red, u.phone2 AS telefono, nor.nom_normativa AS direccion_normativa, dep.nom_dependencia AS unidad, atn.des_unidad_atencion AS unidad2, d.nom_delegacion AS delegacion, niv.des_nivel_atencion AS nivel_de_atencion, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, g.name AS grupo, r.name AS rolename, el.idcurso, el.idgmoduni, el.nomelem, mod.moduni AS nummoduni, un.numuni, mod.tipopc AS tipoelemento, public.f_get_tipo_recurso((mo.id)::integer) AS tiporecurso, el.porcentaje, el.catrec, mod.trabfin, cg.tipo, cg.caltot FROM ((((((((((((((((((((public.mdl_course c LEFT JOIN public.mdl_groups g ON ((g.courseid = c.id))) LEFT JOIN public.mdl_groups_members gm ON ((gm.groupid = g.id))) LEFT JOIN public.mdl_user u ON ((gm.userid = u.id))) LEFT JOIN public.mdl_role_assignments ra ON ((u.id = ra.userid))) LEFT JOIN public.mdl_certificate cert ON ((cert.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.userid = u.id) AND (cert.id = iss.certificateid)))) LEFT JOIN public.mdl_context ctx ON (((ra.contextid = ctx.id) AND (ctx.instanceid = c.id)))) LEFT JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN mdl_caltotalgral cg ON (((cg.userid = u.id) AND (cg.idcurso = c.id)))) LEFT JOIN mdl_elementoscal el ON ((el.idgmoduni = cg.idmod))) LEFT JOIN mdl_unidades un ON ((el.idgmoduni = un.id))) LEFT JOIN mdl_moduni mod ON ((un.idmoduni = mod.id))) LEFT JOIN public.mdl_modules mo ON ((el.module = mo.id))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ((u.cve_departamental = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion d ON ((u.del = (d.cve_delegacion)::integer))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion_padre = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion)));


ALTER TABLE v_reportegralcal_hist OWNER TO innovaedu;

--
-- Name: v_reportegralcursos_hist; Type: VIEW; Schema: calificaciones; Owner: innovaedu
--

CREATE VIEW v_reportegralcursos_hist AS
SELECT a.idcurso, a.idgmoduni, a.nomelem, c.id, c.moduni AS nummoduni, b.numuni, c.tipopc AS tipoelemento, public.f_get_tipo_recurso((d.id)::integer) AS tiporecurso, a.porcentaje, a.catrec, c.trabfin, c.evafintrabfin FROM (((mdl_elementoscal a JOIN mdl_unidades b ON ((a.idgmoduni = b.id))) JOIN mdl_moduni c ON ((b.idmoduni = c.id))) JOIN public.mdl_modules d ON ((a.module = d.id))) ORDER BY a.idcurso, c.moduni, b.numuni, a.id;


ALTER TABLE v_reportegralcursos_hist OWNER TO innovaedu;

SET search_path = cert, pg_catalog;

--
-- Name: cert.ssc_cert_certificate_fuente_id_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE "cert.ssc_cert_certificate_fuente_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "cert.ssc_cert_certificate_fuente_id_seq" OWNER TO innovaedu;

--
-- Name: mdl_certificadostot; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificadostot (
    id integer NOT NULL,
    nomcorto character varying(20) NOT NULL,
    username character varying(10) NOT NULL,
    codigo character varying(50) NOT NULL
);


ALTER TABLE mdl_certificadostot OWNER TO innovaedu;

--
-- Name: TABLE mdl_certificadostot; Type: COMMENT; Schema: cert; Owner: innovaedu
--

COMMENT ON TABLE mdl_certificadostot IS 'Certificados por Erick';


--
-- Name: mdl_certificate_cargo; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_cargo (
    id integer NOT NULL,
    cargo character varying(100)
);


ALTER TABLE mdl_certificate_cargo OWNER TO innovaedu;

--
-- Name: mdl_certificate_cargo_id_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_cargo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_cargo_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_cargo_id_seq; Type: SEQUENCE OWNED BY; Schema: cert; Owner: innovaedu
--

ALTER SEQUENCE mdl_certificate_cargo_id_seq OWNED BY mdl_certificate_cargo.id;


--
-- Name: mdl_certificate_firmas_id_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_firmas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_firmas_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_firmas; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_firmas (
    id integer DEFAULT nextval('mdl_certificate_firmas_id_seq'::regclass) NOT NULL,
    nombre character varying(120),
    firma character varying(60)
);


ALTER TABLE mdl_certificate_firmas OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_certificate_issues_tut_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_issues_tut_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_issues_tut_id_seq OWNER TO innovaedu;

SET search_path = cert, pg_catalog;

--
-- Name: mdl_certificate_issues_tut; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_issues_tut (
    id bigint DEFAULT nextval('public.mdl_certificate_issues_tut_id_seq'::regclass) NOT NULL,
    certificateid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    studentname character varying(70) DEFAULT ''::character varying NOT NULL,
    code character varying(40),
    classname character varying(254) DEFAULT ''::character varying NOT NULL,
    certdate bigint DEFAULT 0,
    mailed smallint DEFAULT 0 NOT NULL,
    reportgrade character varying(10),
    bandera smallint DEFAULT 0 NOT NULL,
    imprimir text DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_certificate_issues_tut OWNER TO innovaedu;

--
-- Name: mdl_certificate_tutores; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_tutores (
    id integer NOT NULL,
    userid bigint NOT NULL,
    courseid bigint NOT NULL
);


ALTER TABLE mdl_certificate_tutores OWNER TO innovaedu;

--
-- Name: mdl_certificate_tutores_id_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_tutores_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_tutores_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_tutores_id_seq; Type: SEQUENCE OWNED BY; Schema: cert; Owner: innovaedu
--

ALTER SEQUENCE mdl_certificate_tutores_id_seq OWNED BY mdl_certificate_tutores.id;


--
-- Name: ssc_cat_cargo_cve_cargo_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_cat_cargo_cve_cargo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_cat_cargo_cve_cargo_seq OWNER TO innovaedu;

--
-- Name: ssc_cat_cargo; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cat_cargo (
    cve_cargo integer DEFAULT nextval('ssc_cat_cargo_cve_cargo_seq'::regclass) NOT NULL,
    des_cargo text NOT NULL,
    ind_visible numeric(1,0) NOT NULL
);


ALTER TABLE ssc_cat_cargo OWNER TO innovaedu;

--
-- Name: ssc_cat_firma_cve_firma_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_cat_firma_cve_firma_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_cat_firma_cve_firma_seq OWNER TO innovaedu;

--
-- Name: ssc_cat_firma; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cat_firma (
    cve_firma integer DEFAULT nextval('ssc_cat_firma_cve_firma_seq'::regclass) NOT NULL,
    nom_autoridad character varying(120) NOT NULL,
    cve_cargo integer NOT NULL,
    ind_visible numeric(1,0) NOT NULL
);


ALTER TABLE ssc_cat_firma OWNER TO innovaedu;

--
-- Name: ssc_cat_formato_cve_formato_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_cat_formato_cve_formato_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_cat_formato_cve_formato_seq OWNER TO innovaedu;

--
-- Name: ssc_cat_formato; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cat_formato (
    cve_formato bigint DEFAULT nextval('ssc_cat_formato_cve_formato_seq'::regclass) NOT NULL,
    nom_nombre character varying(100) NOT NULL,
    des_tipo_letra integer
);


ALTER TABLE ssc_cat_formato OWNER TO innovaedu;

--
-- Name: ssc_cat_tipo_elemento_cve_tipo_elemento_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_cat_tipo_elemento_cve_tipo_elemento_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_cat_tipo_elemento_cve_tipo_elemento_seq OWNER TO innovaedu;

--
-- Name: ssc_cat_tipo_elemento; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cat_tipo_elemento (
    cve_tipo_elemento integer DEFAULT nextval('ssc_cat_tipo_elemento_cve_tipo_elemento_seq'::regclass) NOT NULL,
    des_nombre character varying(15) NOT NULL
);


ALTER TABLE ssc_cat_tipo_elemento OWNER TO innovaedu;

--
-- Name: ssc_cert_certificate_cve; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cert_certificate_cve (
    cve_cert_config integer NOT NULL,
    idrol integer NOT NULL,
    id_parrafos integer NOT NULL
);


ALTER TABLE ssc_cert_certificate_cve OWNER TO innovaedu;

--
-- Name: ssc_cert_certificate_fuente; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cert_certificate_fuente (
    id integer DEFAULT nextval('"cert.ssc_cert_certificate_fuente_id_seq"'::regclass) NOT NULL,
    descripcion character(100),
    familia character(20)
);


ALTER TABLE ssc_cert_certificate_fuente OWNER TO innovaedu;

--
-- Name: ssc_cert_certificate_parrafos; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cert_certificate_parrafos (
    id integer NOT NULL,
    texto text
);


ALTER TABLE ssc_cert_certificate_parrafos OWNER TO innovaedu;

--
-- Name: ssc_cert_issues_bitacora_cve_issues_bitacora_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_cert_issues_bitacora_cve_issues_bitacora_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_cert_issues_bitacora_cve_issues_bitacora_seq OWNER TO innovaedu;

--
-- Name: ssc_cert_issues_bitacora; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_cert_issues_bitacora (
    cve_issues_bitacora bigint DEFAULT nextval('ssc_cert_issues_bitacora_cve_issues_bitacora_seq'::regclass) NOT NULL,
    cert_issues_id bigint NOT NULL,
    timecreated timestamp without time zone NOT NULL,
    comentario text NOT NULL,
    vigencia numeric(1,0) NOT NULL,
    imprimir integer
);


ALTER TABLE ssc_cert_issues_bitacora OWNER TO innovaedu;

--
-- Name: ssc_tab_cert_firmas_cve_cert_config_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_cert_firmas_cve_cert_config_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_cert_firmas_cve_cert_config_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_cert_firmas; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_tab_cert_firmas (
    cve_cert_config bigint DEFAULT nextval('ssc_tab_cert_firmas_cve_cert_config_seq'::regclass) NOT NULL,
    cve_firma integer NOT NULL,
    ref_posicion character(1) NOT NULL
);


ALTER TABLE ssc_tab_cert_firmas OWNER TO innovaedu;

--
-- Name: ssc_tab_cert_issues_conf; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_tab_cert_issues_conf (
    cert_issues_id bigint NOT NULL,
    bandera smallint NOT NULL,
    imprimir text NOT NULL,
    vigente integer NOT NULL,
    comentario text NOT NULL,
    tipocert numeric(1,0) NOT NULL,
    certificateid bigint NOT NULL,
    userid bigint NOT NULL,
    roleid bigint NOT NULL,
    code_crypted character varying(255) NOT NULL,
    convenio numeric(1,0) NOT NULL
);


ALTER TABLE ssc_tab_cert_issues_conf OWNER TO innovaedu;

--
-- Name: ssc_tab_certificate_config_cve_cert_config_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_certificate_config_cve_cert_config_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_certificate_config_cve_cert_config_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_certificate_config; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_tab_certificate_config (
    cve_cert_config bigint DEFAULT nextval('ssc_tab_certificate_config_cve_cert_config_seq'::regclass) NOT NULL,
    ind_imp_sede numeric(1,0),
    ind_automatico numeric(1,0),
    cve_formato bigint,
    cve_certificate bigint,
    gpc text DEFAULT 0
);


ALTER TABLE ssc_tab_certificate_config OWNER TO innovaedu;

--
-- Name: ssc_tab_format_elem_cve_cert_config_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_format_elem_cve_cert_config_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_format_elem_cve_cert_config_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_format_elem_cve_format_elem_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_format_elem_cve_format_elem_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_format_elem_cve_format_elem_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_format_elem_cve_tipo_elemento_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_format_elem_cve_tipo_elemento_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_format_elem_cve_tipo_elemento_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_format_elem; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_tab_format_elem (
    cve_format_elem bigint DEFAULT nextval('ssc_tab_format_elem_cve_format_elem_seq'::regclass) NOT NULL,
    cve_formato bigint,
    ind_pos_x double precision NOT NULL,
    ind_pos_y double precision NOT NULL,
    ind_pos_h character varying(60) NOT NULL,
    ind_pos_w character varying(60) NOT NULL,
    des_descripcion text NOT NULL,
    des_color character varying(30) NOT NULL,
    des_alineacion character(1) NOT NULL,
    cve_tipo_elemento integer DEFAULT nextval('ssc_tab_format_elem_cve_tipo_elemento_seq'::regclass) NOT NULL,
    cve_firma bigint,
    tamano_fuente integer,
    cve_cert_config bigint DEFAULT nextval('ssc_tab_format_elem_cve_cert_config_seq'::regclass) NOT NULL,
    negritas character(1)
);


ALTER TABLE ssc_tab_format_elem OWNER TO innovaedu;

--
-- Name: ssc_tab_liberacion_cve_cert_liberacion_seq; Type: SEQUENCE; Schema: cert; Owner: innovaedu
--

CREATE SEQUENCE ssc_tab_liberacion_cve_cert_liberacion_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssc_tab_liberacion_cve_cert_liberacion_seq OWNER TO innovaedu;

--
-- Name: ssc_tab_liberacion; Type: TABLE; Schema: cert; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssc_tab_liberacion (
    cve_cert_liberacion bigint DEFAULT nextval('ssc_tab_liberacion_cve_cert_liberacion_seq'::regclass) NOT NULL,
    cve_cert_config bigint NOT NULL,
    cve_rol bigint NOT NULL,
    ind_tipo_accion numeric(1,0) NOT NULL
);


ALTER TABLE ssc_tab_liberacion OWNER TO innovaedu;

--
-- Name: v_certificado_gestion; Type: VIEW; Schema: cert; Owner: innovaedu
--

CREATE VIEW v_certificado_gestion AS
SELECT u.username AS matricula, u.id, pg_catalog.concat(u.firstname, ' ', u.lastname) AS alumno, c.id AS id_curso, pg_catalog.concat(c.fullname, ' (', c.shortname, ') ') AS curso, isc.code_crypted, r.id AS id_rol, r.name AS rolename, iss.id AS id_cert, isc.vigente, isc.imprimir, iss.timecreated AS fecha, isc.comentario, iss.code FROM (((((public.mdl_course c JOIN public.mdl_certificate cert ON ((cert.course = c.id))) JOIN public.mdl_certificate_issues iss ON ((cert.id = iss.certificateid))) JOIN ssc_tab_cert_issues_conf isc ON ((isc.cert_issues_id = iss.id))) JOIN public.mdl_user u ON ((iss.userid = u.id))) JOIN public.mdl_role r ON ((r.id = isc.roleid))) WHERE ((isc.vigente = 1) OR (isc.vigente = 0)) ORDER BY pg_catalog.concat(u.firstname, ' ', u.lastname);


ALTER TABLE v_certificado_gestion OWNER TO innovaedu;

SET search_path = departments, pg_catalog;

--
-- Name: ssd_cat_tipo_adscripcion; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_cat_tipo_adscripcion (
    id integer NOT NULL,
    nom_tipo text,
    ind_orden integer
);


ALTER TABLE ssd_cat_tipo_adscripcion OWNER TO innovaedu;

--
-- Name: ssd_cat_tipo_adscripcion_id_seq; Type: SEQUENCE; Schema: departments; Owner: innovaedu
--

CREATE SEQUENCE ssd_cat_tipo_adscripcion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssd_cat_tipo_adscripcion_id_seq OWNER TO innovaedu;

--
-- Name: ssd_cat_tipo_adscripcion_id_seq; Type: SEQUENCE OWNED BY; Schema: departments; Owner: innovaedu
--

ALTER SEQUENCE ssd_cat_tipo_adscripcion_id_seq OWNED BY ssd_cat_tipo_adscripcion.id;


--
-- Name: ssd_regiones; Type: TABLE; Schema: departments; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssd_regiones (
    cve_regiones integer NOT NULL,
    name_region character varying(20)
);


ALTER TABLE ssd_regiones OWNER TO innovaedu;

--
-- Name: ssv_departamentos; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_departamentos AS
SELECT a.cve_unidad_atencion, a.des_unidad_atencion, a.ind_medica, b.cve_organo_control, b.nom_organo_control, c.cve_departamento, c.nom_normativa, d.cve_depto_adscripcion, d.nom_dependencia, d.ref_ubicacion, d.cve_delegacion, e.nom_delegacion, f.nom_depto_adscripcion, f.cve_depto_adscripcion_padre, g.cve_nivel_atencion, g.des_nivel_atencion, d.ind_imss_oport, d.ind_umae, f.id_tipo_adscripcion, e.cve_regiones, r.name_region FROM (((((((ssd_cat_unidad_atencion a JOIN ssd_cat_organo_control b ON ((a.cve_unidad_atencion = b.cve_unidad_atencion))) JOIN ssd_cat_normativa c ON ((b.cve_organo_control = c.cve_organo_control))) JOIN ssd_cat_dependencia d ON (((c.cve_organo_control = d.cve_organo_control) AND (c.cve_departamento = d.cve_departamento)))) JOIN ssd_cat_delegacion e ON ((d.cve_delegacion = e.cve_delegacion))) JOIN ssd_cat_depto_adscripcion f ON ((d.cve_depto_adscripcion = f.cve_depto_adscripcion))) LEFT JOIN ssd_cat_nivel_atencion g ON ((d.cve_nivel_atencion = g.cve_nivel_atencion))) LEFT JOIN ssd_regiones r ON ((r.cve_regiones = e.cve_regiones)));


ALTER TABLE ssv_departamentos OWNER TO innovaedu;

--
-- Name: ssv_departamentos_tipo_unidad; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_departamentos_tipo_unidad AS
SELECT ads.cve_depto_adscripcion, dep.cve_delegacion, ads.nom_depto_adscripcion, dep.nom_dependencia, dep.cve_nivel_atencion, atn.ind_medica AS tipo_unidad, ads.cve_depto_adscripcion_padre, ads.id_tipo_adscripcion, ads.des_nombre_completo, dep.ref_ubicacion, nor.nom_normativa, dep.ind_imss_oport, dep.ind_umae, ads.ind_baja FROM ((((((ssd_cat_depto_adscripcion ads LEFT JOIN ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion = dep.cve_depto_adscripcion))) LEFT JOIN ssd_cat_delegacion del ON ((dep.cve_delegacion = del.cve_delegacion))) LEFT JOIN ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion)));


ALTER TABLE ssv_departamentos_tipo_unidad OWNER TO innovaedu;

--
-- Name: ssv_deptoPadre; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW "ssv_deptoPadre" AS
SELECT padre.cve_depto_adscripcion, max((padre.nom_depto_adscripcion)::text) AS nom_depto_adscripcion, max((padre.des_nombre_completo)::text) AS des_nombre_completo, max(padre.id_tipo_adscripcion) AS id_tipo_adscripcion, max(padre.ind_baja) AS ind_baja, count(*) AS total FROM (ssd_cat_depto_adscripcion padre LEFT JOIN ssd_cat_depto_adscripcion hijo ON ((hijo.cve_depto_adscripcion_padre = padre.cve_depto_adscripcion))) GROUP BY padre.cve_depto_adscripcion;


ALTER TABLE "ssv_deptoPadre" OWNER TO innovaedu;

--
-- Name: ssv_rep_general; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_rep_general AS
SELECT a.cve_delegacion, b.nom_delegacion, CASE WHEN (b.ref_identificador = 'E'::bpchar) THEN 'Estatal'::text WHEN (b.ref_identificador = 'R'::bpchar) THEN 'Regional'::text ELSE 'Sin Datos'::text END AS identificador, b.ref_tipo, d.ind_medica, CASE WHEN (d.ind_medica = (0)::numeric) THEN 'No Medica'::text WHEN (d.ind_medica = (1)::numeric) THEN 'Medica'::text ELSE 'Sin datos'::text END AS tipounidad, a.ind_imss_oport, a.ind_umae, f.des_nivel_atencion, u.cv1, u.id1, u.umaa_cv1, u.dependencia1, u.cv2, u.id2, u.umaa_cv2, u.dependencia2, u.cv3, u.id3, u.umaa_cv3, u.dependencia3, u.cv4, u.id4, u.umaa_cv4, u.dependencia4, u.cv5, u.id5, u.umaa_cv5, u.dependencia5, u.cv6, u.id6, u.umaa_cv6, u.dependencia6, u.cv7, u.id7, u.umaa_cv7, u.dependencia7, u.cv8, u.id8, u.umaa_cv8, u.dependencia8, e.nom_normativa, d.des_unidad_atencion FROM (((((((SELECT u1.cve_depto_adscripcion AS cv1, u1.id_tipo_adscripcion AS id1, CASE WHEN (substr((u1.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u1.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv1, u1.nom_depto_adscripcion AS dependencia1, u2.cve_depto_adscripcion AS cv2, u2.id_tipo_adscripcion AS id2, CASE WHEN (substr((u2.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u2.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv2, u2.nom_depto_adscripcion AS dependencia2, u3.cve_depto_adscripcion AS cv3, u3.id_tipo_adscripcion AS id3, CASE WHEN (substr((u3.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u3.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv3, u3.nom_depto_adscripcion AS dependencia3, u4.cve_depto_adscripcion AS cv4, u4.id_tipo_adscripcion AS id4, CASE WHEN (substr((u4.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u4.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv4, u4.nom_depto_adscripcion AS dependencia4, u5.cve_depto_adscripcion AS cv5, u5.id_tipo_adscripcion AS id5, CASE WHEN (substr((u5.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u5.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv5, u5.nom_depto_adscripcion AS dependencia5, u6.cve_depto_adscripcion AS cv6, u6.id_tipo_adscripcion AS id6, CASE WHEN (substr((u6.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u6.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv6, u6.nom_depto_adscripcion AS dependencia6, u7.cve_depto_adscripcion AS cv7, u7.id_tipo_adscripcion AS id7, CASE WHEN (substr((u7.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u7.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv7, u7.nom_depto_adscripcion AS dependencia7, u8.cve_depto_adscripcion AS cv8, u8.id_tipo_adscripcion AS id8, CASE WHEN (substr((u8.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u8.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv8, u8.nom_depto_adscripcion AS dependencia8 FROM ((((((((SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion WHERE (ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre IS NULL)) u1 LEFT JOIN ssd_cat_depto_adscripcion u2 ON ((u2.cve_depto_adscripcion_padre = u1.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u3 ON ((u3.cve_depto_adscripcion_padre = u2.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u4 ON ((u4.cve_depto_adscripcion_padre = u3.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u5 ON ((u5.cve_depto_adscripcion_padre = u4.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u6 ON ((u6.cve_depto_adscripcion_padre = u5.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u7 ON ((u7.cve_depto_adscripcion_padre = u6.cve_depto_adscripcion))) LEFT JOIN ssd_cat_depto_adscripcion u8 ON ((u8.cve_depto_adscripcion_padre = u7.cve_depto_adscripcion)))) u LEFT JOIN ssd_cat_dependencia a ON ((u.cv1 = a.cve_depto_adscripcion))) LEFT JOIN ssd_cat_delegacion b ON ((a.cve_delegacion = b.cve_delegacion))) LEFT JOIN ssd_cat_organo_control c ON ((a.cve_organo_control = c.cve_organo_control))) LEFT JOIN ssd_cat_unidad_atencion d ON ((c.cve_unidad_atencion = d.cve_unidad_atencion))) LEFT JOIN ssd_cat_normativa e ON (((a.cve_organo_control = e.cve_organo_control) AND (a.cve_departamento = e.cve_departamento)))) LEFT JOIN ssd_cat_nivel_atencion f ON ((a.cve_nivel_atencion = f.cve_nivel_atencion))) ORDER BY a.cve_delegacion;


ALTER TABLE ssv_rep_general OWNER TO innovaedu;

--
-- Name: ssv_rep_general_2; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_rep_general_2 AS
SELECT a.cve_delegacion, b.nom_delegacion, CASE WHEN (b.ref_identificador = 'E'::bpchar) THEN 'Estatal'::text WHEN (b.ref_identificador = 'R'::bpchar) THEN 'Regional'::text ELSE 'Sin Datos'::text END AS identificador, b.ref_tipo, d.ind_medica, CASE WHEN (d.ind_medica = (0)::numeric) THEN 'No Medica'::text WHEN (d.ind_medica = (1)::numeric) THEN 'Medica'::text ELSE 'Sin datos'::text END AS tipounidad, a.ind_imss_oport, a.ind_umae, f.des_nivel_atencion, u.cv1, u.id1, u.umaa_cv1, u.dependencia1, u.cv2, u.id2, u.umaa_cv2, u.dependencia2, u.cv3, u.id3, u.umaa_cv3, u.dependencia3, u.cv4, u.id4, u.umaa_cv4, u.dependencia4, u.cv5, u.id5, u.umaa_cv5, u.dependencia5, u.cv6, u.id6, u.umaa_cv6, u.dependencia6, e.nom_normativa, d.des_unidad_atencion, a.nom_dependencia FROM (((((((SELECT u1.cve_depto_adscripcion AS cv1, u1.id_tipo_adscripcion AS id1, CASE WHEN (substr((u1.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u1.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv1, u1.nom_depto_adscripcion AS dependencia1, u2.cve_depto_adscripcion AS cv2, u2.id_tipo_adscripcion AS id2, CASE WHEN (substr((u2.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u2.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv2, u2.nom_depto_adscripcion AS dependencia2, u3.cve_depto_adscripcion AS cv3, u3.id_tipo_adscripcion AS id3, CASE WHEN (substr((u3.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u3.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv3, u3.nom_depto_adscripcion AS dependencia3, u4.cve_depto_adscripcion AS cv4, u4.id_tipo_adscripcion AS id4, CASE WHEN (substr((u4.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u4.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv4, u4.nom_depto_adscripcion AS dependencia4, u5.cve_depto_adscripcion AS cv5, u5.id_tipo_adscripcion AS id5, CASE WHEN (substr((u5.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u5.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv5, u5.nom_depto_adscripcion AS dependencia5, u6.cve_depto_adscripcion AS cv6, u6.id_tipo_adscripcion AS id6, CASE WHEN (substr((u6.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((u6.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa_cv6, u6.nom_depto_adscripcion AS dependencia6 FROM ((((((SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion WHERE (ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre IS NULL)) u1 LEFT JOIN (SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion) u2 ON ((u2.cve_depto_adscripcion_padre = u1.cve_depto_adscripcion))) LEFT JOIN (SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion) u3 ON ((u3.cve_depto_adscripcion_padre = u2.cve_depto_adscripcion))) LEFT JOIN (SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion) u4 ON ((u4.cve_depto_adscripcion_padre = u3.cve_depto_adscripcion))) LEFT JOIN (SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion) u5 ON ((u5.cve_depto_adscripcion_padre = u4.cve_depto_adscripcion))) LEFT JOIN (SELECT ssd_cat_depto_adscripcion.cve_depto_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion, ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre, ssd_cat_depto_adscripcion.des_nombre_completo, ssd_cat_depto_adscripcion.ind_baja, ssd_cat_depto_adscripcion.id_tipo_adscripcion FROM ssd_cat_depto_adscripcion) u6 ON ((u6.cve_depto_adscripcion_padre = u5.cve_depto_adscripcion)))) u LEFT JOIN ssd_cat_dependencia a ON ((u.cv1 = a.cve_depto_adscripcion))) LEFT JOIN ssd_cat_delegacion b ON ((a.cve_delegacion = b.cve_delegacion))) LEFT JOIN ssd_cat_organo_control c ON ((a.cve_organo_control = c.cve_organo_control))) LEFT JOIN ssd_cat_unidad_atencion d ON ((c.cve_unidad_atencion = d.cve_unidad_atencion))) LEFT JOIN ssd_cat_normativa e ON (((a.cve_organo_control = e.cve_organo_control) AND (a.cve_departamento = e.cve_departamento)))) LEFT JOIN ssd_cat_nivel_atencion f ON ((a.cve_nivel_atencion = f.cve_nivel_atencion))) ORDER BY a.cve_delegacion;


ALTER TABLE ssv_rep_general_2 OWNER TO innovaedu;

--
-- Name: ssv_rep_general_rama; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_rep_general_rama AS
SELECT ssd_cat_delegacion.cve_delegacion, ssd_cat_delegacion.nom_delegacion, CASE ssd_cat_delegacion.ref_identificador WHEN 'E'::bpchar THEN 'Estatal'::text WHEN 'R'::bpchar THEN 'Regional'::text ELSE NULL::text END AS ref_identificador, ssd_cat_delegacion.ref_tipo, ssd_cat_unidad_atencion.ind_medica, CASE ssd_cat_unidad_atencion.ind_medica WHEN 0 THEN 'No Medica'::text WHEN 1 THEN 'Medica'::text ELSE NULL::text END AS tipo_unidad, ssd_cat_dependencia.ind_imss_oport, ssd_cat_dependencia.ind_umae, ssd_cat_dependencia.cve_nivel_atencion, ssd_cat_nivel_atencion.des_nivel_atencion, ssd_cat_dependencia.nom_dependencia, ssd_cat_normativa.nom_normativa, ssd_cat_unidad_atencion.des_unidad_atencion, cda0.cve_depto_adscripcion, cda0.id_tipo_adscripcion, CASE WHEN ((substr((cda0.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda0.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa, cda0.nom_depto_adscripcion, cda1.cve_depto_adscripcion AS cve_depto_adscripcion_padre1, cda1.id_tipo_adscripcion AS id_tipo_adscripcion_padre1, CASE WHEN ((substr((cda1.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda1.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre1, cda1.nom_depto_adscripcion AS nom_depto_adscripcion_padre1, cda2.cve_depto_adscripcion AS cve_depto_adscripcion_padre2, cda2.id_tipo_adscripcion AS id_tipo_adscripcion_padre2, CASE WHEN ((substr((cda2.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda2.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre2, cda2.nom_depto_adscripcion AS nom_depto_adscripcion_padre2, cda3.cve_depto_adscripcion AS cve_depto_adscripcion_padre3, cda3.id_tipo_adscripcion AS id_tipo_adscripcion_padre3, CASE WHEN ((substr((cda3.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda3.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre3, cda3.nom_depto_adscripcion AS nom_depto_adscripcion_padre3, cda4.cve_depto_adscripcion AS cve_depto_adscripcion_padre4, cda4.id_tipo_adscripcion AS id_tipo_adscripcion_padre4, CASE WHEN ((substr((cda4.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda4.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre4, cda4.nom_depto_adscripcion AS nom_depto_adscripcion_padre4, cda5.cve_depto_adscripcion AS cve_depto_adscripcion_padre5, cda5.id_tipo_adscripcion AS id_tipo_adscripcion_padre5, CASE WHEN ((substr((cda5.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda5.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre5, cda5.nom_depto_adscripcion AS nom_depto_adscripcion_padre5, cda6.cve_depto_adscripcion AS cve_depto_adscripcion_padre6, cda6.id_tipo_adscripcion AS id_tipo_adscripcion_padre6, CASE WHEN ((substr((cda6.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda6.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre6, cda6.nom_depto_adscripcion AS nom_depto_adscripcion_padre6, cda7.cve_depto_adscripcion AS cve_depto_adscripcion_padre7, cda7.id_tipo_adscripcion AS id_tipo_adscripcion_padre7, CASE WHEN ((substr((cda7.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) OR ("position"(substr((cda7.cve_depto_adscripcion)::text, 6, 4), 'BW'::text) > 0)) THEN 1 ELSE 0 END AS ind_umaa_padre7, cda7.nom_depto_adscripcion AS nom_depto_adscripcion_padre7 FROM (((((((((((((ssd_cat_depto_adscripcion cda0 LEFT JOIN ssd_cat_depto_adscripcion cda1 ON ((cda1.cve_depto_adscripcion = cda0.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda2 ON ((cda2.cve_depto_adscripcion = cda1.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda3 ON ((cda3.cve_depto_adscripcion = cda2.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda4 ON ((cda4.cve_depto_adscripcion = cda3.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda5 ON ((cda5.cve_depto_adscripcion = cda4.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda6 ON ((cda6.cve_depto_adscripcion = cda5.cve_depto_adscripcion_padre))) LEFT JOIN ssd_cat_depto_adscripcion cda7 ON ((cda7.cve_depto_adscripcion = cda6.cve_depto_adscripcion_padre))) JOIN ssd_cat_dependencia ON ((ssd_cat_dependencia.cve_depto_adscripcion = cda0.cve_depto_adscripcion))) JOIN ssd_cat_normativa ON (((ssd_cat_normativa.cve_organo_control = ssd_cat_dependencia.cve_organo_control) AND (ssd_cat_normativa.cve_departamento = ssd_cat_dependencia.cve_departamento)))) JOIN ssd_cat_organo_control ON ((ssd_cat_organo_control.cve_organo_control = ssd_cat_normativa.cve_organo_control))) JOIN ssd_cat_delegacion ON ((ssd_cat_delegacion.cve_delegacion = ssd_cat_dependencia.cve_delegacion))) JOIN ssd_cat_unidad_atencion ON ((ssd_cat_unidad_atencion.cve_unidad_atencion = ssd_cat_organo_control.cve_unidad_atencion))) LEFT JOIN ssd_cat_nivel_atencion ON ((ssd_cat_nivel_atencion.cve_nivel_atencion = ssd_cat_dependencia.cve_nivel_atencion)));


ALTER TABLE ssv_rep_general_rama OWNER TO innovaedu;

--
-- Name: ssv_v_ads; Type: VIEW; Schema: departments; Owner: innovaedu
--

CREATE VIEW ssv_v_ads AS
SELECT DISTINCT del.nom_delegacion AS delegacion, del.cve_delegacion, niv.des_nivel_atencion AS nivel_de_atencion, niv.cve_nivel_atencion, atn.ind_medica AS tipo_unidad, atn.des_unidad_atencion AS unidad_medica, atn.cve_unidad_atencion, ads.cve_depto_adscripcion, dep.nom_dependencia AS dependencia, pg_catalog.concat(ads.nom_depto_adscripcion, '  -  ', dep.nom_dependencia, '  -  ', '(', dep.cve_depto_adscripcion, ')') AS adscripcion FROM ((((((ssd_cat_depto_adscripcion ads JOIN ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion = dep.cve_depto_adscripcion))) JOIN ssd_cat_delegacion del ON ((dep.cve_delegacion = del.cve_delegacion))) LEFT JOIN ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) JOIN ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) JOIN ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) JOIN ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion)));


ALTER TABLE ssv_v_ads OWNER TO innovaedu;

SET search_path = encuestas, pg_catalog;

--
-- Name: sse_curso_bloque_grupo; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_curso_bloque_grupo (
    course_cve integer NOT NULL,
    mdl_groups_cve integer NOT NULL,
    bloque integer NOT NULL
);


ALTER TABLE sse_curso_bloque_grupo OWNER TO innovaedu;

--
-- Name: sse_encuesta_curso; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_encuesta_curso (
    encuesta_curso_cve integer NOT NULL,
    mdl_groups_cve integer,
    course_cve integer NOT NULL,
    encuesta_cve integer NOT NULL,
    alcance_curso_cve integer NOT NULL
);


ALTER TABLE sse_encuesta_curso OWNER TO innovaedu;

--
-- Name: sse_encuesta_curso_encuesta_curso_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_encuesta_curso_encuesta_curso_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_encuesta_curso_encuesta_curso_cve_seq OWNER TO innovaedu;

--
-- Name: sse_encuesta_curso_encuesta_curso_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_encuesta_curso_encuesta_curso_cve_seq OWNED BY sse_encuesta_curso.encuesta_curso_cve;


--
-- Name: sse_encuestas; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_encuestas (
    encuesta_cve integer NOT NULL,
    descripcion_encuestas character varying(300),
    is_bono numeric(1,0) DEFAULT 0 NOT NULL,
    status numeric(1,0) DEFAULT 1 NOT NULL,
    cve_corta_encuesta character varying(20),
    reglas_evaluacion_cve integer,
    fecha_creacion date,
    tipo_encuesta integer,
    eva_tipo integer
);


ALTER TABLE sse_encuestas OWNER TO innovaedu;

--
-- Name: sse_encuestas_encuesta_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_encuestas_encuesta_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_encuestas_encuesta_cve_seq OWNER TO innovaedu;

--
-- Name: sse_encuestas_encuesta_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_encuestas_encuesta_cve_seq OWNED BY sse_encuestas.encuesta_cve;


--
-- Name: sse_evaluacion; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_evaluacion (
    evaluacion_cve bigint NOT NULL,
    encuesta_cve integer NOT NULL,
    preguntas_cve integer NOT NULL,
    reactivos_cve integer NOT NULL,
    course_cve bigint NOT NULL,
    group_id bigint NOT NULL,
    evaluado_user_cve bigint NOT NULL,
    evaluado_rol_id bigint NOT NULL,
    evaluador_user_cve bigint NOT NULL,
    evaluador_rol_id bigint NOT NULL,
    respuesta_abierta text,
    fecha timestamp without time zone DEFAULT now() NOT NULL,
    grupos_ids_text character varying(256)
);


ALTER TABLE sse_evaluacion OWNER TO innovaedu;

--
-- Name: sse_evaluacion_evaluacion_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_evaluacion_evaluacion_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_evaluacion_evaluacion_cve_seq OWNER TO innovaedu;

--
-- Name: sse_evaluacion_evaluacion_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_evaluacion_evaluacion_cve_seq OWNED BY sse_evaluacion.evaluacion_cve;


--
-- Name: sse_indicador; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_indicador (
    indicador_cve integer NOT NULL,
    descripcion character varying(100)
);


ALTER TABLE sse_indicador OWNER TO innovaedu;

--
-- Name: sse_indicador_indicador_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_indicador_indicador_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_indicador_indicador_cve_seq OWNER TO innovaedu;

--
-- Name: sse_indicador_indicador_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_indicador_indicador_cve_seq OWNED BY sse_indicador.indicador_cve;


--
-- Name: sse_preguntas; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_preguntas (
    preguntas_cve integer NOT NULL,
    seccion_cve integer NOT NULL,
    encuesta_cve integer NOT NULL,
    tipo_pregunta_cve integer NOT NULL,
    pregunta character varying(500),
    pregunta_abierta_cerrada character varying(20),
    obligada numeric(1,0) DEFAULT 0 NOT NULL,
    orden integer,
    is_bono numeric(1,0),
    has_children numeric(1,0) DEFAULT 0 NOT NULL,
    obligatoria numeric(1,0),
    val_ref integer,
    pregunta_padre integer,
    encuesta_padre integer,
    tipo_indicador_cve integer DEFAULT 0 NOT NULL,
    valido_no_aplica numeric(1,0)
);


ALTER TABLE sse_preguntas OWNER TO innovaedu;

--
-- Name: COLUMN sse_preguntas.valido_no_aplica; Type: COMMENT; Schema: encuestas; Owner: innovaedu
--

COMMENT ON COLUMN sse_preguntas.valido_no_aplica IS 'Verifica si se discrimina la opcion de no aplica';


--
-- Name: sse_preguntas_preguntas_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_preguntas_preguntas_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_preguntas_preguntas_cve_seq OWNER TO innovaedu;

--
-- Name: sse_preguntas_preguntas_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_preguntas_preguntas_cve_seq OWNED BY sse_preguntas.preguntas_cve;


--
-- Name: sse_reglas_evaluacion; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_reglas_evaluacion (
    reglas_evaluacion_cve integer NOT NULL,
    rol_evaluado_cve integer NOT NULL,
    rol_evaluador_cve integer NOT NULL,
    is_excepcion integer DEFAULT 0 NOT NULL,
    tutorizado numeric(1,0) DEFAULT 0 NOT NULL,
    is_bono numeric(1,0) DEFAULT 0 NOT NULL,
    ord_prioridad integer,
    eval_is_satisfaccion numeric(1,0)
);


ALTER TABLE sse_reglas_evaluacion OWNER TO innovaedu;

--
-- Name: sse_reglas_evaluacion_reglas_evaluacion_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_reglas_evaluacion_reglas_evaluacion_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_reglas_evaluacion_reglas_evaluacion_cve_seq OWNER TO innovaedu;

--
-- Name: sse_reglas_evaluacion_reglas_evaluacion_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_reglas_evaluacion_reglas_evaluacion_cve_seq OWNED BY sse_reglas_evaluacion.reglas_evaluacion_cve;


--
-- Name: sse_respuestas; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_respuestas (
    reactivos_cve integer NOT NULL,
    preguntas_cve integer NOT NULL,
    ponderacion integer,
    texto character varying(1000),
    orden numeric(2,0),
    encuesta_cve integer NOT NULL,
    texto_real character varying(1000)
);


ALTER TABLE sse_respuestas OWNER TO innovaedu;

--
-- Name: sse_respuestas_reactivos_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_respuestas_reactivos_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_respuestas_reactivos_cve_seq OWNER TO innovaedu;

--
-- Name: sse_respuestas_reactivos_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_respuestas_reactivos_cve_seq OWNED BY sse_respuestas.reactivos_cve;


--
-- Name: sse_result_evaluacion_encuesta_curso; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_result_evaluacion_encuesta_curso (
    evaluacion_resul_cve bigint NOT NULL,
    encuesta_cve integer NOT NULL,
    course_cve integer NOT NULL,
    group_id integer NOT NULL,
    evaluado_user_cve integer NOT NULL,
    evaluador_user_cve integer NOT NULL,
    total_puntua_si integer DEFAULT 0 NOT NULL,
    total_nos integer DEFAULT 0 NOT NULL,
    total_no_puntua_napv integer DEFAULT 0 NOT NULL,
    total_reactivos_bono integer DEFAULT 0 NOT NULL,
    base integer DEFAULT 0 NOT NULL,
    calif_emitida numeric(6,3) DEFAULT 0 NOT NULL,
    fecha_add timestamp without time zone DEFAULT now(),
    grupos_ids_text character varying(256)
);


ALTER TABLE sse_result_evaluacion_encuesta_curso OWNER TO innovaedu;

--
-- Name: sse_result_evaluacion_evaluacion_resul_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_result_evaluacion_evaluacion_resul_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_result_evaluacion_evaluacion_resul_cve_seq OWNER TO innovaedu;

--
-- Name: sse_result_evaluacion_evaluacion_resul_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_result_evaluacion_evaluacion_resul_cve_seq OWNED BY sse_result_evaluacion_encuesta_curso.evaluacion_resul_cve;


--
-- Name: sse_seccion; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_seccion (
    seccion_cve integer NOT NULL,
    descripcion character varying(100)
);


ALTER TABLE sse_seccion OWNER TO innovaedu;

--
-- Name: sse_seccion_seccion_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_seccion_seccion_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_seccion_seccion_cve_seq OWNER TO innovaedu;

--
-- Name: sse_seccion_seccion_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_seccion_seccion_cve_seq OWNED BY sse_seccion.seccion_cve;


--
-- Name: sse_tipo_pregunta; Type: TABLE; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sse_tipo_pregunta (
    tipo_pregunta_cve integer NOT NULL,
    descripcion character varying(300)
);


ALTER TABLE sse_tipo_pregunta OWNER TO innovaedu;

--
-- Name: sse_tipo_pregunta_tipo_pregunta_cve_seq; Type: SEQUENCE; Schema: encuestas; Owner: innovaedu
--

CREATE SEQUENCE sse_tipo_pregunta_tipo_pregunta_cve_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sse_tipo_pregunta_tipo_pregunta_cve_seq OWNER TO innovaedu;

--
-- Name: sse_tipo_pregunta_tipo_pregunta_cve_seq; Type: SEQUENCE OWNED BY; Schema: encuestas; Owner: innovaedu
--

ALTER SEQUENCE sse_tipo_pregunta_tipo_pregunta_cve_seq OWNED BY sse_tipo_pregunta.tipo_pregunta_cve;


SET search_path = public, pg_catalog;

--
-- Name: mdl_course_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_config (
    course bigint NOT NULL,
    cuotacurso integer NOT NULL,
    achsel numeric(1,0) NOT NULL,
    modalidad numeric(1,0) NOT NULL,
    horascur numeric(4,0) NOT NULL,
    tipocur numeric(1,0) NOT NULL,
    estcert numeric(1,0) NOT NULL,
    visiblesiscalif numeric(1,0) NOT NULL,
    visiblesiscalifcc numeric(1,0) NOT NULL,
    preact numeric(1,0) NOT NULL,
    banderacalif integer,
    lastdate date NOT NULL,
    startdatepre date NOT NULL,
    lastdatepre date NOT NULL,
    formdocente numeric(1,0) NOT NULL,
    ind_cdpei numeric(1,0) DEFAULT 0,
    ind_mensaje numeric(1,0) DEFAULT 0 NOT NULL,
    tutorizado numeric(1,0) DEFAULT 0
);


ALTER TABLE mdl_course_config OWNER TO innovaedu;

SET search_path = encuestas, pg_catalog;

--
-- Name: view_datos_curso; Type: VIEW; Schema: encuestas; Owner: innovaedu
--

CREATE VIEW view_datos_curso AS
SELECT cur.id AS idc, cur.shortname AS clave, cur.fullname AS namec, CASE ccfg.tipocur WHEN 0 THEN CASE "substring"((cur.shortname)::text, '%#"GPC#"%'::text, '#'::text) WHEN 'GPC'::text THEN 'Curso basado en GPC'::text ELSE 'Curso'::text END WHEN 1 THEN 'Diplomado'::text ELSE 'Error'::text END AS tipo_curso, CASE ccfg.tipocur WHEN 0 THEN CASE "substring"((cur.shortname)::text, '%#"GPC#"%'::text, '#'::text) WHEN 'GPC'::text THEN 3 ELSE 2 END WHEN 1 THEN 1 ELSE 0 END AS tipo_curso_id, gettutorizado_notutorizado(cur.shortname) AS tutorizado_anterir, ccfg.tutorizado, CASE ccfg.tutorizado WHEN 0 THEN 'No tutorizado'::text WHEN 1 THEN 'Tutorizado'::text ELSE 'ND'::text END AS tex_tutorizado, ccfg.horascur, to_char(to_timestamp((cur.startdate)::double precision), 'YYYY'::text) AS anio, ccfg.lastdate AS fecha_fin, (to_char(to_timestamp((cur.startdate)::double precision), 'YYYY-MM-DD'::text))::date AS fecha_inicio, CASE ccfg.tipocur WHEN 0 THEN 1 WHEN 1 THEN 3 ELSE 0 END AS alcance_curso, CASE WHEN (ccfg.horascur >= (120)::numeric) THEN 6 WHEN ((ccfg.horascur >= (80)::numeric) AND (ccfg.horascur < (120)::numeric)) THEN 3 WHEN ((ccfg.horascur >= (40)::numeric) AND (ccfg.horascur < (80)::numeric)) THEN 2 WHEN ((ccfg.horascur < (40)::numeric) AND (ccfg.horascur > (0)::numeric)) THEN 1 ELSE 0 END AS puntaje_duracion FROM (public.mdl_course cur JOIN public.mdl_course_config ccfg ON ((ccfg.course = cur.id)));


ALTER TABLE view_datos_curso OWNER TO innovaedu;

SET search_path = estadisticas, pg_catalog;

--
-- Name: v_crecimiento_curso; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_crecimiento_curso AS
SELECT DISTINCT c.id AS cursoid, pg_catalog.concat(c.fullname, ' ', c.shortname) AS curso, c.shortname AS clave_corta, to_char(to_timestamp((c.startdate)::double precision), 'DD-TMMonth-YYYY'::text) AS fecha_inicio, to_char(to_timestamp((c.lastdate)::double precision), 'DD-TMMonth-YYYY'::text) AS fecha_final FROM ((((public.mdl_user u JOIN public.mdl_groups_members gm1 ON ((gm1.userid = u.id))) JOIN public.mdl_groups g ON ((g.id = gm1.groupid))) JOIN public.mdl_course c ON ((c.id = g.courseid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id)));


ALTER TABLE v_crecimiento_curso OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: sied_ssg_sq_preregistro; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE sied_ssg_sq_preregistro
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sied_ssg_sq_preregistro OWNER TO innovaedu;

SET search_path = gestion, pg_catalog;

--
-- Name: sgp_tab_preregistro_al; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sgp_tab_preregistro_al (
    cve_preregistro bigint DEFAULT nextval('public.sied_ssg_sq_preregistro'::regclass) NOT NULL,
    nom_usuario character varying(100) NOT NULL,
    cve_curso bigint NOT NULL,
    nom_pwd character varying(20),
    des_email_pers character varying(100) NOT NULL,
    des_email_inst character varying(100),
    cve_cat integer,
    num_turno numeric(2,0),
    desc_teltrab character varying(40),
    desc_numred character varying(20),
    desc_telpart character varying(40),
    tms_fecha_prereg timestamp without time zone,
    cve_departamental character(10),
    ind_tipo_carga numeric(1,0) NOT NULL,
    cve_gposel integer,
    cve_medio integer DEFAULT 1,
    num_ant_anio numeric(2,0),
    num_ant_quincena numeric(4,0),
    num_ant_dias double precision,
    des_sede character varying(50),
    ind_estado_preregistro numeric(1,0) DEFAULT 0 NOT NULL,
    fchact date,
    des_tmp_ads character varying(100),
    des_tmp_del character varying(100),
    ind_vigencia character(1)
);


ALTER TABLE sgp_tab_preregistro_al OWNER TO innovaedu;

--
-- Name: sgp_tab_usuario; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sgp_tab_usuario (
    nom_usuario character varying(100) NOT NULL,
    nom_nombre character varying(50) NOT NULL,
    nom_paterno character varying(50) NOT NULL,
    nom_materno character varying(50),
    nom_curp character varying(20),
    tmsp_fecha_nac date,
    desc_sexo character(1),
    tmsp_ing_imss date,
    desc_rfc character varying(20)
);


ALTER TABLE sgp_tab_usuario OWNER TO innovaedu;

SET search_path = nomina, pg_catalog;

--
-- Name: ssn_categoria; Type: TABLE; Schema: nomina; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssn_categoria (
    cve_categoria integer NOT NULL,
    nom_nombre character varying(60) NOT NULL,
    cve_tipo_categoria integer NOT NULL,
    des_clave character varying(15) NOT NULL,
    num_jornada integer NOT NULL,
    num_class numeric(1,0) NOT NULL,
    des_tipo_nomina character(1) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssn_categoria OWNER TO innovaedu;

--
-- Name: ssn_tipo_catgoria; Type: TABLE; Schema: nomina; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssn_tipo_catgoria (
    cve_tipo_categoria integer NOT NULL,
    nom_nombre character varying(40) NOT NULL,
    ind_baja integer DEFAULT 1 NOT NULL
);


ALTER TABLE ssn_tipo_catgoria OWNER TO innovaedu;

SET search_path = parametrizacion, pg_catalog;

--
-- Name: ssp_tipo_roles; Type: TABLE; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssp_tipo_roles (
    cve_role integer NOT NULL,
    ind_tipo integer,
    ind_activo integer,
    jerarquia integer,
    ind_subtipo integer
);


ALTER TABLE ssp_tipo_roles OWNER TO innovaedu;

SET search_path = estadisticas, pg_catalog;

--
-- Name: v_estadistica_curso; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso AS
SELECT DISTINCT mdl_course.id AS id_curso, ssd_cat_delegacion.nom_delegacion AS delegacion, mdl_user.id AS userid, mdl_user.username AS matricula, mdl_user.pat AS ap_paterno, mdl_user.mat AS ap_materno, mdl_user.nom AS nombre, pg_catalog.concat(mdl_user.pat, ' ', mdl_user.mat, ' ', mdl_user.nom) AS nombre_completo, ssp_tipo_roles.ind_tipo, sgp_tab_preregistro_al.des_email_pers AS correo_electronico, sgp_tab_preregistro_al.cve_departamental AS clave_adscripcion, ssd_cat_depto_adscripcion.nom_depto_adscripcion AS nombre_adscripcion, ssd_cat_dependencia.nom_dependencia AS nombre_dependencia, ssn_categoria.nom_nombre AS nombre_categoria, ssn_categoria.des_clave AS clave_categoria, ssn_tipo_catgoria.nom_nombre AS tipo_categoria, sgp_tab_preregistro_al.desc_numred AS numero_red, sgp_tab_preregistro_al.desc_teltrab AS telefono_laboral, sgp_tab_preregistro_al.desc_telpart AS telefono_particular, mdl_course.shortname AS curso, mdl_groups.id AS grupoid, mdl_groups.name AS grupo, CASE WHEN (mdl_course.startdate >= 1388534400) THEN mdl_grade_grades.finalgrade WHEN (mdl_course.startdate < 1388534400) THEN cg.caltot ELSE NULL::numeric END AS calificacion, COALESCE(mdl_course_config.estcert, (0)::numeric) AS estado_certificado, COALESCE(ssc_tab_cert_issues_conf.vigente, 0) AS certificado_vigente FROM ((((((((((((((((((((((((public.mdl_course JOIN public.mdl_course_config ON ((mdl_course_config.course = mdl_course.id))) JOIN public.mdl_groups ON ((mdl_groups.courseid = mdl_course.id))) JOIN public.mdl_groups_members ON ((mdl_groups_members.groupid = mdl_groups.id))) LEFT JOIN gestion.sgp_tab_preregistro_al ON ((sgp_tab_preregistro_al.cve_curso = mdl_course.id))) LEFT JOIN gestion.sgp_tab_usuario ON (((sgp_tab_usuario.nom_usuario)::text = (sgp_tab_preregistro_al.nom_usuario)::text))) LEFT JOIN public.mdl_user ON (((mdl_groups_members.userid = mdl_user.id) AND ((mdl_user.username)::text = (sgp_tab_preregistro_al.nom_usuario)::text)))) JOIN public.mdl_role_assignments ON ((mdl_user.id = mdl_role_assignments.userid))) JOIN parametrizacion.ssp_tipo_roles ON (((ssp_tipo_roles.cve_role = mdl_role_assignments.roleid) AND (ssp_tipo_roles.ind_tipo = ANY (ARRAY[2, 3]))))) LEFT JOIN public.mdl_certificate ON ((mdl_certificate.course = mdl_course.id))) LEFT JOIN public.mdl_certificate_issues ON (((mdl_certificate_issues.certificateid = mdl_certificate.id) AND (mdl_certificate_issues.userid = mdl_user.id)))) LEFT JOIN cert.ssc_tab_cert_issues_conf ON ((ssc_tab_cert_issues_conf.cert_issues_id = mdl_certificate_issues.id))) JOIN public.mdl_context ON ((mdl_context.instanceid = mdl_course.id))) LEFT JOIN public.mdl_grade_items ON (((mdl_grade_items.courseid = mdl_course.id) AND ((mdl_grade_items.itemtype)::text = 'course'::text)))) LEFT JOIN public.mdl_grade_grades ON (((mdl_grade_grades.itemid = mdl_grade_items.id) AND (mdl_grade_grades.userid = mdl_user.id)))) LEFT JOIN calificaciones.mdl_caltotalgral cg ON ((((cg.userid = mdl_user.id) AND (cg.idcurso = mdl_course.id)) AND ((cg.tipo = 'T'::bpchar) OR (cg.tipo IS NULL))))) LEFT JOIN calificaciones.mdl_elementoscal el ON ((el.idgmoduni = cg.idmod))) LEFT JOIN calificaciones.mdl_unidades un ON ((el.idgmoduni = un.id))) LEFT JOIN calificaciones.mdl_moduni mod ON ((un.idmoduni = mod.id))) LEFT JOIN public.mdl_modules mo ON ((el.module = mo.id))) LEFT JOIN nomina.ssn_categoria ON ((ssn_categoria.cve_categoria = sgp_tab_preregistro_al.cve_cat))) LEFT JOIN nomina.ssn_tipo_catgoria ON ((ssn_tipo_catgoria.cve_tipo_categoria = ssn_categoria.cve_tipo_categoria))) LEFT JOIN departments.ssd_cat_depto_adscripcion ON ((ssd_cat_depto_adscripcion.cve_depto_adscripcion = sgp_tab_preregistro_al.cve_departamental))) LEFT JOIN departments.ssd_cat_dependencia ON ((ssd_cat_dependencia.cve_depto_adscripcion = ssd_cat_depto_adscripcion.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion ON ((ssd_cat_delegacion.cve_delegacion = ssd_cat_dependencia.cve_delegacion)));


ALTER TABLE v_estadistica_curso OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_userexp_id_exp_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_userexp_id_exp_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_userexp_id_exp_seq OWNER TO innovaedu;

--
-- Name: mdl_usertutor_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_usertutor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_usertutor_id_seq OWNER TO innovaedu;

SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_userexp; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_userexp (
    id integer DEFAULT nextval('public.mdl_userexp_id_exp_seq'::regclass) NOT NULL,
    userid integer NOT NULL,
    cursoid integer NOT NULL,
    grupoid integer,
    evatutor character varying(20),
    evaalu character varying(20),
    evacord character varying(20),
    responsable character varying(20) NOT NULL,
    fchact timestamp with time zone NOT NULL,
    role integer,
    idrole_asignado integer DEFAULT 0 NOT NULL,
    ind_status numeric(1,0) DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_userexp OWNER TO innovaedu;

--
-- Name: TABLE mdl_userexp; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_userexp IS 'expediente de tutores';


--
-- Name: COLUMN mdl_userexp.role; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON COLUMN mdl_userexp.role IS '1 titular,2 adjunto,
3 coordinador de curso,
4 coordinador de tutores,
5 coordinador normativo';


--
-- Name: mdl_usertutor; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_usertutor (
    id integer DEFAULT nextval('public.mdl_usertutor_id_seq'::regclass) NOT NULL,
    iduser bigint NOT NULL,
    emaillab character varying(50) DEFAULT 0,
    emailpart character varying(50) DEFAULT 0,
    aniostutor integer DEFAULT 0 NOT NULL,
    aniosdoc integer DEFAULT 0 NOT NULL,
    desemp integer DEFAULT 0 NOT NULL,
    grado integer DEFAULT 0 NOT NULL,
    licenciatura integer DEFAULT 0 NOT NULL,
    esp integer DEFAULT 0 NOT NULL,
    passtutor character varying(20) DEFAULT 0 NOT NULL,
    nom_usuario character varying(100),
    cve_departamento character varying(20),
    cve_categoria integer,
    id_curso bigint,
    num_ant_anio numeric(2,0),
    num_ant_quincena numeric(4,0),
    num_ant_dias double precision,
    fch_pre_registro date NOT NULL,
    des_sede character varying(120),
    desempeno numeric,
    cargo integer DEFAULT 0
);


ALTER TABLE mdl_usertutor OWNER TO innovaedu;

--
-- Name: COLUMN mdl_usertutor.passtutor; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON COLUMN mdl_usertutor.passtutor IS 'Contraseña fija';


SET search_path = estadisticas, pg_catalog;

--
-- Name: v_estadistica_curso2; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso2 AS
SELECT DISTINCT c.id AS id_curso, del.nom_delegacion AS delegacion, exp.userid, u.username AS matricula, u.pat AS ap_paterno, u.mat AS ap_materno, u.nom AS nombre, pg_catalog.concat(u.pat, ' ', u.mat, ' ', u.nom) AS nombre_completo, tr.ind_tipo, tut.emailpart AS correo_electronico, tut.cve_departamento AS clave_adscripcion, ads.nom_depto_adscripcion AS nombre_adscripcion, dep.nom_dependencia AS nombre_dependencia, cat.nom_nombre AS nombre_categoria, cat.des_clave AS clave_categoria, tc.nom_nombre AS tipo_categoria, u.numred AS numero_red, u.phone1 AS telefono_laboral, u.phone2 AS telefono_particular, c.shortname AS curso, g.id AS grupoid, g.name AS grupo FROM ((((((((((((((((public.mdl_course c LEFT JOIN tutorias.mdl_userexp exp ON ((c.id = exp.cursoid))) LEFT JOIN tutorias.mdl_usertutor tut ON (((tut.iduser = exp.userid) AND (tut.id_curso = c.id)))) LEFT JOIN public.mdl_user u ON ((u.id = exp.userid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN public.mdl_groups g ON ((exp.grupoid = g.id))) LEFT JOIN public.mdl_role r ON ((r.id = exp.role))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = r.id) AND (tr.ind_tipo = 2)))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON (((tut.cve_departamento)::bpchar = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion del ON ((dep.cve_delegacion = del.cve_delegacion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN nomina.ssn_categoria cat ON ((tut.cve_categoria = cat.cve_categoria))) LEFT JOIN nomina.ssn_tipo_catgoria tc ON ((tc.cve_tipo_categoria = cat.cve_tipo_categoria))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion))) ORDER BY u.username;


ALTER TABLE v_estadistica_curso2 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao01; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao01 AS
SELECT v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, v_estadistica_curso.userid, v_estadistica_curso.matricula, v_estadistica_curso.ap_paterno, v_estadistica_curso.ap_materno, v_estadistica_curso.nombre, v_estadistica_curso.nombre_completo, v_estadistica_curso.correo_electronico, v_estadistica_curso.clave_adscripcion AS cve_depto_adscripcion, CASE WHEN (v_estadistica_curso.clave_adscripcion IS NOT NULL) THEN CASE WHEN (v_estadistica_curso.nombre_adscripcion IS NOT NULL) THEN pg_catalog.concat(v_estadistica_curso.nombre_adscripcion, ' - ', v_estadistica_curso.nombre_dependencia, ' (', v_estadistica_curso.clave_adscripcion, ')') ELSE ' '::text END ELSE ' '::text END AS adscripcion, CASE WHEN (v_estadistica_curso.clave_categoria IS NOT NULL) THEN pg_catalog.concat(v_estadistica_curso.nombre_categoria, ' (', v_estadistica_curso.clave_categoria, ')') ELSE NULL::text END AS categoria, v_estadistica_curso.numero_red, v_estadistica_curso.telefono_laboral, v_estadistica_curso.telefono_particular, v_estadistica_curso.curso, v_estadistica_curso.grupo, v_estadistica_curso.calificacion, CASE WHEN ((v_estadistica_curso.estado_certificado = (0)::numeric) AND (v_estadistica_curso.certificado_vigente = 1)) THEN 'Aprobado'::text WHEN (v_estadistica_curso.estado_certificado = (1)::numeric) THEN 'En Proceso'::text ELSE 'No Aprobado'::text END AS aprobado FROM v_estadistica_curso v_estadistica_curso WHERE (v_estadistica_curso.ind_tipo = 3);


ALTER TABLE v_estadistica_curso_ao01 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao02; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao02 AS
SELECT r.id_curso, r.delegacion, count(r.matricula) AS can_alumnos, sum(r.ind_aprobado) AS can_aprobados, sum(r.ind_no_aprobado) AS can_no_aprobados FROM (SELECT v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, v_estadistica_curso.matricula, CASE WHEN (v_estadistica_curso.certificado_vigente = 1) THEN 1 ELSE 0 END AS ind_aprobado, CASE WHEN (v_estadistica_curso.certificado_vigente = 0) THEN 1 ELSE 0 END AS ind_no_aprobado FROM v_estadistica_curso v_estadistica_curso WHERE ((v_estadistica_curso.estado_certificado = (0)::numeric) AND (v_estadistica_curso.ind_tipo = 3))) r GROUP BY r.id_curso, r.delegacion;


ALTER TABLE v_estadistica_curso_ao02 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao03; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao03 AS
SELECT v_estadistica_curso.id_curso, v_estadistica_curso.curso, v_estadistica_curso.grupoid, v_estadistica_curso.grupo, count(v_estadistica_curso.matricula) AS total_integrantes FROM v_estadistica_curso v_estadistica_curso WHERE (v_estadistica_curso.ind_tipo = 3) GROUP BY v_estadistica_curso.id_curso, v_estadistica_curso.curso, v_estadistica_curso.grupoid, v_estadistica_curso.grupo;


ALTER TABLE v_estadistica_curso_ao03 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao04; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao04 AS
SELECT r.id_curso, r.delegacion, r.tipo_unidad, r.nivel_atencion, r.unidad_atencion, r.adscripcion, sum(r.total) AS total FROM (SELECT v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, CASE ssd_cat_unidad_atencion.ind_medica WHEN 0 THEN 'No Medica'::text WHEN 1 THEN 'Medica'::text ELSE NULL::text END AS tipo_unidad, CASE ssd_cat_dependencia.cve_nivel_atencion WHEN 1 THEN 'Primer Nivel'::text WHEN 2 THEN 'Segundo Nivel'::text WHEN 3 THEN 'Tercero Nivel'::text ELSE NULL::text END AS nivel_atencion, CASE ssd_cat_unidad_atencion.ind_medica WHEN 0 THEN ssd_cat_unidad_atencion.des_unidad_atencion ELSE NULL::character varying END AS unidad_atencion, CASE WHEN (v_estadistica_curso.clave_adscripcion IS NOT NULL) THEN CASE WHEN (v_estadistica_curso.nombre_adscripcion IS NOT NULL) THEN pg_catalog.concat(v_estadistica_curso.nombre_adscripcion, ' - ', v_estadistica_curso.nombre_dependencia, ' (', v_estadistica_curso.clave_adscripcion, ')') ELSE 'Sin Adscripción'::text END ELSE 'Sin clave'::text END AS adscripcion, count(v_estadistica_curso.matricula) AS total FROM (((((v_estadistica_curso v_estadistica_curso LEFT JOIN departments.ssd_cat_depto_adscripcion ON ((ssd_cat_depto_adscripcion.cve_depto_adscripcion = v_estadistica_curso.clave_adscripcion))) LEFT JOIN departments.ssd_cat_dependencia ON ((ssd_cat_dependencia.cve_depto_adscripcion = ssd_cat_depto_adscripcion.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_normativa ON (((ssd_cat_normativa.cve_organo_control = ssd_cat_dependencia.cve_organo_control) AND (ssd_cat_normativa.cve_departamento = ssd_cat_dependencia.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control ON ((ssd_cat_organo_control.cve_organo_control = ssd_cat_normativa.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion ON ((ssd_cat_unidad_atencion.cve_unidad_atencion = ssd_cat_organo_control.cve_unidad_atencion))) WHERE (v_estadistica_curso.ind_tipo = 3) GROUP BY v_estadistica_curso.id_curso, v_estadistica_curso.clave_adscripcion, v_estadistica_curso.delegacion, ssd_cat_unidad_atencion.ind_medica, ssd_cat_dependencia.cve_nivel_atencion, ssd_cat_unidad_atencion.des_unidad_atencion, v_estadistica_curso.nombre_adscripcion, v_estadistica_curso.nombre_dependencia) r GROUP BY r.id_curso, r.delegacion, r.tipo_unidad, r.nivel_atencion, r.unidad_atencion, r.adscripcion;


ALTER TABLE v_estadistica_curso_ao04 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao05; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao05 AS
SELECT v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, v_estadistica_curso.tipo_categoria, count(v_estadistica_curso.matricula) AS total FROM v_estadistica_curso v_estadistica_curso WHERE (v_estadistica_curso.ind_tipo = 3) GROUP BY v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, v_estadistica_curso.tipo_categoria;


ALTER TABLE v_estadistica_curso_ao05 OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_user_lastaccess_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_lastaccess_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_lastaccess_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_lastaccess; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_lastaccess (
    id bigint DEFAULT nextval('mdl_user_lastaccess_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    timeaccess bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_user_lastaccess OWNER TO innovaedu;

--
-- Name: TABLE mdl_user_lastaccess; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user_lastaccess IS 'To keep track of course page access times, used in online participants block, and participants list';


SET search_path = estadisticas, pg_catalog;

--
-- Name: v_estadistica_curso_ao06_01; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao06_01 AS
SELECT v_estadistica_curso.id_curso, v_estadistica_curso.delegacion, v_estadistica_curso.userid, v_estadistica_curso.matricula, v_estadistica_curso.nombre_completo, v_estadistica_curso.correo_electronico, v_estadistica_curso.clave_adscripcion AS cve_depto_adscripcion, CASE WHEN (v_estadistica_curso.clave_adscripcion IS NOT NULL) THEN CASE WHEN (v_estadistica_curso.nombre_adscripcion IS NOT NULL) THEN pg_catalog.concat(v_estadistica_curso.nombre_adscripcion, ' - ', v_estadistica_curso.nombre_dependencia, ' (', v_estadistica_curso.clave_adscripcion, ')') ELSE ' '::text END ELSE ' '::text END AS adscripcion, v_estadistica_curso.numero_red, v_estadistica_curso.curso, v_estadistica_curso.grupo, v_estadistica_curso.telefono_laboral FROM v_estadistica_curso v_estadistica_curso WHERE ((NOT (EXISTS (SELECT mdl_user_lastaccess.userid FROM public.mdl_user_lastaccess WHERE ((mdl_user_lastaccess.userid = v_estadistica_curso.userid) AND (mdl_user_lastaccess.courseid = v_estadistica_curso.id_curso))))) AND (v_estadistica_curso.ind_tipo = 3));


ALTER TABLE v_estadistica_curso_ao06_01 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao06_02; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao06_02 AS
SELECT v_estadistica_curso2.id_curso, v_estadistica_curso2.delegacion, v_estadistica_curso2.userid, v_estadistica_curso2.matricula, v_estadistica_curso2.nombre_completo, v_estadistica_curso2.correo_electronico, v_estadistica_curso2.clave_adscripcion AS cve_depto_adscripcion, CASE WHEN (v_estadistica_curso2.clave_adscripcion IS NOT NULL) THEN CASE WHEN (v_estadistica_curso2.nombre_adscripcion IS NOT NULL) THEN pg_catalog.concat(v_estadistica_curso2.nombre_adscripcion, ' - ', v_estadistica_curso2.nombre_dependencia, ' (', v_estadistica_curso2.clave_adscripcion, ')') ELSE ' '::text END ELSE ' '::text END AS adscripcion, v_estadistica_curso2.numero_red, v_estadistica_curso2.curso, v_estadistica_curso2.grupo, v_estadistica_curso2.telefono_laboral FROM v_estadistica_curso2 v_estadistica_curso2 WHERE ((NOT (EXISTS (SELECT mdl_user_lastaccess.userid FROM public.mdl_user_lastaccess WHERE ((mdl_user_lastaccess.userid = v_estadistica_curso2.userid) AND (mdl_user_lastaccess.courseid = v_estadistica_curso2.id_curso))))) AND (v_estadistica_curso2.ind_tipo = 2));


ALTER TABLE v_estadistica_curso_ao06_02 OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_log (
    id bigint DEFAULT nextval('mdl_log_id_seq'::regclass) NOT NULL,
    "time" bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    ip character varying(45) DEFAULT ''::character varying NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    module character varying(20) DEFAULT ''::character varying NOT NULL,
    cmid bigint DEFAULT 0 NOT NULL,
    action character varying(40) DEFAULT ''::character varying NOT NULL,
    url character varying(100) DEFAULT ''::character varying NOT NULL,
    info character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_log OWNER TO innovaedu;

--
-- Name: TABLE mdl_log; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_log IS 'Every action is logged as far as possible';


SET search_path = estadisticas, pg_catalog;

--
-- Name: v_estadistica_curso_usuarios; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_usuarios AS
SELECT ml.course AS id_curso, to_timestamp((ml."time")::double precision) AS fecha_hora, 0 AS acceso_inicial, ml.userid FROM public.mdl_log ml WHERE (((NOT (ml.id IN (SELECT min(mdl_log.id) AS min FROM public.mdl_log WHERE ((mdl_log.course = ml.course) AND (mdl_log.userid = ml.userid))))) AND (to_timestamp((ml."time")::double precision) >= (date_trunc('day'::text, now()) - '1 day'::interval))) AND (to_timestamp((ml."time")::double precision) <= date_trunc('day'::text, now()))) UNION SELECT ml.course AS id_curso, to_timestamp((ml."time")::double precision) AS fecha_hora, 1 AS acceso_inicial, ml.userid FROM public.mdl_log ml WHERE (((ml.id IN (SELECT min(mdl_log.id) AS min FROM public.mdl_log WHERE ((mdl_log.course = ml.course) AND (mdl_log.userid = ml.userid)))) AND (to_timestamp((ml."time")::double precision) >= (date_trunc('day'::text, now()) - '1 day'::interval))) AND (to_timestamp((ml."time")::double precision) <= date_trunc('day'::text, now())));


ALTER TABLE v_estadistica_curso_usuarios OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao07_01; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao07_01 AS
SELECT v_estadistica_curso_usuarios.id_curso, count(DISTINCT v_estadistica_curso_usuarios.userid) AS usuarios, count(v_estadistica_curso_usuarios.userid) AS hints FROM v_estadistica_curso_usuarios GROUP BY v_estadistica_curso_usuarios.id_curso;


ALTER TABLE v_estadistica_curso_ao07_01 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_usuarios_v2; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_usuarios_v2 AS
SELECT ml.id AS id_log, ml.course AS id_curso, to_timestamp((ml."time")::double precision) AS fecha_hora, ml.userid FROM public.mdl_log ml;


ALTER TABLE v_estadistica_curso_usuarios_v2 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao07_01_v2; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao07_01_v2 AS
SELECT v_estadistica_curso_usuarios_v2.id_curso, date_trunc('day'::text, v_estadistica_curso_usuarios_v2.fecha_hora) AS fecha_hora, count(DISTINCT v_estadistica_curso_usuarios_v2.userid) AS usuarios, count(v_estadistica_curso_usuarios_v2.userid) AS hints FROM v_estadistica_curso_usuarios_v2 GROUP BY v_estadistica_curso_usuarios_v2.id_curso, date_trunc('day'::text, v_estadistica_curso_usuarios_v2.fecha_hora);


ALTER TABLE v_estadistica_curso_ao07_01_v2 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao07_02; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao07_02 AS
SELECT s.id_curso, s.hora, count(DISTINCT s.acceso_inicial) AS acceso_inicial, count(DISTINCT s.usuarios_concurrentes) AS usuarios_concurrentes, count(1) AS hits FROM (SELECT v_estadistica_curso_usuarios.id_curso, date_part('hour'::text, v_estadistica_curso_usuarios.fecha_hora) AS hora, CASE v_estadistica_curso_usuarios.acceso_inicial WHEN 1 THEN v_estadistica_curso_usuarios.userid ELSE NULL::bigint END AS acceso_inicial, CASE v_estadistica_curso_usuarios.acceso_inicial WHEN 0 THEN v_estadistica_curso_usuarios.userid ELSE NULL::bigint END AS usuarios_concurrentes FROM v_estadistica_curso_usuarios) s GROUP BY s.id_curso, s.hora;


ALTER TABLE v_estadistica_curso_ao07_02 OWNER TO innovaedu;

--
-- Name: v_estadistica_curso_ao07_03; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadistica_curso_ao07_03 AS
SELECT DISTINCT v_estadistica_curso_usuarios.id_curso, to_char(v_estadistica_curso_usuarios.fecha_hora, 'DD-MM-YYYY, HH24:MI'::text) AS fecha_hora, pg_catalog.concat(mdl_user.pat, ' ', mdl_user.mat, ' ', mdl_user.nom) AS nombre_completo FROM (v_estadistica_curso_usuarios JOIN public.mdl_user ON ((mdl_user.id = v_estadistica_curso_usuarios.userid)));


ALTER TABLE v_estadistica_curso_ao07_03 OWNER TO innovaedu;

--
-- Name: v_estadisticas_categoria; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_categoria AS
SELECT cat.cve_tipo_categoria AS id_categoria, cat.nom_nombre AS categoria, cat.des_clave AS clave_cat, tc.cve_tipo_categoria, tc.nom_nombre AS tipo_categoria, pg_catalog.concat(cat.nom_nombre, ' (', cat.des_clave, ')') AS categoria_concat FROM (nomina.ssn_categoria cat LEFT JOIN nomina.ssn_tipo_catgoria tc ON ((tc.cve_tipo_categoria = cat.cve_tipo_categoria)));


ALTER TABLE v_estadisticas_categoria OWNER TO innovaedu;

--
-- Name: v_estadisticas_des_tutores_p; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_des_tutores_p AS
SELECT DISTINCT c.id AS cursoid, exp.userid AS tutor, g.name AS grupo, gm.groupid AS grupos, gm.userid AS alumnos, COALESCE(co.vigente, 0) AS vigente FROM ((((((((((((((public.mdl_user u JOIN public.mdl_groups_members gm ON ((gm.userid = u.id))) JOIN public.mdl_groups g ON ((g.id = gm.groupid))) LEFT JOIN public.mdl_course c ON ((c.id = g.courseid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_context ctx ON (((ctx.instanceid = c.id) AND (ctx.contextlevel = 50)))) JOIN public.mdl_role_assignments ra ON (((ra.contextid = ctx.id) AND (ra.userid = gm.userid)))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = ra.roleid) AND (tr.ind_tipo = 3)))) LEFT JOIN public.mdl_certificate ce ON ((ce.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.certificateid = ce.id) AND (iss.userid = u.id)))) LEFT JOIN cert.ssc_tab_cert_issues_conf co ON (((co.cert_issues_id = iss.id) AND (co.userid = gm.userid)))) LEFT JOIN tutorias.mdl_userexp exp ON (((c.id = exp.cursoid) AND (exp.grupoid = g.id)))) LEFT JOIN tutorias.mdl_usertutor tut ON (((tut.iduser = exp.userid) AND (tut.id_curso = c.id)))) LEFT JOIN public.mdl_role_assignments ra2 ON ((exp.userid = ra2.userid))) LEFT JOIN parametrizacion.ssp_tipo_roles tr2 ON (((tr2.cve_role = ra2.roleid) AND (tr2.ind_tipo = 2)))) ORDER BY g.name;


ALTER TABLE v_estadisticas_des_tutores_p OWNER TO innovaedu;

--
-- Name: v_estadisticas_formacion_tutores_p; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_formacion_tutores_p AS
SELECT g.cursoid, g.tutor, g.grupos, g.grupo, count(g.alumnos) AS alumnos, sum(g.status) AS aprobados, sum(g.status2) AS no_aprobados FROM (SELECT v_estadisticas_des_tutores_p.cursoid, v_estadisticas_des_tutores_p.tutor, v_estadisticas_des_tutores_p.grupos, v_estadisticas_des_tutores_p.alumnos, v_estadisticas_des_tutores_p.grupo, CASE WHEN (v_estadisticas_des_tutores_p.vigente = 1) THEN 1 ELSE 0 END AS status, CASE WHEN (v_estadisticas_des_tutores_p.vigente = 0) THEN 1 ELSE 0 END AS status2 FROM v_estadisticas_des_tutores_p v_estadisticas_des_tutores_p) g GROUP BY g.cursoid, g.grupo, g.grupos, g.tutor;


ALTER TABLE v_estadisticas_formacion_tutores_p OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_course_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_categories_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_categories; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_categories (
    id bigint DEFAULT nextval('mdl_course_categories_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    parent bigint DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    coursecount bigint DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 1 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    depth bigint DEFAULT 0 NOT NULL,
    path character varying(255) DEFAULT ''::character varying NOT NULL,
    theme character varying(50),
    descriptionformat smallint DEFAULT 0 NOT NULL,
    visibleold smallint DEFAULT 1 NOT NULL,
    idnumber character varying(100)
);


ALTER TABLE mdl_course_categories OWNER TO innovaedu;

--
-- Name: TABLE mdl_course_categories; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_course_categories IS 'Course categories';


SET search_path = estadisticas, pg_catalog;

--
-- Name: v_estadisticas_general_p; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_general_p AS
SELECT DISTINCT co.certificateid, c.id AS cursoid, c.fullname AS curso, c.shortname AS clave, pg_catalog.concat(to_char(to_timestamp((c.startdate)::double precision), 'DD-TMMon-YYYY'::text), ' al ', to_char((cc.lastdate)::timestamp with time zone, 'DD-TMMon-YYYY'::text)) AS periodo, gm.groupid AS grupos, gm.userid AS alumnos, COALESCE(co.vigente, 0) AS vigente, cat.path FROM (((((((((((((public.mdl_user u JOIN public.mdl_groups_members gm ON ((gm.userid = u.id))) JOIN public.mdl_groups g ON ((g.id = gm.groupid))) JOIN public.mdl_course c ON ((c.id = g.courseid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_course_categories cat ON ((cat.id = c.category))) JOIN public.mdl_context ctx ON (((ctx.instanceid = c.id) AND (ctx.contextlevel = 50)))) JOIN public.mdl_role_assignments ra ON (((ra.contextid = ctx.id) AND (ra.userid = gm.userid)))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = ra.roleid) AND (tr.ind_tipo = 3)))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (tab.nom_usuario)::text) AND (pre.cve_curso = c.id)))) LEFT JOIN public.mdl_certificate ce ON ((ce.course = c.id))) LEFT JOIN public.mdl_certificate_issues iss ON (((iss.certificateid = ce.id) AND (iss.userid = u.id)))) LEFT JOIN cert.ssc_tab_cert_issues_conf co ON (((co.cert_issues_id = iss.id) AND (co.userid = gm.userid))));


ALTER TABLE v_estadisticas_general_p OWNER TO innovaedu;

--
-- Name: v_estadisticas_generales_comparativa_base; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_generales_comparativa_base AS
SELECT g.cursoid, g.curso, g.clave, g.periodo, count(DISTINCT g.grupos) AS n_grupos, count(g.alumnos) AS n_alumnos, sum(g.status) AS aprobados, sum(g.status2) AS no_aprobados, g.path FROM (SELECT v_estadisticas_general_p.cursoid, v_estadisticas_general_p.curso, v_estadisticas_general_p.clave, v_estadisticas_general_p.periodo, v_estadisticas_general_p.alumnos, v_estadisticas_general_p.grupos, CASE WHEN (v_estadisticas_general_p.vigente = 1) THEN 1 ELSE 0 END AS status, CASE WHEN (v_estadisticas_general_p.vigente = 0) THEN 1 ELSE 0 END AS status2, v_estadisticas_general_p.path FROM v_estadisticas_general_p) g GROUP BY g.cursoid, g.curso, g.clave, g.periodo, g.path;


ALTER TABLE v_estadisticas_generales_comparativa_base OWNER TO innovaedu;

--
-- Name: v_estadisticas_generales_comparativa; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_estadisticas_generales_comparativa AS
SELECT v_estadisticas_generales_comparativa_base.cursoid, v_estadisticas_generales_comparativa_base.curso, v_estadisticas_generales_comparativa_base.clave, v_estadisticas_generales_comparativa_base.periodo, v_estadisticas_generales_comparativa_base.n_grupos, v_estadisticas_generales_comparativa_base.n_alumnos, v_estadisticas_generales_comparativa_base.aprobados, v_estadisticas_generales_comparativa_base.no_aprobados, trunc((((v_estadisticas_generales_comparativa_base.aprobados)::numeric(9,4) * (100)::numeric) / (v_estadisticas_generales_comparativa_base.n_alumnos)::numeric(9,4)), 2) AS eficiencia FROM v_estadisticas_generales_comparativa_base;


ALTER TABLE v_estadisticas_generales_comparativa OWNER TO innovaedu;

--
-- Name: v_general_comparativa_fecha; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_general_comparativa_fecha AS
SELECT n.cursoid, n.curso, n.clave_corta, to_date(n.fecha_inicio, 'DD/MM/YYYY'::text) AS fecha_inicio, to_date(n.fecha_final, 'DD/MM/YYYY'::text) AS fecha_final FROM (SELECT DISTINCT c.id AS cursoid, pg_catalog.concat(c.fullname, ' ', '(', c.shortname, ')') AS curso, c.shortname AS clave_corta, to_char(to_timestamp((c.startdate)::double precision), 'DD-MM-YYYY'::text) AS fecha_inicio, to_char(to_timestamp((c.lastdate)::double precision), 'DD-MM-YYYY'::text) AS fecha_final FROM ((((public.mdl_user u JOIN public.mdl_groups_members gm1 ON ((gm1.userid = u.id))) JOIN public.mdl_groups g ON ((g.id = gm1.groupid))) JOIN public.mdl_course c ON ((c.id = g.courseid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id)))) n;


ALTER TABLE v_general_comparativa_fecha OWNER TO innovaedu;

--
-- Name: v_generales_comparativa_grafica; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_generales_comparativa_grafica AS
SELECT cg.cursoid, cg.clave, cg.n_grupos, cg.n_alumnos, cg.aprobados, cg.no_aprobados, trunc((((cg.aprobados)::numeric(9,4) * (100)::numeric) / (cg.n_alumnos)::numeric(9,4)), 2) AS eficiencia FROM v_estadisticas_generales_comparativa_base cg;


ALTER TABLE v_generales_comparativa_grafica OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: sied_ssp_seq_menu; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE sied_ssp_seq_menu
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sied_ssp_seq_menu OWNER TO innovaedu;

SET search_path = parametrizacion, pg_catalog;

--
-- Name: ssp_cat_menu; Type: TABLE; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssp_cat_menu (
    cve_menu integer DEFAULT nextval('public.sied_ssp_seq_menu'::regclass) NOT NULL,
    des_menu character varying(150) NOT NULL,
    ref_url character varying(150) NOT NULL,
    num_posicion smallint NOT NULL,
    cve_menu_padre integer,
    ind_activo numeric(1,0) NOT NULL,
    ind_tipo integer
);


ALTER TABLE ssp_cat_menu OWNER TO innovaedu;

--
-- Name: ssp_tab_usuario_menu; Type: TABLE; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssp_tab_usuario_menu (
    cve_usuario integer NOT NULL,
    cve_rol integer NOT NULL,
    cve_menu integer NOT NULL,
    ind_activo numeric(1,0) NOT NULL
);


ALTER TABLE ssp_tab_usuario_menu OWNER TO innovaedu;

SET search_path = estadisticas, pg_catalog;

--
-- Name: v_menu_rol_estadistica; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_menu_rol_estadistica AS
SELECT um.cve_rol, r.name AS rol, um.cve_menu, cm.des_menu FROM (((parametrizacion.ssp_tab_usuario_menu um JOIN parametrizacion.ssp_cat_menu cm ON ((cm.cve_menu = um.cve_menu))) JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = um.cve_rol))) JOIN public.mdl_role r ON ((tr.cve_role = r.id))) WHERE (cm.ind_tipo = 1) ORDER BY um.cve_menu;


ALTER TABLE v_menu_rol_estadistica OWNER TO innovaedu;

--
-- Name: v_perfil_usuario; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_perfil_usuario AS
SELECT DISTINCT u.id AS id_user, u.username, u.firstname, u.lastname, u.email, tab.nom_curp, cat.nom_nombre AS nom_categoria, cat.des_clave, cat.cve_tipo_categoria, cat.cve_categoria, del.nom_delegacion, del.cve_delegacion, niv.des_nivel_atencion, niv.cve_nivel_atencion, atn.des_unidad_atencion, atn.cve_unidad_atencion, pre.cve_departamental AS cve_depto_adscripcion, ads.cve_depto_adscripcion AS clave_departamental, u.numred, r.id, r.name, tr.ind_tipo AS perfil, tab.desc_sexo AS sexo FROM (((((((((((((((((((public.mdl_user u JOIN public.mdl_groups_members gm1 ON ((gm1.userid = u.id))) JOIN public.mdl_groups g ON ((g.id = gm1.groupid))) JOIN public.mdl_course c ON ((c.id = g.courseid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_context ctx ON ((ctx.instanceid = c.id))) JOIN public.mdl_role_assignments ra ON (((ra.contextid = ctx.id) AND (u.id = ra.userid)))) JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = ra.roleid))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN gestion.sgp_tab_preregistro_al pre ON (((pre.nom_usuario)::text = (tab.nom_usuario)::text))) LEFT JOIN nomina.ssn_categoria cat ON ((pre.cve_cat = cat.cve_categoria))) LEFT JOIN nomina.ssn_tipo_catgoria tc ON ((tc.cve_tipo_categoria = cat.cve_tipo_categoria))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON ((ads.cve_depto_adscripcion = pre.cve_departamental))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion del ON ((dep.cve_delegacion = del.cve_delegacion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion)));


ALTER TABLE v_perfil_usuario OWNER TO innovaedu;

SET search_path = parametrizacion, pg_catalog;

--
-- Name: ssp_cat_perfil_nombre; Type: TABLE; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssp_cat_perfil_nombre (
    id_tipo integer NOT NULL,
    descripcion character varying DEFAULT ''::character varying NOT NULL
);


ALTER TABLE ssp_cat_perfil_nombre OWNER TO innovaedu;

SET search_path = estadisticas, pg_catalog;

--
-- Name: v_procesos_roles; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_procesos_roles AS
SELECT DISTINCT r.id AS roleid, rtrim(pg_catalog.concat(r.name, '(', pm.descripcion, ')')) AS perfil FROM (((((tutorias.mdl_userexp exp JOIN public.mdl_user u ON ((u.id = exp.userid))) JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = ra.roleid))) JOIN parametrizacion.ssp_cat_perfil_nombre pm ON ((pm.id_tipo = tr.ind_tipo))) JOIN public.mdl_role r ON ((r.id = ra.roleid)));


ALTER TABLE v_procesos_roles OWNER TO innovaedu;

--
-- Name: v_procesos_tutores; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_procesos_tutores AS
SELECT DISTINCT u.id, pg_catalog.concat(u.firstname, '', u.lastname) AS tutor, r.id AS roleid, pg_catalog.concat(r.name, '(', pm.descripcion, ')') AS perfil FROM (((((tutorias.mdl_userexp exp JOIN public.mdl_user u ON ((u.id = exp.userid))) JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = ra.roleid) AND (tr.ind_tipo = ANY (ARRAY[2, 1]))))) JOIN parametrizacion.ssp_cat_perfil_nombre pm ON ((pm.id_tipo = tr.ind_tipo))) JOIN public.mdl_role r ON ((r.id = ra.roleid)));


ALTER TABLE v_procesos_tutores OWNER TO innovaedu;

--
-- Name: v_rpt_cursos; Type: VIEW; Schema: estadisticas; Owner: innovaedu
--

CREATE VIEW v_rpt_cursos AS
SELECT DISTINCT u.id AS iduser, u.username, u.firstname, u.lastname, c.id AS id_curso, c.fullname, c.shortname AS curso, tr.ind_tipo FROM (((((((public.mdl_course c JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_context co ON ((co.instanceid = c.id))) JOIN public.mdl_role_assignments r ON ((r.contextid = co.id))) JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = r.roleid))) JOIN public.mdl_user u ON ((u.id = r.userid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (tab.nom_usuario)::text) AND (pre.cve_curso = c.id))));


ALTER TABLE v_rpt_cursos OWNER TO innovaedu;

SET search_path = externo, pg_catalog;

--
-- Name: ssx_acceso_del; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_acceso_del (
    id_acceso_del integer NOT NULL,
    cve_usuario integer NOT NULL,
    cve_delegacion character(2) NOT NULL
);


ALTER TABLE ssx_acceso_del OWNER TO innovaedu;

--
-- Name: ssx_acceso_del_id_acceso_del_seq; Type: SEQUENCE; Schema: externo; Owner: innovaedu
--

CREATE SEQUENCE ssx_acceso_del_id_acceso_del_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssx_acceso_del_id_acceso_del_seq OWNER TO innovaedu;

--
-- Name: ssx_acceso_del_id_acceso_del_seq; Type: SEQUENCE OWNED BY; Schema: externo; Owner: innovaedu
--

ALTER SEQUENCE ssx_acceso_del_id_acceso_del_seq OWNED BY ssx_acceso_del.id_acceso_del;


--
-- Name: SEQUENCE ssx_acceso_del_id_acceso_del_seq; Type: COMMENT; Schema: externo; Owner: innovaedu
--

COMMENT ON SEQUENCE ssx_acceso_del_id_acceso_del_seq IS 'd';


--
-- Name: ssx_acceso_modulo; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_acceso_modulo (
    cve_usuario integer NOT NULL,
    cve_modulo integer NOT NULL,
    cve_acceso_modulo integer NOT NULL
);


ALTER TABLE ssx_acceso_modulo OWNER TO innovaedu;

--
-- Name: ssx_acceso_modulo_cve_acceso_modulo_seq; Type: SEQUENCE; Schema: externo; Owner: innovaedu
--

CREATE SEQUENCE ssx_acceso_modulo_cve_acceso_modulo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssx_acceso_modulo_cve_acceso_modulo_seq OWNER TO innovaedu;

--
-- Name: ssx_acceso_modulo_cve_acceso_modulo_seq; Type: SEQUENCE OWNED BY; Schema: externo; Owner: innovaedu
--

ALTER SEQUENCE ssx_acceso_modulo_cve_acceso_modulo_seq OWNED BY ssx_acceso_modulo.cve_acceso_modulo;


--
-- Name: ssx_modulo; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_modulo (
    cve_modulo integer NOT NULL,
    cve_modulo_padre integer,
    des_nombre character varying(60) NOT NULL,
    des_url character varying(100),
    ind_tipo numeric(1,0) DEFAULT 1 NOT NULL,
    ind_activo numeric(1,0) DEFAULT 1 NOT NULL
);


ALTER TABLE ssx_modulo OWNER TO innovaedu;

--
-- Name: ssx_modulo_cve_modulo_seq; Type: SEQUENCE; Schema: externo; Owner: innovaedu
--

CREATE SEQUENCE ssx_modulo_cve_modulo_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssx_modulo_cve_modulo_seq OWNER TO innovaedu;

--
-- Name: ssx_modulo_cve_modulo_seq; Type: SEQUENCE OWNED BY; Schema: externo; Owner: innovaedu
--

ALTER SEQUENCE ssx_modulo_cve_modulo_seq OWNED BY ssx_modulo.cve_modulo;


--
-- Name: ssx_msg_user; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_msg_user (
    cve_msg_user integer NOT NULL,
    usr_from bigint NOT NULL,
    usr_to bigint NOT NULL,
    id_curso bigint NOT NULL,
    ind_revision numeric(1,0) DEFAULT 0 NOT NULL
);


ALTER TABLE ssx_msg_user OWNER TO innovaedu;

--
-- Name: ssx_msg_user_cve_msg_user_seq; Type: SEQUENCE; Schema: externo; Owner: innovaedu
--

CREATE SEQUENCE ssx_msg_user_cve_msg_user_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssx_msg_user_cve_msg_user_seq OWNER TO innovaedu;

--
-- Name: ssx_msg_user_cve_msg_user_seq; Type: SEQUENCE OWNED BY; Schema: externo; Owner: innovaedu
--

ALTER SEQUENCE ssx_msg_user_cve_msg_user_seq OWNED BY ssx_msg_user.cve_msg_user;


--
-- Name: ssx_rol_admin; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_rol_admin (
    cve_rol_admin integer NOT NULL,
    des_nombre character varying(60) NOT NULL
);


ALTER TABLE ssx_rol_admin OWNER TO innovaedu;

--
-- Name: ssx_tipo_medico; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_tipo_medico (
    cve_tipo_medico integer NOT NULL,
    des_nombre character varying(60) NOT NULL
);


ALTER TABLE ssx_tipo_medico OWNER TO innovaedu;

--
-- Name: ssx_usuario; Type: TABLE; Schema: externo; Owner: innovaedu; Tablespace: 
--

CREATE TABLE ssx_usuario (
    cve_usuario integer NOT NULL,
    des_matricula character varying(100) NOT NULL,
    des_curp character varying(18),
    des_pwd character varying(255) NOT NULL,
    des_nom character varying(60),
    des_pat character varying(60),
    des_mat character varying(60),
    cve_departamental character varying(10) NOT NULL,
    ind_tipo character(1),
    cve_categoria integer,
    ind_estado_siap numeric(1,0) NOT NULL,
    ind_estado_ssc numeric(1,0) NOT NULL,
    des_correo character varying(60),
    cve_rol_admin integer
);


ALTER TABLE ssx_usuario OWNER TO innovaedu;

--
-- Name: ssx_usuario_cve_usuario_seq; Type: SEQUENCE; Schema: externo; Owner: innovaedu
--

CREATE SEQUENCE ssx_usuario_cve_usuario_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssx_usuario_cve_usuario_seq OWNER TO innovaedu;

--
-- Name: ssx_usuario_cve_usuario_seq; Type: SEQUENCE OWNED BY; Schema: externo; Owner: innovaedu
--

ALTER SEQUENCE ssx_usuario_cve_usuario_seq OWNED BY ssx_usuario.cve_usuario;


SET search_path = public, pg_catalog;

--
-- Name: mdl_modalidad; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_modalidad (
    id numeric(1,0) NOT NULL,
    nombre character varying(50) NOT NULL
);


ALTER TABLE mdl_modalidad OWNER TO innovaedu;

SET search_path = externo, pg_catalog;

--
-- Name: v_curso_info; Type: VIEW; Schema: externo; Owner: innovaedu
--

CREATE VIEW v_curso_info AS
SELECT cur.id AS id_curso, cur.shortname AS clave_curso, cur.fullname AS nombre, cfg_cur.ind_cdpei AS visible_cdpei, CASE cfg_cur.tipocur WHEN 0 THEN CASE "substring"((cur.shortname)::text, '%#"GPC#"%'::text, '#'::text) WHEN 'GPC'::text THEN 'Curso basado en GPC'::text ELSE 'Curso'::text END WHEN 1 THEN 'Diplomado'::text ELSE 'Error'::text END AS tipocur, (to_char(to_timestamp((cur.startdate)::double precision), 'YYYY-MM-DD'::text))::date AS fecha_inicio, cfg_cur.lastdate AS fecha_fin, (cfg_cur.lastdate - (to_char(to_timestamp((cur.startdate)::double precision), 'YYYY-MM-DD'::text))::date) AS duracion, mo.nombre AS modalidad, cfg_cur.ind_mensaje FROM ((public.mdl_course cur JOIN public.mdl_course_config cfg_cur ON ((cur.id = cfg_cur.course))) JOIN public.mdl_modalidad mo ON ((cfg_cur.modalidad = mo.id))) WHERE ((cfg_cur.lastdate > to_timestamp((cur.startdate)::double precision)) AND (cfg_cur.estcert = (0)::numeric)) ORDER BY cur.id;


ALTER TABLE v_curso_info OWNER TO innovaedu;

--
-- Name: v_lista_alumnos; Type: VIEW; Schema: externo; Owner: innovaedu
--

CREATE VIEW v_lista_alumnos AS
SELECT ct.instanceid AS id_curso, cfg_cur.ind_cdpei, u.id AS id_usuario, u.username AS matricula, usr.nom_nombre AS nom, usr.nom_paterno AS pat, usr.nom_materno AS mat, pre.cve_departamental, pre.cve_cat AS id_categoria, pre.desc_numred AS numred FROM ((((((public.mdl_context ct JOIN public.mdl_role_assignments ra ON (((ct.id = ra.contextid) AND (ct.contextlevel = 50)))) JOIN public.mdl_course cur ON ((ct.instanceid = cur.id))) JOIN public.mdl_course_config cfg_cur ON ((cfg_cur.course = cur.id))) JOIN public.mdl_user u ON ((ra.userid = u.id))) JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (u.username)::text) AND (pre.cve_curso = ct.instanceid)))) JOIN gestion.sgp_tab_usuario usr ON (((usr.nom_usuario)::text = (pre.nom_usuario)::text))) WHERE (((ra.roleid = 5) AND (to_char(to_timestamp((cur.startdate)::double precision), 'yyyy'::text) > '2013'::text)) AND (cfg_cur.estcert = (0)::numeric));


ALTER TABLE v_lista_alumnos OWNER TO innovaedu;

--
-- Name: v_lista_calificaciones; Type: VIEW; Schema: externo; Owner: innovaedu
--

CREATE VIEW v_lista_calificaciones AS
SELECT ct.instanceid AS id_curso, cfg_cur.ind_cdpei, u.id AS id_usuario, u.username AS matricula, usr.nom_nombre AS nom, usr.nom_paterno AS pat, usr.nom_materno AS mat, pre.cve_departamental, pre.cve_cat AS id_categoria, pre.desc_numred AS numred, CASE WHEN (cert_iss.id IS NOT NULL) THEN 'Aprobado'::text WHEN (cert_iss.id IS NULL) THEN 'No aprobado'::text ELSE 'ERROR'::text END AS calificacion FROM ((((((((public.mdl_context ct JOIN public.mdl_role_assignments ra ON (((ct.id = ra.contextid) AND (ct.contextlevel = 50)))) JOIN public.mdl_course cur ON ((ct.instanceid = cur.id))) JOIN public.mdl_course_config cfg_cur ON ((cfg_cur.course = cur.id))) JOIN public.mdl_user u ON ((ra.userid = u.id))) JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (u.username)::text) AND (pre.cve_curso = ct.instanceid)))) JOIN gestion.sgp_tab_usuario usr ON (((usr.nom_usuario)::text = (pre.nom_usuario)::text))) LEFT JOIN public.mdl_certificate cer ON ((cer.course = ct.instanceid))) LEFT JOIN public.mdl_certificate_issues cert_iss ON (((cert_iss.userid = u.id) AND (cert_iss.certificateid = cer.id)))) WHERE (((ra.roleid = 5) AND (to_char(to_timestamp((cur.startdate)::double precision), 'yyyy'::text) > '2013'::text)) AND (cfg_cur.estcert = (0)::numeric));


ALTER TABLE v_lista_calificaciones OWNER TO innovaedu;

SET search_path = gestion, pg_catalog;

--
-- Name: mdl_accion; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_accion (
    id integer NOT NULL,
    cve_tipo_mensaje numeric(1,0) DEFAULT 1 NOT NULL,
    des_mensaje character varying(60) NOT NULL
);


ALTER TABLE mdl_accion OWNER TO innovaedu;

--
-- Name: mdl_accion_id_seq; Type: SEQUENCE; Schema: gestion; Owner: innovaedu
--

CREATE SEQUENCE mdl_accion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_accion_id_seq OWNER TO innovaedu;

--
-- Name: mdl_accion_id_seq; Type: SEQUENCE OWNED BY; Schema: gestion; Owner: innovaedu
--

ALTER SEQUENCE mdl_accion_id_seq OWNED BY mdl_accion.id;


SET search_path = public, pg_catalog;

--
-- Name: sied_mdl_seq_log; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE sied_mdl_seq_log
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sied_mdl_seq_log OWNER TO innovaedu;

SET search_path = gestion, pg_catalog;

--
-- Name: mdl_log_sied; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_log_sied (
    id integer DEFAULT nextval('public.sied_mdl_seq_log'::regclass) NOT NULL,
    fecha_hora_actividad timestamp without time zone NOT NULL,
    modulo character varying(50) NOT NULL,
    tabla character varying(60) NOT NULL,
    id_usuario integer NOT NULL,
    id_accion integer NOT NULL,
    id_registro character varying(30) NOT NULL
);


ALTER TABLE mdl_log_sied OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: sied_ssg_sq_medio; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE sied_ssg_sq_medio
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sied_ssg_sq_medio OWNER TO innovaedu;

SET search_path = gestion, pg_catalog;

--
-- Name: sgp_cat_medio_entero; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sgp_cat_medio_entero (
    cve_medio integer DEFAULT nextval('public.sied_ssg_sq_medio'::regclass) NOT NULL,
    nom_nombre character varying(60) NOT NULL
);


ALTER TABLE sgp_cat_medio_entero OWNER TO innovaedu;

--
-- Name: sgp_tab_cuodel_id_seq; Type: SEQUENCE; Schema: gestion; Owner: innovaedu
--

CREATE SEQUENCE sgp_tab_cuodel_id_seq
    START WITH 444104
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 999999999999999999
    CACHE 1;


ALTER TABLE sgp_tab_cuodel_id_seq OWNER TO innovaedu;

--
-- Name: sgp_tab_cuodel; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sgp_tab_cuodel (
    cve_id integer DEFAULT nextval('sgp_tab_cuodel_id_seq'::regclass) NOT NULL,
    cve_curso bigint NOT NULL,
    cve_categoria integer,
    cve_del character(2),
    cve_nvlat integer,
    cve_dept character varying(10),
    num_nvl_cuota integer NOT NULL,
    ind_catalogo numeric(1,0) NOT NULL,
    num_cuotacont integer DEFAULT 0,
    ind_distribuido numeric(1,0) DEFAULT 0,
    CONSTRAINT sied_ssg_ck_cuota CHECK ((ind_catalogo = ANY (ARRAY[(1)::numeric, (2)::numeric, (3)::numeric, (4)::numeric])))
);


ALTER TABLE sgp_tab_cuodel OWNER TO innovaedu;

--
-- Name: sgp_tab_temp_usuario_id_seq; Type: SEQUENCE; Schema: gestion; Owner: innovaedu
--

CREATE SEQUENCE sgp_tab_temp_usuario_id_seq
    START WITH 458
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sgp_tab_temp_usuario_id_seq OWNER TO innovaedu;

--
-- Name: sgp_tab_temp_usuario; Type: TABLE; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE TABLE sgp_tab_temp_usuario (
    id integer DEFAULT nextval('sgp_tab_temp_usuario_id_seq'::regclass),
    matricula character varying(100) NOT NULL,
    acceso timestamp with time zone
);


ALTER TABLE sgp_tab_temp_usuario OWNER TO innovaedu;

--
-- Name: v_curso_conf; Type: VIEW; Schema: gestion; Owner: innovaedu
--

CREATE VIEW v_curso_conf AS
SELECT mdl_course.id, mdl_course.fullname, mdl_course.startdate, mdl_course_config.lastdate, mdl_course_config.tipocur, mdl_certificate_issues.userid, mdl_course.shortname FROM (((public.mdl_course LEFT JOIN public.mdl_course_config ON ((mdl_course_config.course = mdl_course.id))) LEFT JOIN public.mdl_certificate ON ((mdl_certificate.course = mdl_course.id))) LEFT JOIN public.mdl_certificate_issues ON ((mdl_certificate_issues.certificateid = mdl_certificate.id)));


ALTER TABLE v_curso_conf OWNER TO innovaedu;

--
-- Name: v_cursos_fecha_pre; Type: VIEW; Schema: gestion; Owner: innovaedu
--

CREATE VIEW v_cursos_fecha_pre AS
SELECT mdl_course.id, mdl_course.fullname, mdl_course.shortname, mdl_course.startdate, mdl_course_config.startdatepre, mdl_course_config.lastdatepre, mdl_course_config.cuotacurso, mdl_course_config.preact, mdl_course_config.achsel, sgp_tab_cuodel.num_cuotacont, sgp_tab_cuodel.num_nvl_cuota, sgp_tab_cuodel.ind_catalogo, sgp_tab_cuodel.cve_categoria, sgp_tab_cuodel.cve_del, sgp_tab_cuodel.cve_dept, sgp_tab_cuodel.cve_nvlat, ssn_categoria.des_clave, mdl_course_config.tipocur, mdl_course_categories.name AS descategoria FROM ((((public.mdl_course LEFT JOIN public.mdl_course_config ON ((mdl_course_config.course = mdl_course.id))) LEFT JOIN public.mdl_course_categories ON ((mdl_course_categories.id = mdl_course.category))) LEFT JOIN sgp_tab_cuodel ON ((sgp_tab_cuodel.cve_curso = mdl_course.id))) LEFT JOIN nomina.ssn_categoria ON ((sgp_tab_cuodel.cve_categoria = ssn_categoria.cve_categoria))) WHERE ((((mdl_course_config.preact = (1)::numeric) AND (mdl_course_config.achsel = (1)::numeric)) AND (('now'::text)::date >= mdl_course_config.startdatepre)) AND (('now'::text)::date <= mdl_course_config.lastdatepre));


ALTER TABLE v_cursos_fecha_pre OWNER TO innovaedu;

--
-- Name: v_cursos_preregistro; Type: VIEW; Schema: gestion; Owner: innovaedu
--

CREATE VIEW v_cursos_preregistro AS
SELECT m.id, m.fullname, m.shortname, m.startdatepre, m.lastdatepre, m.cuotacurso, m.preact, m.achsel, m.category, m.startdate FROM (SELECT t.id, t.fullname, t.shortname, t.startdatepre, t.lastdatepre, t.cuotacurso, t.preact, t.achsel, t.category, to_date(t.startdate, 'YYYY/MM/DD'::text) AS startdate FROM (SELECT mdl_course.id, mdl_course.fullname, mdl_course.shortname, mdl_course_config.startdatepre, mdl_course_config.lastdatepre, mdl_course_config.cuotacurso, mdl_course_config.preact, mdl_course_config.achsel, mdl_course.category, to_char(to_timestamp((mdl_course.startdate)::double precision), 'YYYY-MM-DD'::text) AS startdate FROM (public.mdl_course LEFT JOIN public.mdl_course_config ON ((mdl_course_config.course = mdl_course.id)))) t) m WHERE (m.startdate >= now());


ALTER TABLE v_cursos_preregistro OWNER TO innovaedu;

--
-- Name: v_rpt_preregistro; Type: VIEW; Schema: gestion; Owner: innovaedu
--

CREATE VIEW v_rpt_preregistro AS
SELECT DISTINCT a.cve_unidad_atencion, a.des_unidad_atencion, a.ind_medica, a.cve_organo_control, a.nom_organo_control, a.cve_departamento, a.nom_normativa, a.cve_depto_adscripcion, a.nom_dependencia, a.ref_ubicacion, a.cve_delegacion, a.nom_delegacion, a.nom_depto_adscripcion, a.cve_depto_adscripcion_padre, a.cve_nivel_atencion, a.des_nivel_atencion, a.ind_imss_oport, a.ind_umae, a.id_tipo_adscripcion, u.nom_usuario, u.nom_paterno, u.nom_materno, u.nom_nombre, u.des_email_pers, u.nom_curp, u.nombre, u.cve_categoria, u.idcategoria, u.cve_tipo_categoria, u.tiponomina, u.desnivate, u.cvenivate, u.nomdel, u.cvdel, u.descr, u.atencion, u.ads, u.deptadsc, u.desc_teltrab, u.desc_numred, u.desc_telpart, u.fchact, u.tms_fecha_prereg, u.nom_pwd, u.cve_curso, (SELECT mdl_course.shortname FROM public.mdl_course WHERE (mdl_course.id = u.cve_curso)) AS nombrecurso, CASE WHEN ((u.nombregrupo)::text = ''::text) THEN u.nombregrupo ELSE 'N/A'::character varying END AS nombregrupo, CASE WHEN (a.ind_imss_oport = (0)::numeric) THEN a.ind_umae WHEN (substr((a.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN (1)::numeric WHEN (substr((a.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN (1)::numeric ELSE a.ind_imss_oport END AS imssoptumae, u.idrol, u.nombrerol, u.nombrecortorol, CASE WHEN (substr((a.cve_depto_adscripcion)::text, 3, 2) = 'HW'::text) THEN 1 WHEN (substr((a.cve_depto_adscripcion)::text, 7, 2) ~~ '%BW%'::text) THEN 1 ELSE 0 END AS umaa, u.edo_pre FROM (departments.ssv_departamentos a RIGHT JOIN (SELECT sgp_tab_preregistro_al.nom_usuario, sgp_tab_usuario.nom_paterno, sgp_tab_usuario.nom_materno, sgp_tab_usuario.nom_nombre, sgp_tab_preregistro_al.des_email_pers, sgp_tab_usuario.nom_curp, ssn_categoria.nom_nombre AS nombre, sgp_tab_preregistro_al.cve_cat AS cve_categoria, ssn_categoria.cve_tipo_categoria, ssn_categoria.des_clave AS idcategoria, ssn_categoria.des_tipo_nomina AS tiponomina, ssd_cat_nivel_atencion.des_nivel_atencion AS desnivate, ssd_cat_nivel_atencion.cve_nivel_atencion AS cvenivate, ssd_cat_delegacion.nom_delegacion AS nomdel, ssd_cat_delegacion.cve_delegacion AS cvdel, ssd_cat_unidad_atencion.des_unidad_atencion AS descr, ssd_cat_unidad_atencion.cve_unidad_atencion AS atencion, ssd_cat_depto_adscripcion.nom_depto_adscripcion AS ads, ssd_cat_depto_adscripcion.cve_depto_adscripcion AS deptadsc, n.phone1 AS desc_teltrab, n.numred AS desc_numred, n.phone2 AS desc_telpart, sgp_tab_preregistro_al.fchact, sgp_tab_preregistro_al.tms_fecha_prereg, sgp_tab_preregistro_al.nom_pwd, sgp_tab_preregistro_al.cve_curso, m.name AS nombregrupo, o.roleid AS idrol, p.name AS nombrerol, p.shortname AS nombrecortorol, sgp_tab_preregistro_al.ind_estado_preregistro AS edo_pre FROM (((((((((((((sgp_tab_preregistro_al LEFT JOIN departments.ssd_cat_delegacion ON ((substr((sgp_tab_preregistro_al.cve_departamental)::text, 1, 2) = (ssd_cat_delegacion.cve_delegacion)::text))) LEFT JOIN nomina.ssn_categoria ON ((sgp_tab_preregistro_al.cve_cat = ssn_categoria.cve_categoria))) LEFT JOIN departments.ssd_cat_depto_adscripcion ON ((sgp_tab_preregistro_al.cve_departamental = ssd_cat_depto_adscripcion.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_dependencia ON ((ssd_cat_depto_adscripcion.cve_depto_adscripcion_padre = ssd_cat_dependencia.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion ON ((ssd_cat_dependencia.cve_nivel_atencion = ssd_cat_nivel_atencion.cve_nivel_atencion))) LEFT JOIN sgp_tab_usuario ON (((sgp_tab_preregistro_al.nom_usuario)::text = (sgp_tab_usuario.nom_usuario)::text))) LEFT JOIN departments.ssd_cat_normativa ON (((ssd_cat_normativa.cve_organo_control = ssd_cat_dependencia.cve_organo_control) AND (ssd_cat_normativa.cve_departamento = ssd_cat_dependencia.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control ON ((ssd_cat_organo_control.cve_organo_control = ssd_cat_normativa.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion ON ((ssd_cat_unidad_atencion.cve_unidad_atencion = ssd_cat_organo_control.cve_unidad_atencion))) LEFT JOIN public.mdl_groups m ON ((sgp_tab_preregistro_al.cve_gposel = m.id))) LEFT JOIN public.mdl_user n ON (((n.username)::text = (sgp_tab_usuario.nom_usuario)::text))) LEFT JOIN public.mdl_role_assignments o ON ((o.userid = n.id))) LEFT JOIN public.mdl_role p ON ((n.id = o.roleid)))) u ON ((a.cve_depto_adscripcion = u.deptadsc))) ORDER BY u.deptadsc;


ALTER TABLE v_rpt_preregistro OWNER TO innovaedu;

--
-- Name: v_ssp_bitacora; Type: VIEW; Schema: gestion; Owner: innovaedu
--

CREATE VIEW v_ssp_bitacora AS
SELECT l.id, l.fecha_hora_actividad, l.modulo, l.tabla, l.id_usuario, l.id_registro, u.username, a.id AS id_accion, a.des_mensaje, CASE WHEN (a.cve_tipo_mensaje = (1)::numeric) THEN 'Inserci¢n'::text WHEN (a.cve_tipo_mensaje = (2)::numeric) THEN 'Edici¢n'::text WHEN (a.cve_tipo_mensaje = (3)::numeric) THEN 'Eliminaci¢n'::text ELSE NULL::text END AS tipo_accion FROM ((mdl_log_sied l LEFT JOIN mdl_accion a ON ((l.id_accion = a.id))) LEFT JOIN public.mdl_user u ON ((u.id = l.id_usuario)));


ALTER TABLE v_ssp_bitacora OWNER TO innovaedu;

SET search_path = mesa_ayuda, pg_catalog;

--
-- Name: medio_atencion_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE medio_atencion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE medio_atencion_id_seq OWNER TO innovaedu;

--
-- Name: cat_medio; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_medio (
    nombre character varying NOT NULL,
    id integer DEFAULT nextval('medio_atencion_id_seq'::regclass) NOT NULL,
    visible integer DEFAULT 1
);


ALTER TABLE cat_medio OWNER TO innovaedu;

--
-- Name: navegador_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE navegador_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE navegador_id_seq OWNER TO innovaedu;

--
-- Name: cat_navegador; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_navegador (
    id integer DEFAULT nextval('navegador_id_seq'::regclass) NOT NULL,
    nombre character varying NOT NULL,
    visible integer DEFAULT 1
);


ALTER TABLE cat_navegador OWNER TO innovaedu;

--
-- Name: prioridad_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE prioridad_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE prioridad_id_seq OWNER TO innovaedu;

--
-- Name: cat_prioridad; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_prioridad (
    id integer DEFAULT nextval('prioridad_id_seq'::regclass) NOT NULL,
    nombre character varying NOT NULL,
    visible integer DEFAULT 1
);


ALTER TABLE cat_prioridad OWNER TO innovaedu;

--
-- Name: tipo_incidencia_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE tipo_incidencia_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tipo_incidencia_id_seq OWNER TO innovaedu;

--
-- Name: cat_tipoincidencia; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_tipoincidencia (
    id integer DEFAULT nextval('tipo_incidencia_id_seq'::regclass) NOT NULL,
    nombre character varying NOT NULL,
    visible integer DEFAULT 1
);


ALTER TABLE cat_tipoincidencia OWNER TO innovaedu;

--
-- Name: tipo_incidenciae_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE tipo_incidenciae_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tipo_incidenciae_id_seq OWNER TO innovaedu;

--
-- Name: cat_tipoincidencia_esp; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_tipoincidencia_esp (
    id integer DEFAULT nextval('tipo_incidenciae_id_seq'::regclass) NOT NULL,
    nombre character varying NOT NULL,
    visible integer DEFAULT 1
);


ALTER TABLE cat_tipoincidencia_esp OWNER TO innovaedu;

--
-- Name: usuarios_can_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE usuarios_can_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE usuarios_can_id_seq OWNER TO innovaedu;

--
-- Name: cat_usuariocan; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE cat_usuariocan (
    id integer DEFAULT nextval('usuarios_can_id_seq'::regclass) NOT NULL,
    nombre character varying,
    userid integer
);


ALTER TABLE cat_usuariocan OWNER TO innovaedu;

--
-- Name: estatus_incidencia_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE estatus_incidencia_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE estatus_incidencia_id_seq OWNER TO innovaedu;

--
-- Name: estatus; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE estatus (
    id integer DEFAULT nextval('estatus_incidencia_id_seq'::regclass) NOT NULL,
    nombre character varying NOT NULL
);


ALTER TABLE estatus OWNER TO innovaedu;

--
-- Name: incidencias_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE incidencias_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE incidencias_id_seq OWNER TO innovaedu;

--
-- Name: incidencias; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE incidencias (
    id integer DEFAULT nextval('incidencias_id_seq'::regclass) NOT NULL,
    idalumno integer,
    idcurso integer,
    idtipoinc integer,
    descripcion character varying,
    idmedioat integer,
    estatus integer,
    idoperador integer,
    frecepcion bigint NOT NULL,
    fcierre bigint,
    prioridad integer,
    idnavegador integer,
    idoper_cierra integer,
    observacion character varying,
    us_especial integer,
    asignada integer
);


ALTER TABLE incidencias OWNER TO innovaedu;

--
-- Name: incidencias_esp_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE incidencias_esp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE incidencias_esp_id_seq OWNER TO innovaedu;

--
-- Name: incidencias_can; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE incidencias_can (
    id integer DEFAULT nextval('incidencias_esp_id_seq'::regclass) NOT NULL,
    idincidencia integer,
    idoper integer,
    fecha bigint,
    tipoincidencia integer,
    descripcion character varying,
    idusuariocan integer
);


ALTER TABLE incidencias_can OWNER TO innovaedu;

--
-- Name: incidencias_resp_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE incidencias_resp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE incidencias_resp_id_seq OWNER TO innovaedu;

--
-- Name: incidencias_resp; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE incidencias_resp (
    idincidencia integer NOT NULL,
    tipo integer,
    idoper integer NOT NULL,
    solucion character varying NOT NULL,
    m_atencion integer,
    fecha bigint,
    id bigint DEFAULT nextval('incidencias_resp_id_seq'::regclass) NOT NULL
);


ALTER TABLE incidencias_resp OWNER TO innovaedu;

--
-- Name: log_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE log_id_seq OWNER TO innovaedu;

--
-- Name: log; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE log (
    id bigint DEFAULT nextval('log_id_seq'::regclass) NOT NULL,
    idoper integer,
    fechahora bigint,
    ip character varying,
    url_actual character varying,
    navegador character varying,
    accion integer
);


ALTER TABLE log OWNER TO innovaedu;

--
-- Name: tipo_resp_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE tipo_resp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tipo_resp_id_seq OWNER TO innovaedu;

--
-- Name: tipo_resp; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE tipo_resp (
    id integer DEFAULT nextval('tipo_resp_id_seq'::regclass) NOT NULL,
    tipo character varying
);


ALTER TABLE tipo_resp OWNER TO innovaedu;

--
-- Name: usuarios_esp_id_seq; Type: SEQUENCE; Schema: mesa_ayuda; Owner: innovaedu
--

CREATE SEQUENCE usuarios_esp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE usuarios_esp_id_seq OWNER TO innovaedu;

--
-- Name: usuarios_esp; Type: TABLE; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE TABLE usuarios_esp (
    id integer DEFAULT nextval('usuarios_esp_id_seq'::regclass) NOT NULL,
    nombre character varying,
    email character varying,
    numerored character varying,
    fechaalta bigint,
    idoper integer,
    matricula character varying,
    delegacion integer,
    nivel integer,
    adscripcion integer,
    categoria integer,
    subcat integer,
    coord integer,
    regimen integer,
    tunidad integer,
    cve_departamental character(10)
);


ALTER TABLE usuarios_esp OWNER TO innovaedu;

SET search_path = nomina, pg_catalog;

--
-- Name: ssn_categoria_cve_categoria_seq; Type: SEQUENCE; Schema: nomina; Owner: innovaedu
--

CREATE SEQUENCE ssn_categoria_cve_categoria_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssn_categoria_cve_categoria_seq OWNER TO innovaedu;

--
-- Name: ssn_categoria_cve_categoria_seq; Type: SEQUENCE OWNED BY; Schema: nomina; Owner: innovaedu
--

ALTER SEQUENCE ssn_categoria_cve_categoria_seq OWNED BY ssn_categoria.cve_categoria;


--
-- Name: ssn_tipo_catgoria_cve_tipo_categoria_seq; Type: SEQUENCE; Schema: nomina; Owner: innovaedu
--

CREATE SEQUENCE ssn_tipo_catgoria_cve_tipo_categoria_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE ssn_tipo_catgoria_cve_tipo_categoria_seq OWNER TO innovaedu;

--
-- Name: ssn_tipo_catgoria_cve_tipo_categoria_seq; Type: SEQUENCE OWNED BY; Schema: nomina; Owner: innovaedu
--

ALTER SEQUENCE ssn_tipo_catgoria_cve_tipo_categoria_seq OWNED BY ssn_tipo_catgoria.cve_tipo_categoria;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: mdl_category_id_seq; Type: SEQUENCE; Schema: parametrizacion; Owner: innovaedu
--

CREATE SEQUENCE mdl_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_category_id_seq OWNER TO innovaedu;

--
-- Name: mdl_subcategory_id_seq; Type: SEQUENCE; Schema: parametrizacion; Owner: innovaedu
--

CREATE SEQUENCE mdl_subcategory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_subcategory_id_seq OWNER TO innovaedu;

--
-- Name: v_perfiles_rol; Type: VIEW; Schema: parametrizacion; Owner: innovaedu
--

CREATE VIEW v_perfiles_rol AS
SELECT DISTINCT CASE WHEN (r.id = 29) THEN r.shortname ELSE r.name END AS nombre, r.id, pm.descripcion AS perfil, tr.ind_tipo AS id_perfil FROM ((ssp_tipo_roles tr JOIN ssp_cat_perfil_nombre pm ON ((pm.id_tipo = tr.ind_tipo))) JOIN public.mdl_role r ON ((r.id = tr.cve_role)));


ALTER TABLE v_perfiles_rol OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: mdl_accion; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_accion (
    id integer NOT NULL,
    cve_tipo_mensaje numeric(1,0) DEFAULT 1 NOT NULL,
    des_mensaje character varying(60) NOT NULL
);


ALTER TABLE mdl_accion OWNER TO innovaedu;

--
-- Name: mdl_log_sied; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_log_sied (
    id integer DEFAULT nextval('sied_mdl_seq_log'::regclass) NOT NULL,
    fecha_hora_actividad timestamp without time zone NOT NULL,
    modulo character varying(50) NOT NULL,
    tabla character varying(60) NOT NULL,
    id_usuario integer NOT NULL,
    id_accion integer NOT NULL,
    id_registro character varying(30) NOT NULL
);


ALTER TABLE mdl_log_sied OWNER TO innovaedu;

SET search_path = parametrizacion, pg_catalog;

--
-- Name: v_ssp_bitacora; Type: VIEW; Schema: parametrizacion; Owner: innovaedu
--

CREATE VIEW v_ssp_bitacora AS
SELECT l.id, l.fecha_hora_actividad, l.modulo, l.tabla, l.id_usuario, l.id_registro, u.username, a.id AS id_accion, a.des_mensaje, CASE WHEN (a.cve_tipo_mensaje = (1)::numeric) THEN 'Inserci¢n'::text WHEN (a.cve_tipo_mensaje = (2)::numeric) THEN 'Edici¢n'::text WHEN (a.cve_tipo_mensaje = (3)::numeric) THEN 'Eliminaci¢n'::text ELSE NULL::text END AS tipo_accion FROM ((public.mdl_log_sied l LEFT JOIN public.mdl_accion a ON ((l.id_accion = a.id))) LEFT JOIN public.mdl_user u ON ((u.id = l.id_usuario)));


ALTER TABLE v_ssp_bitacora OWNER TO innovaedu;

--
-- Name: v_usuario_busqueda_menu; Type: VIEW; Schema: parametrizacion; Owner: innovaedu
--

CREATE VIEW v_usuario_busqueda_menu AS
SELECT DISTINCT u.id AS userid, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre, u.username AS matricula, ra.roleid, m.cve_menu, m.des_menu, m.cve_menu_padre, um.cve_rol, um.ind_activo FROM (((((public.mdl_user u LEFT JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) LEFT JOIN ssp_tipo_roles tr ON ((tr.cve_role = ra.roleid))) LEFT JOIN public.mdl_role rr ON ((rr.id = ra.roleid))) LEFT JOIN ssp_tab_usuario_menu um ON (((tr.cve_role = um.cve_rol) OR (um.cve_usuario = u.id)))) LEFT JOIN ssp_cat_menu m ON ((um.cve_menu = m.cve_menu))) ORDER BY m.cve_menu_padre;


ALTER TABLE v_usuario_busqueda_menu OWNER TO innovaedu;

--
-- Name: v_usuario_proceso; Type: VIEW; Schema: parametrizacion; Owner: innovaedu
--

CREATE VIEW v_usuario_proceso AS
SELECT tu.cve_usuario, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre, u.username AS matricula, tu.cve_rol, tu.cve_menu, tr.ind_tipo AS id_perfil, tu.ind_activo FROM (((ssp_tab_usuario_menu tu LEFT JOIN ssp_tipo_roles tr ON ((tr.cve_role = tu.cve_rol))) LEFT JOIN ssp_cat_menu m ON ((tu.cve_menu = m.cve_menu))) JOIN public.mdl_user u ON ((u.id = tu.cve_usuario)));


ALTER TABLE v_usuario_proceso OWNER TO innovaedu;

--
-- Name: v_usuario_proceso_busqueda; Type: VIEW; Schema: parametrizacion; Owner: innovaedu
--

CREATE VIEW v_usuario_proceso_busqueda AS
SELECT DISTINCT u.id, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre, u.username AS matricula, r.id AS roleid, r.name AS rol, tr.ind_tipo AS id_perfil FROM (((public.mdl_user u JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN ssp_tipo_roles tr ON ((tr.cve_role = ra.roleid))) JOIN public.mdl_role r ON ((r.id = ra.roleid)));


ALTER TABLE v_usuario_proceso_busqueda OWNER TO innovaedu;

SET search_path = public, pg_catalog;

--
-- Name: adodb_logsql_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE adodb_logsql_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE adodb_logsql_id_seq OWNER TO innovaedu;

--
-- Name: adodb_logsql; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE adodb_logsql (
    id bigint DEFAULT nextval('adodb_logsql_id_seq'::regclass) NOT NULL,
    created timestamp without time zone NOT NULL,
    sql0 character varying(250) DEFAULT ''::character varying NOT NULL,
    sql1 text,
    params text,
    tracer text,
    timer numeric(16,6) DEFAULT 0 NOT NULL
);


ALTER TABLE adodb_logsql OWNER TO innovaedu;

--
-- Name: TABLE adodb_logsql; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE adodb_logsql IS 'to save some logs from ADOdb';


--
-- Name: appmanager; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE appmanager (
    psize integer NOT NULL
);


ALTER TABLE appmanager OWNER TO postgres;

--
-- Name: nom_clvdepartemento; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE nom_clvdepartemento (
    clvdepto character varying(30),
    id integer NOT NULL,
    completa character varying(100)
);


ALTER TABLE nom_clvdepartemento OWNER TO innovaedu;

--
-- Name: clvdepartemento_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE clvdepartemento_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE clvdepartemento_id_seq OWNER TO innovaedu;

--
-- Name: clvdepartemento_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE clvdepartemento_id_seq OWNED BY nom_clvdepartemento.id;


--
-- Name: nom_delncat; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE nom_delncat (
    id integer NOT NULL,
    clvdel character varying(4),
    desc_del character varying(50)
);


ALTER TABLE nom_delncat OWNER TO innovaedu;

--
-- Name: delncat_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE delncat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE delncat_id_seq OWNER TO innovaedu;

--
-- Name: delncat_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE delncat_id_seq OWNED BY nom_delncat.id;


--
-- Name: folder; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE folder (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE folder OWNER TO innovaedu;

--
-- Name: TABLE folder; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE folder IS 'each record is one folder resource';


--
-- Name: imscp; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE imscp (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL,
    keepold bigint DEFAULT (-1) NOT NULL,
    structure text,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE imscp OWNER TO innovaedu;

--
-- Name: TABLE imscp; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE imscp IS 'each record is one imscp resource';


--
-- Name: mdl_accion_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_accion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_accion_id_seq OWNER TO innovaedu;

--
-- Name: mdl_accion_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_accion_id_seq OWNED BY mdl_accion.id;


--
-- Name: mdl_assign; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    alwaysshowdescription smallint DEFAULT 0 NOT NULL,
    nosubmissions smallint DEFAULT 0 NOT NULL,
    submissiondrafts smallint DEFAULT 0 NOT NULL,
    sendnotifications smallint DEFAULT 0 NOT NULL,
    sendlatenotifications smallint DEFAULT 0 NOT NULL,
    duedate bigint DEFAULT 0 NOT NULL,
    allowsubmissionsfromdate bigint DEFAULT 0 NOT NULL,
    grade bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    requiresubmissionstatement smallint DEFAULT 0 NOT NULL,
    completionsubmit smallint DEFAULT 0 NOT NULL,
    cutoffdate bigint DEFAULT 0 NOT NULL,
    teamsubmission smallint DEFAULT 0 NOT NULL,
    requireallteammemberssubmit smallint DEFAULT 0 NOT NULL,
    teamsubmissiongroupingid bigint DEFAULT 0 NOT NULL,
    blindmarking smallint DEFAULT 0 NOT NULL,
    revealidentities smallint DEFAULT 0 NOT NULL,
    attemptreopenmethod character varying(10) DEFAULT 'none'::character varying NOT NULL,
    maxattempts integer DEFAULT (-1) NOT NULL
);


ALTER TABLE mdl_assign OWNER TO innovaedu;

--
-- Name: TABLE mdl_assign; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assign IS 'This table saves information about an instance of mod_assign in a course.';


--
-- Name: mdl_assign_grades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign_grades (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    grader bigint DEFAULT 0 NOT NULL,
    grade numeric(10,5) DEFAULT 0,
    attemptnumber bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assign_grades OWNER TO innovaedu;

--
-- Name: TABLE mdl_assign_grades; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assign_grades IS 'Grading information about a single assignment submission.';


--
-- Name: mdl_assign_grades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_grades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_grades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_grades_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_grades_id_seq OWNED BY mdl_assign_grades.id;


--
-- Name: mdl_assign_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_id_seq OWNED BY mdl_assign.id;


--
-- Name: mdl_assign_plugin_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign_plugin_config (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    plugin character varying(28) DEFAULT ''::character varying NOT NULL,
    subtype character varying(28) DEFAULT ''::character varying NOT NULL,
    name character varying(28) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_assign_plugin_config OWNER TO innovaedu;

--
-- Name: TABLE mdl_assign_plugin_config; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assign_plugin_config IS 'Config data for an instance of a plugin in an assignment.';


--
-- Name: mdl_assign_plugin_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_plugin_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_plugin_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_plugin_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_plugin_config_id_seq OWNED BY mdl_assign_plugin_config.id;


--
-- Name: mdl_assign_submission; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign_submission (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    status character varying(10),
    groupid bigint DEFAULT 0 NOT NULL,
    attemptnumber bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assign_submission OWNER TO innovaedu;

--
-- Name: TABLE mdl_assign_submission; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assign_submission IS 'This table keeps information about student interactions with the mod/assign. This is limited to metadata about a student submission but does not include the submission itself which is stored by plugins.';


--
-- Name: mdl_assign_submission_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_submission_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_submission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_submission_id_seq OWNED BY mdl_assign_submission.id;


--
-- Name: mdl_assign_user_flags; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign_user_flags (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    locked bigint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL,
    extensionduedate bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assign_user_flags OWNER TO innovaedu;

--
-- Name: mdl_assign_user_flags_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_user_flags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_user_flags_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_user_flags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_user_flags_id_seq OWNED BY mdl_assign_user_flags.id;


--
-- Name: mdl_assign_user_mapping; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assign_user_mapping (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assign_user_mapping OWNER TO innovaedu;

--
-- Name: TABLE mdl_assign_user_mapping; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assign_user_mapping IS 'Map an assignment specific id number to a user';


--
-- Name: mdl_assign_user_mapping_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assign_user_mapping_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assign_user_mapping_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assign_user_mapping_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assign_user_mapping_id_seq OWNED BY mdl_assign_user_mapping.id;


--
-- Name: mdl_assignfeedback_comments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignfeedback_comments (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    grade bigint DEFAULT 0 NOT NULL,
    commenttext text,
    commentformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignfeedback_comments OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignfeedback_comments; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignfeedback_comments IS 'Text feedback for submitted assignments';


--
-- Name: mdl_assignfeedback_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignfeedback_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignfeedback_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignfeedback_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assignfeedback_comments_id_seq OWNED BY mdl_assignfeedback_comments.id;


--
-- Name: mdl_assignfeedback_file; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignfeedback_file (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    grade bigint DEFAULT 0 NOT NULL,
    numfiles bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignfeedback_file OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignfeedback_file; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignfeedback_file IS 'Stores info about the number of files submitted by a student.';


--
-- Name: mdl_assignfeedback_file_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignfeedback_file_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignfeedback_file_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignfeedback_file_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assignfeedback_file_id_seq OWNED BY mdl_assignfeedback_file.id;


--
-- Name: mdl_assignment_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignment_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignment; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignment (
    id bigint DEFAULT nextval('mdl_assignment_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    assignmenttype character varying(50) DEFAULT ''::character varying NOT NULL,
    resubmit smallint DEFAULT 0 NOT NULL,
    preventlate smallint DEFAULT 0 NOT NULL,
    emailteachers smallint DEFAULT 0 NOT NULL,
    var1 bigint DEFAULT 0,
    var2 bigint DEFAULT 0,
    var3 bigint DEFAULT 0,
    var4 bigint DEFAULT 0,
    var5 bigint DEFAULT 0,
    maxbytes bigint DEFAULT 100000 NOT NULL,
    timedue bigint DEFAULT 0 NOT NULL,
    timeavailable bigint DEFAULT 0 NOT NULL,
    grade bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignment OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignment; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignment IS 'Defines assignments';


--
-- Name: mdl_assignment_submissions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignment_submissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignment_submissions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignment_submissions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignment_submissions (
    id bigint DEFAULT nextval('mdl_assignment_submissions_id_seq'::regclass) NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    numfiles bigint DEFAULT 0 NOT NULL,
    data1 text,
    data2 text,
    grade bigint DEFAULT 0 NOT NULL,
    submissioncomment text NOT NULL,
    format smallint DEFAULT 0 NOT NULL,
    teacher bigint DEFAULT 0 NOT NULL,
    timemarked bigint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignment_submissions OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignment_submissions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignment_submissions IS 'Info about submitted assignments';


--
-- Name: mdl_assignsubmission_file; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignsubmission_file (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    submission bigint DEFAULT 0 NOT NULL,
    numfiles bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignsubmission_file OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignsubmission_file; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignsubmission_file IS 'Info about file submissions for assignments';


--
-- Name: mdl_assignsubmission_file_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignsubmission_file_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignsubmission_file_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignsubmission_file_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assignsubmission_file_id_seq OWNED BY mdl_assignsubmission_file.id;


--
-- Name: mdl_assignsubmission_onlinetext; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_assignsubmission_onlinetext (
    id bigint NOT NULL,
    assignment bigint DEFAULT 0 NOT NULL,
    submission bigint DEFAULT 0 NOT NULL,
    onlinetext text,
    onlineformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_assignsubmission_onlinetext OWNER TO innovaedu;

--
-- Name: TABLE mdl_assignsubmission_onlinetext; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_assignsubmission_onlinetext IS 'Info about onlinetext submission';


--
-- Name: mdl_assignsubmission_onlinetext_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_assignsubmission_onlinetext_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_assignsubmission_onlinetext_id_seq OWNER TO innovaedu;

--
-- Name: mdl_assignsubmission_onlinetext_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_assignsubmission_onlinetext_id_seq OWNED BY mdl_assignsubmission_onlinetext.id;


--
-- Name: mdl_backup_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_controllers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_backup_controllers (
    id bigint NOT NULL,
    backupid character varying(32) DEFAULT ''::character varying NOT NULL,
    type character varying(10) DEFAULT ''::character varying NOT NULL,
    itemid bigint NOT NULL,
    format character varying(20) DEFAULT ''::character varying NOT NULL,
    interactive smallint NOT NULL,
    purpose smallint NOT NULL,
    userid bigint NOT NULL,
    status smallint NOT NULL,
    execution smallint NOT NULL,
    executiontime bigint NOT NULL,
    checksum character varying(32) DEFAULT ''::character varying NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    controller text NOT NULL,
    operation character varying(20) DEFAULT 'backup'::character varying NOT NULL
);


ALTER TABLE mdl_backup_controllers OWNER TO innovaedu;

--
-- Name: mdl_backup_controllers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_controllers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_controllers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_controllers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_backup_controllers_id_seq OWNED BY mdl_backup_controllers.id;


--
-- Name: mdl_backup_courses_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_courses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_courses_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_courses; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_backup_courses (
    id bigint DEFAULT nextval('mdl_backup_courses_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    laststarttime bigint DEFAULT 0 NOT NULL,
    lastendtime bigint DEFAULT 0 NOT NULL,
    laststatus character varying(1) DEFAULT '0'::character varying NOT NULL,
    nextstarttime bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_backup_courses OWNER TO innovaedu;

--
-- Name: TABLE mdl_backup_courses; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_backup_courses IS 'To store every course backup status';


--
-- Name: mdl_backup_files_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_files_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_files_template; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_backup_files_template (
    id bigint NOT NULL,
    backupid character varying(32) DEFAULT ''::character varying NOT NULL,
    contextid bigint NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    filearea character varying(50) DEFAULT ''::character varying NOT NULL,
    itemid bigint NOT NULL,
    info text,
    newcontextid bigint,
    newitemid bigint
);


ALTER TABLE mdl_backup_files_template OWNER TO innovaedu;

--
-- Name: mdl_backup_files_template_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_files_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_files_template_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_files_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_backup_files_template_id_seq OWNED BY mdl_backup_files_template.id;


--
-- Name: mdl_backup_ids_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_ids_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_ids_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_ids_template; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_backup_ids_template (
    id bigint NOT NULL,
    backupid character varying(32) DEFAULT ''::character varying NOT NULL,
    itemname character varying(160) DEFAULT ''::character varying NOT NULL,
    itemid bigint NOT NULL,
    parentitemid bigint,
    newitemid bigint DEFAULT 0 NOT NULL,
    info text
);


ALTER TABLE mdl_backup_ids_template OWNER TO innovaedu;

--
-- Name: mdl_backup_ids_template_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_ids_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_ids_template_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_ids_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_backup_ids_template_id_seq OWNED BY mdl_backup_ids_template.id;


--
-- Name: mdl_backup_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_logs; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_backup_logs (
    id bigint NOT NULL,
    backupid character varying(32) DEFAULT ''::character varying NOT NULL,
    loglevel smallint NOT NULL,
    message character varying(255) DEFAULT ''::character varying NOT NULL,
    timecreated bigint NOT NULL
);


ALTER TABLE mdl_backup_logs OWNER TO innovaedu;

--
-- Name: mdl_backup_logs_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_backup_logs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_backup_logs_id_seq OWNER TO innovaedu;

--
-- Name: mdl_backup_logs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_backup_logs_id_seq OWNED BY mdl_backup_logs.id;


--
-- Name: mdl_badge; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge (
    id bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    image bigint NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    usercreated bigint NOT NULL,
    usermodified bigint NOT NULL,
    issuername character varying(255) DEFAULT ''::character varying NOT NULL,
    issuerurl character varying(255) DEFAULT ''::character varying NOT NULL,
    issuercontact character varying(255),
    expiredate bigint,
    expireperiod bigint,
    type smallint DEFAULT 1 NOT NULL,
    courseid bigint,
    message text NOT NULL,
    messagesubject text NOT NULL,
    attachment smallint DEFAULT 1 NOT NULL,
    notification smallint DEFAULT 1 NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    nextcron bigint
);


ALTER TABLE mdl_badge OWNER TO innovaedu;

--
-- Name: mdl_badge_backpack; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_backpack (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    email character varying(100) DEFAULT ''::character varying NOT NULL,
    backpackurl character varying(255) DEFAULT ''::character varying NOT NULL,
    backpackuid bigint NOT NULL,
    autosync smallint DEFAULT 0 NOT NULL,
    password character varying(50)
);


ALTER TABLE mdl_badge_backpack OWNER TO innovaedu;

--
-- Name: mdl_badge_backpack_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_backpack_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_backpack_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_backpack_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_backpack_id_seq OWNED BY mdl_badge_backpack.id;


--
-- Name: mdl_badge_criteria; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_criteria (
    id bigint NOT NULL,
    badgeid bigint DEFAULT 0 NOT NULL,
    criteriatype bigint,
    method smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_badge_criteria OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_criteria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_criteria_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_criteria_id_seq OWNED BY mdl_badge_criteria.id;


--
-- Name: mdl_badge_criteria_met; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_criteria_met (
    id bigint NOT NULL,
    issuedid bigint,
    critid bigint NOT NULL,
    userid bigint NOT NULL,
    datemet bigint NOT NULL
);


ALTER TABLE mdl_badge_criteria_met OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_met_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_criteria_met_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_criteria_met_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_met_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_criteria_met_id_seq OWNED BY mdl_badge_criteria_met.id;


--
-- Name: mdl_badge_criteria_param; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_criteria_param (
    id bigint NOT NULL,
    critid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value character varying(255)
);


ALTER TABLE mdl_badge_criteria_param OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_param_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_criteria_param_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_criteria_param_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_criteria_param_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_criteria_param_id_seq OWNED BY mdl_badge_criteria_param.id;


--
-- Name: mdl_badge_external; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_external (
    id bigint NOT NULL,
    backpackid bigint NOT NULL,
    collectionid bigint NOT NULL
);


ALTER TABLE mdl_badge_external OWNER TO innovaedu;

--
-- Name: mdl_badge_external_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_external_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_external_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_external_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_external_id_seq OWNED BY mdl_badge_external.id;


--
-- Name: mdl_badge_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_id_seq OWNED BY mdl_badge.id;


--
-- Name: mdl_badge_issued; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_issued (
    id bigint NOT NULL,
    badgeid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    uniquehash text NOT NULL,
    dateissued bigint DEFAULT 0 NOT NULL,
    dateexpire bigint,
    visible smallint DEFAULT 0 NOT NULL,
    issuernotified bigint
);


ALTER TABLE mdl_badge_issued OWNER TO innovaedu;

--
-- Name: mdl_badge_issued_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_issued_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_issued_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_issued_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_issued_id_seq OWNED BY mdl_badge_issued.id;


--
-- Name: mdl_badge_manual_award; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_badge_manual_award (
    id bigint NOT NULL,
    badgeid bigint NOT NULL,
    recipientid bigint NOT NULL,
    issuerid bigint NOT NULL,
    issuerrole bigint NOT NULL,
    datemet bigint NOT NULL
);


ALTER TABLE mdl_badge_manual_award OWNER TO innovaedu;

--
-- Name: mdl_badge_manual_award_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_badge_manual_award_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_badge_manual_award_id_seq OWNER TO innovaedu;

--
-- Name: mdl_badge_manual_award_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_badge_manual_award_id_seq OWNED BY mdl_badge_manual_award.id;


--
-- Name: mdl_bigbluebuttonbn; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_bigbluebuttonbn (
    id bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    moderatorpass character varying(255) DEFAULT ''::character varying NOT NULL,
    viewerpass character varying(255) DEFAULT ''::character varying NOT NULL,
    wait smallint DEFAULT 0 NOT NULL,
    newwindow smallint DEFAULT 0 NOT NULL,
    allmoderators smallint DEFAULT 0 NOT NULL,
    record smallint DEFAULT 0 NOT NULL,
    description character varying(255) DEFAULT ''::character varying NOT NULL,
    welcome text NOT NULL,
    voicebridge integer DEFAULT 0 NOT NULL,
    timedue bigint DEFAULT 0 NOT NULL,
    timeavailable bigint DEFAULT 0 NOT NULL,
    timeduration bigint DEFAULT 0 NOT NULL,
    meetingid character varying(256),
    course bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    participants text,
    userlimit smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_bigbluebuttonbn OWNER TO innovaedu;

--
-- Name: TABLE mdl_bigbluebuttonbn; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_bigbluebuttonbn IS 'The bigbluebuttonbn table to store information about a meeting activities.';


--
-- Name: mdl_bigbluebuttonbn_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_bigbluebuttonbn_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_bigbluebuttonbn_id_seq OWNER TO innovaedu;

--
-- Name: mdl_bigbluebuttonbn_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_bigbluebuttonbn_id_seq OWNED BY mdl_bigbluebuttonbn.id;


--
-- Name: mdl_bigbluebuttonbn_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_bigbluebuttonbn_log (
    id bigint NOT NULL,
    meetingid character varying(256) DEFAULT ''::character varying NOT NULL,
    courseid bigint NOT NULL,
    bigbluebuttonbnid bigint NOT NULL,
    record smallint NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    event character varying(32) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_bigbluebuttonbn_log OWNER TO innovaedu;

--
-- Name: TABLE mdl_bigbluebuttonbn_log; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_bigbluebuttonbn_log IS 'The bigbluebuttonbn table to store meeting activity events';


--
-- Name: mdl_bigbluebuttonbn_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_bigbluebuttonbn_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_bigbluebuttonbn_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_bigbluebuttonbn_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_bigbluebuttonbn_log_id_seq OWNED BY mdl_bigbluebuttonbn_log.id;


--
-- Name: mdl_block_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_block (
    id bigint DEFAULT nextval('mdl_block_id_seq'::regclass) NOT NULL,
    name character varying(40) DEFAULT ''::character varying NOT NULL,
    version bigint DEFAULT 0 NOT NULL,
    cron bigint DEFAULT 0 NOT NULL,
    lastcron bigint DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_block OWNER TO innovaedu;

--
-- Name: TABLE mdl_block; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_block IS 'to store installed blocks';


--
-- Name: mdl_block_community; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_block_community (
    id bigint NOT NULL,
    userid bigint NOT NULL,
    coursename character varying(255) DEFAULT ''::character varying NOT NULL,
    coursedescription text,
    courseurl character varying(255) DEFAULT ''::character varying NOT NULL,
    imageurl character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_block_community OWNER TO innovaedu;

--
-- Name: TABLE mdl_block_community; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_block_community IS 'Community block';


--
-- Name: mdl_block_community_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_community_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_community_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block_community_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_block_community_id_seq OWNED BY mdl_block_community.id;


--
-- Name: mdl_block_instances_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_instances_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_instances_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block_instances; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_block_instances (
    id bigint DEFAULT nextval('mdl_block_instances_id_seq'::regclass) NOT NULL,
    pagetypepattern character varying(64) DEFAULT ''::character varying NOT NULL,
    defaultregion character varying(16) DEFAULT ''::character varying NOT NULL,
    defaultweight bigint NOT NULL,
    configdata text,
    blockname character varying(40) NOT NULL,
    parentcontextid bigint NOT NULL,
    showinsubcontexts smallint NOT NULL,
    subpagepattern character varying(16)
);


ALTER TABLE mdl_block_instances OWNER TO innovaedu;

--
-- Name: TABLE mdl_block_instances; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_block_instances IS 'to store block instances in pages';


--
-- Name: mdl_block_pinned_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_pinned_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_pinned_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block_positions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_block_positions (
    id bigint NOT NULL,
    blockinstanceid bigint NOT NULL,
    contextid bigint NOT NULL,
    pagetype character varying(64) DEFAULT ''::character varying NOT NULL,
    subpage character varying(16) DEFAULT ''::character varying NOT NULL,
    visible smallint NOT NULL,
    region character varying(16) DEFAULT ''::character varying NOT NULL,
    weight bigint NOT NULL
);


ALTER TABLE mdl_block_positions OWNER TO innovaedu;

--
-- Name: mdl_block_positions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_positions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_positions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block_positions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_block_positions_id_seq OWNED BY mdl_block_positions.id;


--
-- Name: mdl_block_rss_client_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_rss_client_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_rss_client_id_seq OWNER TO innovaedu;

--
-- Name: mdl_block_rss_client; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_block_rss_client (
    id bigint DEFAULT nextval('mdl_block_rss_client_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    title text NOT NULL,
    preferredtitle character varying(64) DEFAULT ''::character varying NOT NULL,
    description text NOT NULL,
    shared smallint DEFAULT 0 NOT NULL,
    url character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_block_rss_client OWNER TO innovaedu;

--
-- Name: TABLE mdl_block_rss_client; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_block_rss_client IS 'Remote news feed information. Contains the news feed id, the userid of the user who added the feed, the title of the feed itself and a description of the feed contents along with the url used to access the remote feed. Preferredtitle is a field for f';


--
-- Name: mdl_block_search_documents_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_block_search_documents_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_block_search_documents_id_seq OWNER TO innovaedu;

--
-- Name: mdl_blog_association; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_blog_association (
    id bigint NOT NULL,
    contextid bigint NOT NULL,
    blogid bigint NOT NULL
);


ALTER TABLE mdl_blog_association OWNER TO innovaedu;

--
-- Name: mdl_blog_association_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_blog_association_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_blog_association_id_seq OWNER TO innovaedu;

--
-- Name: mdl_blog_association_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_blog_association_id_seq OWNED BY mdl_blog_association.id;


--
-- Name: mdl_blog_external; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_blog_external (
    id bigint NOT NULL,
    userid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    url text NOT NULL,
    filtertags character varying(255),
    failedlastsync smallint DEFAULT 0 NOT NULL,
    timemodified bigint,
    timefetched bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_blog_external OWNER TO innovaedu;

--
-- Name: mdl_blog_external_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_blog_external_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_blog_external_id_seq OWNER TO innovaedu;

--
-- Name: mdl_blog_external_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_blog_external_id_seq OWNED BY mdl_blog_external.id;


--
-- Name: mdl_blog_tag_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_blog_tag_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_blog_tag_instance_id_seq OWNER TO innovaedu;

--
-- Name: mdl_book; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_book (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    numbering smallint DEFAULT 0 NOT NULL,
    customtitles smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_book OWNER TO innovaedu;

--
-- Name: TABLE mdl_book; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_book IS 'Defines book';


--
-- Name: mdl_book_chapters; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_book_chapters (
    id bigint NOT NULL,
    bookid bigint DEFAULT 0 NOT NULL,
    pagenum bigint DEFAULT 0 NOT NULL,
    subchapter bigint DEFAULT 0 NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    content text NOT NULL,
    contentformat smallint DEFAULT 0 NOT NULL,
    hidden smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    importsrc character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_book_chapters OWNER TO innovaedu;

--
-- Name: TABLE mdl_book_chapters; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_book_chapters IS 'Defines book_chapters';


--
-- Name: mdl_book_chapters_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_book_chapters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_book_chapters_id_seq OWNER TO innovaedu;

--
-- Name: mdl_book_chapters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_book_chapters_id_seq OWNED BY mdl_book_chapters.id;


--
-- Name: mdl_book_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_book_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_book_id_seq OWNER TO innovaedu;

--
-- Name: mdl_book_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_book_id_seq OWNED BY mdl_book.id;


--
-- Name: mdl_cache_filters_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cache_filters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cache_filters_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cache_filters; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cache_filters (
    id bigint DEFAULT nextval('mdl_cache_filters_id_seq'::regclass) NOT NULL,
    filter character varying(32) DEFAULT ''::character varying NOT NULL,
    version bigint DEFAULT 0 NOT NULL,
    md5key character varying(32) DEFAULT ''::character varying NOT NULL,
    rawtext text NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_cache_filters OWNER TO innovaedu;

--
-- Name: TABLE mdl_cache_filters; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_cache_filters IS 'For keeping information about cached data';


--
-- Name: mdl_cache_flags; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cache_flags (
    id bigint NOT NULL,
    flagtype character varying(255) DEFAULT ''::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    value text NOT NULL,
    expiry bigint NOT NULL
);


ALTER TABLE mdl_cache_flags OWNER TO innovaedu;

--
-- Name: mdl_cache_flags_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cache_flags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cache_flags_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cache_flags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_cache_flags_id_seq OWNED BY mdl_cache_flags.id;


--
-- Name: mdl_cache_text_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cache_text_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cache_text_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cache_text; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cache_text (
    id bigint DEFAULT nextval('mdl_cache_text_id_seq'::regclass) NOT NULL,
    md5key character varying(32) DEFAULT ''::character varying NOT NULL,
    formattedtext text NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_cache_text OWNER TO innovaedu;

--
-- Name: TABLE mdl_cache_text; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_cache_text IS 'For storing temporary copies of processed texts';


--
-- Name: mdl_calendary_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_calendary_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_calendary_id_seq OWNER TO innovaedu;

--
-- Name: mdl_calendary; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_calendary (
    id integer DEFAULT nextval('mdl_calendary_id_seq'::regclass) NOT NULL,
    idcurso integer DEFAULT 0 NOT NULL,
    shortname character varying(50) DEFAULT 0 NOT NULL,
    fase character varying(20) DEFAULT 0 NOT NULL,
    fchinipre timestamp with time zone NOT NULL,
    fchfinpre timestamp with time zone NOT NULL,
    rspact character varying(20) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    activo character(1) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_calendary OWNER TO innovaedu;

--
-- Name: TABLE mdl_calendary; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_calendary IS 'calendario de apertura y cierre de preregistros';


--
-- Name: mdl_capabilities_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_capabilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_capabilities_id_seq OWNER TO innovaedu;

--
-- Name: mdl_capabilities; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_capabilities (
    id bigint DEFAULT nextval('mdl_capabilities_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    captype character varying(50) DEFAULT ''::character varying NOT NULL,
    contextlevel bigint DEFAULT 0 NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    riskbitmask bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_capabilities OWNER TO innovaedu;

--
-- Name: TABLE mdl_capabilities; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_capabilities IS 'this defines all capabilities';


--
-- Name: mdl_cargo_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cargo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cargo_id_seq OWNER TO innovaedu;

--
-- Name: mdl_category_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_category_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_conf; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_conf (
    issuesid bigint NOT NULL,
    certificateid bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    roleid bigint NOT NULL,
    levelstudent character varying(50),
    convenio numeric(1,0) DEFAULT 0 NOT NULL,
    tipocert numeric(1,0) DEFAULT 0 NOT NULL,
    code_crypted character varying(255)
);


ALTER TABLE mdl_certificate_conf OWNER TO innovaedu;

--
-- Name: mdl_certificate_firmas; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_certificate_firmas (
    id integer NOT NULL,
    nombre character varying(120),
    firma character varying(60)
);


ALTER TABLE mdl_certificate_firmas OWNER TO innovaedu;

--
-- Name: mdl_certificate_firmas_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_firmas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_firmas_id_seq OWNER TO innovaedu;

--
-- Name: mdl_certificate_firmas_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_certificate_firmas_id_seq OWNED BY mdl_certificate_firmas.id;


--
-- Name: mdl_certificate_linked_modules_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_certificate_linked_modules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_certificate_linked_modules_id_seq OWNER TO innovaedu;

--
-- Name: mdl_chat_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_chat_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_chat_id_seq OWNER TO innovaedu;

--
-- Name: mdl_chat; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_chat (
    id bigint DEFAULT nextval('mdl_chat_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    keepdays bigint DEFAULT 0 NOT NULL,
    studentlogs smallint DEFAULT 0 NOT NULL,
    chattime bigint DEFAULT 0 NOT NULL,
    schedule smallint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_chat OWNER TO innovaedu;

--
-- Name: TABLE mdl_chat; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_chat IS 'Each of these is a chat room';


--
-- Name: mdl_chat_messages_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_chat_messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_chat_messages_id_seq OWNER TO innovaedu;

--
-- Name: mdl_chat_messages; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_chat_messages (
    id bigint DEFAULT nextval('mdl_chat_messages_id_seq'::regclass) NOT NULL,
    chatid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    system smallint DEFAULT 0 NOT NULL,
    message text NOT NULL,
    "timestamp" bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_chat_messages OWNER TO innovaedu;

--
-- Name: TABLE mdl_chat_messages; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_chat_messages IS 'Stores all the actual chat messages';


--
-- Name: mdl_chat_messages_current; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_chat_messages_current (
    id bigint NOT NULL,
    chatid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    system smallint DEFAULT 0 NOT NULL,
    message text NOT NULL,
    "timestamp" bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_chat_messages_current OWNER TO innovaedu;

--
-- Name: mdl_chat_messages_current_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_chat_messages_current_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_chat_messages_current_id_seq OWNER TO innovaedu;

--
-- Name: mdl_chat_messages_current_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_chat_messages_current_id_seq OWNED BY mdl_chat_messages_current.id;


--
-- Name: mdl_chat_users_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_chat_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_chat_users_id_seq OWNER TO innovaedu;

--
-- Name: mdl_chat_users; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_chat_users (
    id bigint DEFAULT nextval('mdl_chat_users_id_seq'::regclass) NOT NULL,
    chatid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    version character varying(16) DEFAULT ''::character varying NOT NULL,
    ip character varying(45) DEFAULT ''::character varying NOT NULL,
    firstping bigint DEFAULT 0 NOT NULL,
    lastping bigint DEFAULT 0 NOT NULL,
    lastmessageping bigint DEFAULT 0 NOT NULL,
    sid character varying(32) DEFAULT ''::character varying NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    lang character varying(30) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_chat_users OWNER TO innovaedu;

--
-- Name: TABLE mdl_chat_users; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_chat_users IS 'Keeps track of which users are in which chat rooms';


--
-- Name: mdl_choice_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_choice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_choice_id_seq OWNER TO innovaedu;

--
-- Name: mdl_choice; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_choice (
    id bigint DEFAULT nextval('mdl_choice_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    publish smallint DEFAULT 0 NOT NULL,
    showresults smallint DEFAULT 0 NOT NULL,
    display smallint DEFAULT 0 NOT NULL,
    allowupdate smallint DEFAULT 0 NOT NULL,
    showunanswered smallint DEFAULT 0 NOT NULL,
    limitanswers smallint DEFAULT 0 NOT NULL,
    timeopen bigint DEFAULT 0 NOT NULL,
    timeclose bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    completionsubmit smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_choice OWNER TO innovaedu;

--
-- Name: TABLE mdl_choice; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_choice IS 'Available choices are stored here';


--
-- Name: mdl_choice_answers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_choice_answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_choice_answers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_choice_answers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_choice_answers (
    id bigint DEFAULT nextval('mdl_choice_answers_id_seq'::regclass) NOT NULL,
    choiceid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    optionid bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_choice_answers OWNER TO innovaedu;

--
-- Name: TABLE mdl_choice_answers; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_choice_answers IS 'choices performed by users';


--
-- Name: mdl_choice_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_choice_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_choice_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_choice_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_choice_options (
    id bigint DEFAULT nextval('mdl_choice_options_id_seq'::regclass) NOT NULL,
    choiceid bigint DEFAULT 0 NOT NULL,
    text text,
    maxanswers bigint DEFAULT 0,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_choice_options OWNER TO innovaedu;

--
-- Name: TABLE mdl_choice_options; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_choice_options IS 'available options to choice';


--
-- Name: mdl_cohort; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cohort (
    id bigint NOT NULL,
    contextid bigint NOT NULL,
    name character varying(254) DEFAULT ''::character varying NOT NULL,
    idnumber character varying(100),
    description text,
    descriptionformat smallint NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_cohort OWNER TO innovaedu;

--
-- Name: mdl_cohort_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cohort_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cohort_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cohort_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_cohort_id_seq OWNED BY mdl_cohort.id;


--
-- Name: mdl_cohort_members; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cohort_members (
    id bigint NOT NULL,
    cohortid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timeadded bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_cohort_members OWNER TO innovaedu;

--
-- Name: mdl_cohort_members_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cohort_members_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cohort_members_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cohort_members_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_cohort_members_id_seq OWNED BY mdl_cohort_members.id;


--
-- Name: mdl_comments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_comments (
    id bigint NOT NULL,
    contextid bigint NOT NULL,
    commentarea character varying(255) DEFAULT ''::character varying NOT NULL,
    itemid bigint NOT NULL,
    content text NOT NULL,
    format smallint DEFAULT 0 NOT NULL,
    userid bigint NOT NULL,
    timecreated bigint NOT NULL
);


ALTER TABLE mdl_comments OWNER TO innovaedu;

--
-- Name: mdl_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_comments_id_seq OWNED BY mdl_comments.id;


--
-- Name: mdl_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_config (
    id bigint DEFAULT nextval('mdl_config_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text NOT NULL
);


ALTER TABLE mdl_config OWNER TO innovaedu;

--
-- Name: TABLE mdl_config; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_config IS 'Moodle configuration variables';


--
-- Name: mdl_config_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_config_log (
    id bigint NOT NULL,
    userid bigint NOT NULL,
    timemodified bigint NOT NULL,
    plugin character varying(100),
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    value text,
    oldvalue text
);


ALTER TABLE mdl_config_log OWNER TO innovaedu;

--
-- Name: mdl_config_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_config_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_config_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_config_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_config_log_id_seq OWNED BY mdl_config_log.id;


--
-- Name: mdl_config_plugins_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_config_plugins_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_config_plugins_id_seq OWNER TO innovaedu;

--
-- Name: mdl_config_plugins; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_config_plugins (
    id bigint DEFAULT nextval('mdl_config_plugins_id_seq'::regclass) NOT NULL,
    plugin character varying(100) DEFAULT 'core'::character varying NOT NULL,
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    value text NOT NULL
);


ALTER TABLE mdl_config_plugins OWNER TO innovaedu;

--
-- Name: TABLE mdl_config_plugins; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_config_plugins IS 'Moodle modules and plugins configuration variables';


--
-- Name: mdl_context_rel_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_context_rel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_context_rel_id_seq OWNER TO innovaedu;

--
-- Name: mdl_context_temp; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_context_temp (
    id bigint NOT NULL,
    path character varying(255) DEFAULT ''::character varying NOT NULL,
    depth smallint NOT NULL
);


ALTER TABLE mdl_context_temp OWNER TO innovaedu;

--
-- Name: mdl_course_acces_close; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_acces_close (
    course integer NOT NULL,
    rol integer NOT NULL
);


ALTER TABLE mdl_course_acces_close OWNER TO innovaedu;

--
-- Name: mdl_course_allowed_modules_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_allowed_modules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_allowed_modules_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_completion_aggr_methd; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_completion_aggr_methd (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    criteriatype bigint,
    method smallint DEFAULT 0 NOT NULL,
    value numeric(10,5)
);


ALTER TABLE mdl_course_completion_aggr_methd OWNER TO innovaedu;

--
-- Name: mdl_course_completion_aggr_methd_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_completion_aggr_methd_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_completion_aggr_methd_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_completion_aggr_methd_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_completion_aggr_methd_id_seq OWNED BY mdl_course_completion_aggr_methd.id;


--
-- Name: mdl_course_completion_crit_compl; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_completion_crit_compl (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    criteriaid bigint DEFAULT 0 NOT NULL,
    gradefinal numeric(10,5),
    unenroled bigint,
    timecompleted bigint
);


ALTER TABLE mdl_course_completion_crit_compl OWNER TO innovaedu;

--
-- Name: mdl_course_completion_crit_compl_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_completion_crit_compl_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_completion_crit_compl_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_completion_crit_compl_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_completion_crit_compl_id_seq OWNED BY mdl_course_completion_crit_compl.id;


--
-- Name: mdl_course_completion_criteria; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_completion_criteria (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    criteriatype bigint DEFAULT 0 NOT NULL,
    module character varying(100),
    moduleinstance bigint,
    courseinstance bigint,
    enrolperiod bigint,
    timeend bigint,
    gradepass numeric(10,5),
    role bigint
);


ALTER TABLE mdl_course_completion_criteria OWNER TO innovaedu;

--
-- Name: mdl_course_completion_criteria_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_completion_criteria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_completion_criteria_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_completion_criteria_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_completion_criteria_id_seq OWNED BY mdl_course_completion_criteria.id;


--
-- Name: mdl_course_completions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_completions (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    timeenrolled bigint DEFAULT 0 NOT NULL,
    timestarted bigint DEFAULT 0 NOT NULL,
    timecompleted bigint,
    reaggregate bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_course_completions OWNER TO innovaedu;

--
-- Name: mdl_course_completions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_completions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_completions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_completions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_completions_id_seq OWNED BY mdl_course_completions.id;


--
-- Name: mdl_course_display_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_display_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_display_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_format_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_format_options (
    id bigint NOT NULL,
    courseid bigint NOT NULL,
    format character varying(21) DEFAULT ''::character varying NOT NULL,
    sectionid bigint DEFAULT 0 NOT NULL,
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_course_format_options OWNER TO innovaedu;

--
-- Name: mdl_course_format_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_format_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_format_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_format_options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_format_options_id_seq OWNED BY mdl_course_format_options.id;


--
-- Name: mdl_course_meta_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_meta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_meta_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_modules_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_modules_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_modules_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_modules; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_modules (
    id bigint DEFAULT nextval('mdl_course_modules_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    module bigint DEFAULT 0 NOT NULL,
    instance bigint DEFAULT 0 NOT NULL,
    section bigint DEFAULT 0 NOT NULL,
    added bigint DEFAULT 0 NOT NULL,
    score smallint DEFAULT 0 NOT NULL,
    indent integer DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 1 NOT NULL,
    visibleold smallint DEFAULT 1 NOT NULL,
    groupmode smallint DEFAULT 0 NOT NULL,
    idnumber character varying(100),
    groupingid bigint DEFAULT 0 NOT NULL,
    groupmembersonly smallint DEFAULT 0 NOT NULL,
    completion smallint DEFAULT 0 NOT NULL,
    completiongradeitemnumber bigint,
    completionview smallint DEFAULT 0 NOT NULL,
    completionexpected bigint DEFAULT 0 NOT NULL,
    availablefrom bigint DEFAULT 0 NOT NULL,
    availableuntil bigint DEFAULT 0 NOT NULL,
    showavailability smallint DEFAULT 0 NOT NULL,
    showdescription smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_course_modules OWNER TO innovaedu;

--
-- Name: TABLE mdl_course_modules; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_course_modules IS 'course_modules table retrofitted from MySQL';


--
-- Name: mdl_course_modules_avail_fields; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_modules_avail_fields (
    id bigint NOT NULL,
    coursemoduleid bigint NOT NULL,
    userfield character varying(50),
    customfieldid bigint,
    operator character varying(20) DEFAULT ''::character varying NOT NULL,
    value character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_course_modules_avail_fields OWNER TO innovaedu;

--
-- Name: mdl_course_modules_avail_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_modules_avail_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_modules_avail_fields_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_modules_avail_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_modules_avail_fields_id_seq OWNED BY mdl_course_modules_avail_fields.id;


--
-- Name: mdl_course_modules_availability; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_modules_availability (
    id bigint NOT NULL,
    coursemoduleid bigint NOT NULL,
    sourcecmid bigint,
    requiredcompletion smallint,
    gradeitemid bigint,
    grademin numeric(10,5),
    grademax numeric(10,5)
);


ALTER TABLE mdl_course_modules_availability OWNER TO innovaedu;

--
-- Name: mdl_course_modules_availability_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_modules_availability_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_modules_availability_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_modules_availability_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_modules_availability_id_seq OWNED BY mdl_course_modules_availability.id;


--
-- Name: mdl_course_modules_completion; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_modules_completion (
    id bigint NOT NULL,
    coursemoduleid bigint NOT NULL,
    userid bigint NOT NULL,
    completionstate smallint NOT NULL,
    viewed smallint,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_course_modules_completion OWNER TO innovaedu;

--
-- Name: mdl_course_modules_completion_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_modules_completion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_modules_completion_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_modules_completion_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_modules_completion_id_seq OWNED BY mdl_course_modules_completion.id;


--
-- Name: mdl_course_published; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_published (
    id bigint NOT NULL,
    courseid bigint NOT NULL,
    timepublished bigint NOT NULL,
    enrollable smallint DEFAULT 1 NOT NULL,
    hubcourseid bigint NOT NULL,
    status smallint DEFAULT 0,
    timechecked bigint,
    huburl character varying(255)
);


ALTER TABLE mdl_course_published OWNER TO innovaedu;

--
-- Name: mdl_course_published_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_published_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_published_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_published_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_published_id_seq OWNED BY mdl_course_published.id;


--
-- Name: mdl_course_request_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_request_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_request_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_request; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_request (
    id bigint DEFAULT nextval('mdl_course_request_id_seq'::regclass) NOT NULL,
    fullname character varying(254) DEFAULT ''::character varying NOT NULL,
    shortname character varying(100) DEFAULT ''::character varying NOT NULL,
    summary text NOT NULL,
    reason text NOT NULL,
    requester bigint DEFAULT 0 NOT NULL,
    password character varying(50) DEFAULT ''::character varying NOT NULL,
    summaryformat smallint DEFAULT 0 NOT NULL,
    category bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_course_request OWNER TO innovaedu;

--
-- Name: TABLE mdl_course_request; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_course_request IS 'course requests';


--
-- Name: mdl_course_sections_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_sections_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_sections_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_sections; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_sections (
    id bigint DEFAULT nextval('mdl_course_sections_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    section bigint DEFAULT 0 NOT NULL,
    summary text,
    sequence text,
    visible smallint DEFAULT 1 NOT NULL,
    name character varying(255),
    summaryformat smallint DEFAULT 0 NOT NULL,
    availablefrom bigint DEFAULT 0 NOT NULL,
    availableuntil bigint DEFAULT 0 NOT NULL,
    showavailability smallint DEFAULT 0 NOT NULL,
    groupingid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_course_sections OWNER TO innovaedu;

--
-- Name: TABLE mdl_course_sections; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_course_sections IS 'to define the sections for each course';


--
-- Name: mdl_course_sections_avail_fields; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_sections_avail_fields (
    id bigint NOT NULL,
    coursesectionid bigint NOT NULL,
    userfield character varying(50),
    customfieldid bigint,
    operator character varying(20) DEFAULT ''::character varying NOT NULL,
    value character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_course_sections_avail_fields OWNER TO innovaedu;

--
-- Name: mdl_course_sections_avail_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_sections_avail_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_sections_avail_fields_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_sections_avail_fields_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_sections_avail_fields_id_seq OWNED BY mdl_course_sections_avail_fields.id;


--
-- Name: mdl_course_sections_availability; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_course_sections_availability (
    id bigint NOT NULL,
    coursesectionid bigint NOT NULL,
    sourcecmid bigint,
    requiredcompletion smallint,
    gradeitemid bigint,
    grademin numeric(10,5),
    grademax numeric(10,5)
);


ALTER TABLE mdl_course_sections_availability OWNER TO innovaedu;

--
-- Name: mdl_course_sections_availability_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_course_sections_availability_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_course_sections_availability_id_seq OWNER TO innovaedu;

--
-- Name: mdl_course_sections_availability_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_course_sections_availability_id_seq OWNED BY mdl_course_sections_availability.id;


--
-- Name: mdl_cuodel_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_cuodel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cuodel_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_data (
    id bigint DEFAULT nextval('mdl_data_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    comments smallint DEFAULT 0 NOT NULL,
    timeavailablefrom bigint DEFAULT 0 NOT NULL,
    timeavailableto bigint DEFAULT 0 NOT NULL,
    timeviewfrom bigint DEFAULT 0 NOT NULL,
    timeviewto bigint DEFAULT 0 NOT NULL,
    requiredentries integer DEFAULT 0 NOT NULL,
    requiredentriestoview integer DEFAULT 0 NOT NULL,
    maxentries integer DEFAULT 0 NOT NULL,
    rssarticles smallint DEFAULT 0 NOT NULL,
    singletemplate text,
    listtemplate text,
    listtemplateheader text,
    listtemplatefooter text,
    addtemplate text,
    rsstemplate text,
    rsstitletemplate text,
    csstemplate text,
    jstemplate text,
    approval smallint DEFAULT 0 NOT NULL,
    scale bigint DEFAULT 0 NOT NULL,
    assessed bigint DEFAULT 0 NOT NULL,
    defaultsort bigint DEFAULT 0 NOT NULL,
    defaultsortdir smallint DEFAULT 0 NOT NULL,
    editany smallint DEFAULT 0 NOT NULL,
    notification bigint DEFAULT 0 NOT NULL,
    asearchtemplate text,
    catrec smallint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    assesstimestart bigint DEFAULT 0 NOT NULL,
    assesstimefinish bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_data OWNER TO innovaedu;

--
-- Name: TABLE mdl_data; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_data IS 'Removed ratings column';


--
-- Name: mdl_data_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_content_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_content_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_content_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_content; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_data_content (
    id bigint DEFAULT nextval('mdl_data_content_id_seq'::regclass) NOT NULL,
    fieldid bigint DEFAULT 0 NOT NULL,
    recordid bigint DEFAULT 0 NOT NULL,
    content text,
    content1 text,
    content2 text,
    content3 text,
    content4 text
);


ALTER TABLE mdl_data_content OWNER TO innovaedu;

--
-- Name: TABLE mdl_data_content; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_data_content IS 'the content introduced in each record/fields';


--
-- Name: mdl_data_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_fields_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_fields_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_fields; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_data_fields (
    id bigint DEFAULT nextval('mdl_data_fields_id_seq'::regclass) NOT NULL,
    dataid bigint DEFAULT 0 NOT NULL,
    type character varying(255) DEFAULT ''::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text NOT NULL,
    param1 text,
    param2 text,
    param3 text,
    param4 text,
    param5 text,
    param6 text,
    param7 text,
    param8 text,
    param9 text,
    param10 text
);


ALTER TABLE mdl_data_fields OWNER TO innovaedu;

--
-- Name: TABLE mdl_data_fields; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_data_fields IS 'every field available';


--
-- Name: mdl_data_ratings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_ratings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_ratings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_records_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_data_records_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_data_records_id_seq OWNER TO innovaedu;

--
-- Name: mdl_data_records; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_data_records (
    id bigint DEFAULT nextval('mdl_data_records_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    dataid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    approved smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_data_records OWNER TO innovaedu;

--
-- Name: TABLE mdl_data_records; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_data_records IS 'every record introduced';


--
-- Name: mdl_detusertutor_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_detusertutor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_detusertutor_id_seq OWNER TO innovaedu;

--
-- Name: mdl_dimdim_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_dimdim_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_dimdim_id_seq OWNER TO innovaedu;

--
-- Name: mdl_dimdim; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_dimdim (
    id bigint DEFAULT nextval('mdl_dimdim_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    keepdays bigint DEFAULT 0 NOT NULL,
    studentlogs smallint DEFAULT 0 NOT NULL,
    dimdimtime bigint DEFAULT 0 NOT NULL,
    schedule smallint DEFAULT 0 NOT NULL,
    confkey character varying(255) DEFAULT ''::character varying NOT NULL,
    emailuser character varying(255) DEFAULT ''::character varying NOT NULL,
    displayname character varying(255) DEFAULT ''::character varying NOT NULL,
    startnow character varying(255) DEFAULT ''::character varying NOT NULL,
    attendees character varying(255) DEFAULT ''::character varying NOT NULL,
    timezone character varying(255) DEFAULT ''::character varying NOT NULL,
    timestr character varying(255) DEFAULT ''::character varying NOT NULL,
    lobby character varying(255) DEFAULT ''::character varying NOT NULL,
    networkprofile smallint DEFAULT 0 NOT NULL,
    meetinghours smallint DEFAULT 0 NOT NULL,
    meetingminutes smallint DEFAULT 0 NOT NULL,
    maxparticipants smallint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    audiovideosettings smallint DEFAULT 0 NOT NULL,
    maxmikes smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_dimdim OWNER TO innovaedu;

--
-- Name: TABLE mdl_dimdim; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_dimdim IS 'Each of these is a dimdim room';


--
-- Name: mdl_enrol; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_enrol (
    id bigint NOT NULL,
    enrol character varying(20) DEFAULT ''::character varying NOT NULL,
    status bigint DEFAULT 0 NOT NULL,
    courseid bigint NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    name character varying(255),
    enrolperiod bigint DEFAULT 0,
    enrolstartdate bigint DEFAULT 0,
    enrolenddate bigint DEFAULT 0,
    expirynotify smallint DEFAULT 0,
    expirythreshold bigint DEFAULT 0,
    notifyall smallint DEFAULT 0,
    password character varying(50),
    cost character varying(20),
    currency character varying(3),
    roleid bigint DEFAULT 0,
    customint1 bigint,
    customint2 bigint,
    customint3 bigint,
    customint4 bigint,
    customchar1 character varying(255),
    customchar2 character varying(255),
    customdec1 numeric(12,7),
    customdec2 numeric(12,7),
    customtext1 text,
    customtext2 text,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    customint5 bigint,
    customint6 bigint,
    customint7 bigint,
    customint8 bigint,
    customchar3 character varying(1333),
    customtext3 text,
    customtext4 text
);


ALTER TABLE mdl_enrol OWNER TO innovaedu;

--
-- Name: mdl_enrol_authorize_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_enrol_authorize_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_enrol_authorize_id_seq OWNER TO innovaedu;

--
-- Name: mdl_enrol_authorize; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_enrol_authorize (
    id bigint DEFAULT nextval('mdl_enrol_authorize_id_seq'::regclass) NOT NULL,
    paymentmethod character varying(6) DEFAULT 'cc'::character varying NOT NULL,
    refundinfo smallint DEFAULT 0 NOT NULL,
    ccname character varying(255) DEFAULT ''::character varying NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    status bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    settletime bigint DEFAULT 0 NOT NULL,
    amount character varying(10) DEFAULT ''::character varying NOT NULL,
    currency character varying(3) DEFAULT 'USD'::character varying NOT NULL,
    transid bigint DEFAULT 0 NOT NULL,
    instanceid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_enrol_authorize OWNER TO innovaedu;

--
-- Name: TABLE mdl_enrol_authorize; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_enrol_authorize IS 'Holds all known information about authorize.net transactions';


--
-- Name: mdl_enrol_authorize_refunds_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_enrol_authorize_refunds_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_enrol_authorize_refunds_id_seq OWNER TO innovaedu;

--
-- Name: mdl_enrol_authorize_refunds; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_enrol_authorize_refunds (
    id bigint DEFAULT nextval('mdl_enrol_authorize_refunds_id_seq'::regclass) NOT NULL,
    orderid bigint DEFAULT 0 NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    amount character varying(10) DEFAULT ''::character varying NOT NULL,
    settletime bigint DEFAULT 0 NOT NULL,
    transid bigint DEFAULT 0
);


ALTER TABLE mdl_enrol_authorize_refunds OWNER TO innovaedu;

--
-- Name: TABLE mdl_enrol_authorize_refunds; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_enrol_authorize_refunds IS 'Authorize.net refunds';


--
-- Name: mdl_enrol_flatfile; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_enrol_flatfile (
    id bigint NOT NULL,
    action character varying(30) DEFAULT ''::character varying NOT NULL,
    roleid bigint NOT NULL,
    userid bigint NOT NULL,
    courseid bigint NOT NULL,
    timestart bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_enrol_flatfile OWNER TO innovaedu;

--
-- Name: TABLE mdl_enrol_flatfile; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_enrol_flatfile IS 'enrol_flatfile table retrofitted from MySQL';


--
-- Name: mdl_enrol_flatfile_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_enrol_flatfile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_enrol_flatfile_id_seq OWNER TO innovaedu;

--
-- Name: mdl_enrol_flatfile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_enrol_flatfile_id_seq OWNED BY mdl_enrol_flatfile.id;


--
-- Name: mdl_enrol_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_enrol_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_enrol_id_seq OWNER TO innovaedu;

--
-- Name: mdl_enrol_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_enrol_id_seq OWNED BY mdl_enrol.id;


--
-- Name: mdl_enrol_paypal_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_enrol_paypal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_enrol_paypal_id_seq OWNER TO innovaedu;

--
-- Name: mdl_enrol_paypal; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_enrol_paypal (
    id bigint DEFAULT nextval('mdl_enrol_paypal_id_seq'::regclass) NOT NULL,
    business character varying(255) DEFAULT ''::character varying NOT NULL,
    receiver_email character varying(255) DEFAULT ''::character varying NOT NULL,
    receiver_id character varying(255) DEFAULT ''::character varying NOT NULL,
    item_name character varying(255) DEFAULT ''::character varying NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    memo character varying(255) DEFAULT ''::character varying NOT NULL,
    tax character varying(255) DEFAULT ''::character varying NOT NULL,
    option_name1 character varying(255) DEFAULT ''::character varying NOT NULL,
    option_selection1_x character varying(255) DEFAULT ''::character varying NOT NULL,
    option_name2 character varying(255) DEFAULT ''::character varying NOT NULL,
    option_selection2_x character varying(255) DEFAULT ''::character varying NOT NULL,
    payment_status character varying(255) DEFAULT ''::character varying NOT NULL,
    pending_reason character varying(255) DEFAULT ''::character varying NOT NULL,
    reason_code character varying(30) DEFAULT ''::character varying NOT NULL,
    txn_id character varying(255) DEFAULT ''::character varying NOT NULL,
    parent_txn_id character varying(255) DEFAULT ''::character varying NOT NULL,
    payment_type character varying(30) DEFAULT ''::character varying NOT NULL,
    timeupdated bigint DEFAULT 0 NOT NULL,
    instanceid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_enrol_paypal OWNER TO innovaedu;

--
-- Name: TABLE mdl_enrol_paypal; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_enrol_paypal IS 'Holds all known information about PayPal transactions';


--
-- Name: mdl_entidades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_entidades (
    id integer NOT NULL,
    name character varying(100)
);


ALTER TABLE mdl_entidades OWNER TO innovaedu;

--
-- Name: mdl_entidades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_entidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_entidades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_entidades_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_entidades_id_seq OWNED BY mdl_entidades.id;


--
-- Name: mdl_evatutor_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_evatutor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_evatutor_id_seq OWNER TO innovaedu;

--
-- Name: mdl_event_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_event_id_seq OWNER TO innovaedu;

--
-- Name: mdl_event; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_event (
    id bigint DEFAULT nextval('mdl_event_id_seq'::regclass) NOT NULL,
    name text NOT NULL,
    description text NOT NULL,
    format smallint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    repeatid bigint DEFAULT 0 NOT NULL,
    modulename character varying(20) DEFAULT ''::character varying NOT NULL,
    instance bigint DEFAULT 0 NOT NULL,
    eventtype character varying(20) DEFAULT ''::character varying NOT NULL,
    timestart bigint DEFAULT 0 NOT NULL,
    timeduration bigint DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 1 NOT NULL,
    uuid character varying(255) DEFAULT ''::character varying NOT NULL,
    sequence bigint DEFAULT 1 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    subscriptionid bigint
);


ALTER TABLE mdl_event OWNER TO innovaedu;

--
-- Name: TABLE mdl_event; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_event IS 'For everything with a time associated to it';


--
-- Name: mdl_event_subscriptions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_event_subscriptions (
    id bigint NOT NULL,
    url character varying(255) DEFAULT ''::character varying NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    pollinterval bigint DEFAULT 0 NOT NULL,
    lastupdated bigint,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    eventtype character varying(20) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_event_subscriptions OWNER TO innovaedu;

--
-- Name: mdl_event_subscriptions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_event_subscriptions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_event_subscriptions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_event_subscriptions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_event_subscriptions_id_seq OWNED BY mdl_event_subscriptions.id;


--
-- Name: mdl_events_handlers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_events_handlers (
    id bigint NOT NULL,
    eventname character varying(166) DEFAULT ''::character varying NOT NULL,
    component character varying(166) DEFAULT ''::character varying NOT NULL,
    handlerfile character varying(255) DEFAULT ''::character varying NOT NULL,
    handlerfunction text,
    schedule character varying(255),
    status bigint DEFAULT 0 NOT NULL,
    internal smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_events_handlers OWNER TO innovaedu;

--
-- Name: mdl_events_handlers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_events_handlers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_events_handlers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_events_handlers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_events_handlers_id_seq OWNED BY mdl_events_handlers.id;


--
-- Name: mdl_events_queue; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_events_queue (
    id bigint NOT NULL,
    eventdata text NOT NULL,
    stackdump text,
    userid bigint,
    timecreated bigint NOT NULL
);


ALTER TABLE mdl_events_queue OWNER TO innovaedu;

--
-- Name: mdl_events_queue_handlers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_events_queue_handlers (
    id bigint NOT NULL,
    queuedeventid bigint NOT NULL,
    handlerid bigint NOT NULL,
    status bigint,
    errormessage text,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_events_queue_handlers OWNER TO innovaedu;

--
-- Name: mdl_events_queue_handlers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_events_queue_handlers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_events_queue_handlers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_events_queue_handlers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_events_queue_handlers_id_seq OWNED BY mdl_events_queue_handlers.id;


--
-- Name: mdl_events_queue_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_events_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_events_queue_id_seq OWNER TO innovaedu;

--
-- Name: mdl_events_queue_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_events_queue_id_seq OWNED BY mdl_events_queue.id;


--
-- Name: mdl_external_functions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_external_functions (
    id bigint NOT NULL,
    name character varying(200) DEFAULT ''::character varying NOT NULL,
    classname character varying(100) DEFAULT ''::character varying NOT NULL,
    methodname character varying(100) DEFAULT ''::character varying NOT NULL,
    classpath character varying(255),
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    capabilities character varying(255)
);


ALTER TABLE mdl_external_functions OWNER TO innovaedu;

--
-- Name: mdl_external_functions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_external_functions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_external_functions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_external_functions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_external_functions_id_seq OWNED BY mdl_external_functions.id;


--
-- Name: mdl_external_services; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_external_services (
    id bigint NOT NULL,
    name character varying(200) DEFAULT ''::character varying NOT NULL,
    enabled smallint NOT NULL,
    requiredcapability character varying(150),
    restrictedusers smallint NOT NULL,
    component character varying(100),
    timecreated bigint NOT NULL,
    timemodified bigint,
    shortname character varying(255),
    downloadfiles smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_external_services OWNER TO innovaedu;

--
-- Name: mdl_external_services_functions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_external_services_functions (
    id bigint NOT NULL,
    externalserviceid bigint NOT NULL,
    functionname character varying(200) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_external_services_functions OWNER TO innovaedu;

--
-- Name: mdl_external_services_functions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_external_services_functions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_external_services_functions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_external_services_functions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_external_services_functions_id_seq OWNED BY mdl_external_services_functions.id;


--
-- Name: mdl_external_services_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_external_services_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_external_services_id_seq OWNER TO innovaedu;

--
-- Name: mdl_external_services_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_external_services_id_seq OWNED BY mdl_external_services.id;


--
-- Name: mdl_external_services_users; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_external_services_users (
    id bigint NOT NULL,
    externalserviceid bigint NOT NULL,
    userid bigint NOT NULL,
    iprestriction character varying(255),
    validuntil bigint,
    timecreated bigint
);


ALTER TABLE mdl_external_services_users OWNER TO innovaedu;

--
-- Name: mdl_external_services_users_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_external_services_users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_external_services_users_id_seq OWNER TO innovaedu;

--
-- Name: mdl_external_services_users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_external_services_users_id_seq OWNED BY mdl_external_services_users.id;


--
-- Name: mdl_external_tokens; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_external_tokens (
    id bigint NOT NULL,
    token character varying(128) DEFAULT ''::character varying NOT NULL,
    tokentype smallint NOT NULL,
    userid bigint NOT NULL,
    externalserviceid bigint NOT NULL,
    sid character varying(128),
    contextid bigint NOT NULL,
    creatorid bigint DEFAULT 1 NOT NULL,
    iprestriction character varying(255),
    validuntil bigint,
    timecreated bigint NOT NULL,
    lastaccess bigint
);


ALTER TABLE mdl_external_tokens OWNER TO innovaedu;

--
-- Name: mdl_external_tokens_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_external_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_external_tokens_id_seq OWNER TO innovaedu;

--
-- Name: mdl_external_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_external_tokens_id_seq OWNED BY mdl_external_tokens.id;


--
-- Name: mdl_feedback; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    anonymous smallint DEFAULT 1 NOT NULL,
    email_notification smallint DEFAULT 1 NOT NULL,
    multiple_submit smallint DEFAULT 1 NOT NULL,
    autonumbering smallint DEFAULT 1 NOT NULL,
    site_after_submit character varying(255) DEFAULT ''::character varying NOT NULL,
    page_after_submit text NOT NULL,
    page_after_submitformat smallint DEFAULT 0 NOT NULL,
    publish_stats smallint DEFAULT 0 NOT NULL,
    timeopen bigint DEFAULT 0 NOT NULL,
    timeclose bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    completionsubmit smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_feedback OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback IS 'all feedbacks';


--
-- Name: mdl_feedback_completed; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_completed (
    id bigint NOT NULL,
    feedback bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    random_response bigint DEFAULT 0 NOT NULL,
    anonymous_response smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_feedback_completed OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_completed; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_completed IS 'filled out feedback';


--
-- Name: mdl_feedback_completed_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_completed_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_completed_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_completed_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_completed_id_seq OWNED BY mdl_feedback_completed.id;


--
-- Name: mdl_feedback_completedtmp; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_completedtmp (
    id bigint NOT NULL,
    feedback bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    guestid character varying(255) DEFAULT ''::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    random_response bigint DEFAULT 0 NOT NULL,
    anonymous_response smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_feedback_completedtmp OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_completedtmp; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_completedtmp IS 'filled out feedback';


--
-- Name: mdl_feedback_completedtmp_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_completedtmp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_completedtmp_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_completedtmp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_completedtmp_id_seq OWNED BY mdl_feedback_completedtmp.id;


--
-- Name: mdl_feedback_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_id_seq OWNED BY mdl_feedback.id;


--
-- Name: mdl_feedback_item; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_item (
    id bigint NOT NULL,
    feedback bigint DEFAULT 0 NOT NULL,
    template bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    label character varying(255) DEFAULT ''::character varying NOT NULL,
    presentation text NOT NULL,
    typ character varying(255) DEFAULT ''::character varying NOT NULL,
    hasvalue smallint DEFAULT 0 NOT NULL,
    "position" smallint DEFAULT 0 NOT NULL,
    required smallint DEFAULT 0 NOT NULL,
    dependitem bigint DEFAULT 0 NOT NULL,
    dependvalue character varying(255) DEFAULT ''::character varying NOT NULL,
    options character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_feedback_item OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_item; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_item IS 'feedback_items';


--
-- Name: mdl_feedback_item_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_item_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_item_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_item_id_seq OWNED BY mdl_feedback_item.id;


--
-- Name: mdl_feedback_sitecourse_map; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_sitecourse_map (
    id bigint NOT NULL,
    feedbackid bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_feedback_sitecourse_map OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_sitecourse_map; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_sitecourse_map IS 'feedback sitecourse map';


--
-- Name: mdl_feedback_sitecourse_map_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_sitecourse_map_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_sitecourse_map_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_sitecourse_map_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_sitecourse_map_id_seq OWNED BY mdl_feedback_sitecourse_map.id;


--
-- Name: mdl_feedback_template; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_template (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    ispublic smallint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_feedback_template OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_template; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_template IS 'templates of feedbackstructures';


--
-- Name: mdl_feedback_template_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_template_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_template_id_seq OWNED BY mdl_feedback_template.id;


--
-- Name: mdl_feedback_tracking; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_tracking (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    feedback bigint DEFAULT 0 NOT NULL,
    completed bigint DEFAULT 0 NOT NULL,
    tmp_completed bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_feedback_tracking OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_tracking; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_tracking IS 'feedback trackingdata';


--
-- Name: mdl_feedback_tracking_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_tracking_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_tracking_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_tracking_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_tracking_id_seq OWNED BY mdl_feedback_tracking.id;


--
-- Name: mdl_feedback_value; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_value (
    id bigint NOT NULL,
    course_id bigint DEFAULT 0 NOT NULL,
    item bigint DEFAULT 0 NOT NULL,
    completed bigint DEFAULT 0 NOT NULL,
    tmp_completed bigint DEFAULT 0 NOT NULL,
    value text NOT NULL
);


ALTER TABLE mdl_feedback_value OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_value; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_value IS 'values of the completeds';


--
-- Name: mdl_feedback_value_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_value_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_value_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_value_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_value_id_seq OWNED BY mdl_feedback_value.id;


--
-- Name: mdl_feedback_valuetmp; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_feedback_valuetmp (
    id bigint NOT NULL,
    course_id bigint DEFAULT 0 NOT NULL,
    item bigint DEFAULT 0 NOT NULL,
    completed bigint DEFAULT 0 NOT NULL,
    tmp_completed bigint DEFAULT 0 NOT NULL,
    value text NOT NULL
);


ALTER TABLE mdl_feedback_valuetmp OWNER TO innovaedu;

--
-- Name: TABLE mdl_feedback_valuetmp; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_feedback_valuetmp IS 'values of the completedstmp';


--
-- Name: mdl_feedback_valuetmp_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_feedback_valuetmp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_feedback_valuetmp_id_seq OWNER TO innovaedu;

--
-- Name: mdl_feedback_valuetmp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_feedback_valuetmp_id_seq OWNED BY mdl_feedback_valuetmp.id;


--
-- Name: mdl_files; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_files (
    id bigint NOT NULL,
    contenthash character varying(40) DEFAULT ''::character varying NOT NULL,
    pathnamehash character varying(40) DEFAULT ''::character varying NOT NULL,
    contextid bigint NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    filearea character varying(50) DEFAULT ''::character varying NOT NULL,
    itemid bigint NOT NULL,
    filepath character varying(255) DEFAULT ''::character varying NOT NULL,
    filename character varying(255) DEFAULT ''::character varying NOT NULL,
    userid bigint,
    filesize bigint NOT NULL,
    mimetype character varying(100),
    status bigint DEFAULT 0 NOT NULL,
    source text,
    author character varying(255),
    license character varying(255),
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    referencefileid bigint,
    referencelastsync bigint,
    referencelifetime bigint
);


ALTER TABLE mdl_files OWNER TO innovaedu;

--
-- Name: mdl_files_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_files_id_seq OWNER TO innovaedu;

--
-- Name: mdl_files_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_files_id_seq OWNED BY mdl_files.id;


--
-- Name: mdl_files_reference; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_files_reference (
    id bigint NOT NULL,
    repositoryid bigint NOT NULL,
    lastsync bigint,
    lifetime bigint,
    reference text,
    referencehash character varying(40) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_files_reference OWNER TO innovaedu;

--
-- Name: mdl_files_reference_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_files_reference_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_files_reference_id_seq OWNER TO innovaedu;

--
-- Name: mdl_files_reference_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_files_reference_id_seq OWNED BY mdl_files_reference.id;


--
-- Name: mdl_filter_active; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_filter_active (
    id bigint NOT NULL,
    filter character varying(32) DEFAULT ''::character varying NOT NULL,
    contextid bigint NOT NULL,
    active smallint NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_filter_active OWNER TO innovaedu;

--
-- Name: mdl_filter_active_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_filter_active_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_filter_active_id_seq OWNER TO innovaedu;

--
-- Name: mdl_filter_active_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_filter_active_id_seq OWNED BY mdl_filter_active.id;


--
-- Name: mdl_filter_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_filter_config (
    id bigint NOT NULL,
    filter character varying(32) DEFAULT ''::character varying NOT NULL,
    contextid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_filter_config OWNER TO innovaedu;

--
-- Name: mdl_filter_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_filter_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_filter_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_filter_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_filter_config_id_seq OWNED BY mdl_filter_config.id;


--
-- Name: mdl_folder; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_folder (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    display smallint DEFAULT 0 NOT NULL,
    showexpanded smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_folder OWNER TO innovaedu;

--
-- Name: TABLE mdl_folder; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_folder IS 'each record is one folder resource';


--
-- Name: mdl_folder_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_folder_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_folder_id_seq OWNER TO innovaedu;

--
-- Name: mdl_folder_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_folder_id_seq OWNED BY folder.id;


--
-- Name: mdl_folder_id_seq1; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_folder_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_folder_id_seq1 OWNER TO innovaedu;

--
-- Name: mdl_folder_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_folder_id_seq1 OWNED BY mdl_folder.id;


--
-- Name: mdl_formacion_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_formacion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_formacion_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum (
    id bigint DEFAULT nextval('mdl_forum_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    type character varying(20) DEFAULT 'general'::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    assessed bigint DEFAULT 0 NOT NULL,
    assesstimestart bigint DEFAULT 0 NOT NULL,
    assesstimefinish bigint DEFAULT 0 NOT NULL,
    scale bigint DEFAULT 0 NOT NULL,
    maxbytes bigint DEFAULT 0 NOT NULL,
    forcesubscribe smallint DEFAULT 0 NOT NULL,
    trackingtype smallint DEFAULT 1 NOT NULL,
    rsstype smallint DEFAULT 0 NOT NULL,
    rssarticles smallint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    warnafter bigint DEFAULT 0 NOT NULL,
    blockafter bigint DEFAULT 0 NOT NULL,
    blockperiod bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    completiondiscussions integer DEFAULT 0 NOT NULL,
    completionreplies integer DEFAULT 0 NOT NULL,
    completionposts integer DEFAULT 0 NOT NULL,
    maxattachments bigint DEFAULT 1 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    displaywordcount smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum IS 'Forums contain and structure discussion';


--
-- Name: mdl_forum_discussions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_discussions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_discussions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_discussions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_discussions (
    id bigint DEFAULT nextval('mdl_forum_discussions_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    forum bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    firstpost bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT (-1) NOT NULL,
    assessed smallint DEFAULT 1 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    usermodified bigint DEFAULT 0 NOT NULL,
    timestart bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_discussions OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_discussions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_discussions IS 'Forums are composed of discussions';


--
-- Name: mdl_forum_posts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_posts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_posts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_posts (
    id bigint DEFAULT nextval('mdl_forum_posts_id_seq'::regclass) NOT NULL,
    discussion bigint DEFAULT 0 NOT NULL,
    parent bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    created bigint DEFAULT 0 NOT NULL,
    modified bigint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL,
    subject character varying(255) DEFAULT ''::character varying NOT NULL,
    message text NOT NULL,
    messageformat smallint DEFAULT 0 NOT NULL,
    attachment character varying(100) DEFAULT ''::character varying NOT NULL,
    totalscore smallint DEFAULT 0 NOT NULL,
    mailnow bigint DEFAULT 0 NOT NULL,
    messagetrust smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_posts OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_posts; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_posts IS 'All posts are stored in this table';


--
-- Name: mdl_forum_queue_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_queue_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_queue; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_queue (
    id bigint DEFAULT nextval('mdl_forum_queue_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    discussionid bigint DEFAULT 0 NOT NULL,
    postid bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_queue OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_queue; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_queue IS 'For keeping track of posts that will be mailed in digest form';


--
-- Name: mdl_forum_ratings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_ratings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_ratings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_read_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_read_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_read_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_read; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_read (
    id bigint DEFAULT nextval('mdl_forum_read_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    forumid bigint DEFAULT 0 NOT NULL,
    discussionid bigint DEFAULT 0 NOT NULL,
    postid bigint DEFAULT 0 NOT NULL,
    firstread bigint DEFAULT 0 NOT NULL,
    lastread bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_read OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_read; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_read IS 'Tracks each users read posts';


--
-- Name: mdl_forum_subscriptions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_subscriptions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_subscriptions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_subscriptions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_subscriptions (
    id bigint DEFAULT nextval('mdl_forum_subscriptions_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    forum bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_subscriptions OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_subscriptions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_subscriptions IS 'Keeps track of who is subscribed to what forum';


--
-- Name: mdl_forum_track_prefs_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_forum_track_prefs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_forum_track_prefs_id_seq OWNER TO innovaedu;

--
-- Name: mdl_forum_track_prefs; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_forum_track_prefs (
    id bigint DEFAULT nextval('mdl_forum_track_prefs_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    forumid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_forum_track_prefs OWNER TO innovaedu;

--
-- Name: TABLE mdl_forum_track_prefs; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_forum_track_prefs IS 'Tracks each users untracked forums';


--
-- Name: mdl_glossary_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary (
    id bigint DEFAULT nextval('mdl_glossary_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    allowduplicatedentries smallint DEFAULT 0 NOT NULL,
    displayformat character varying(50) DEFAULT 'dictionary'::character varying NOT NULL,
    mainglossary smallint DEFAULT 0 NOT NULL,
    showspecial smallint DEFAULT 1 NOT NULL,
    showalphabet smallint DEFAULT 1 NOT NULL,
    showall smallint DEFAULT 1 NOT NULL,
    allowcomments smallint DEFAULT 0 NOT NULL,
    allowprintview smallint DEFAULT 1 NOT NULL,
    usedynalink smallint DEFAULT 1 NOT NULL,
    defaultapproval smallint DEFAULT 1 NOT NULL,
    globalglossary smallint DEFAULT 0 NOT NULL,
    entbypage smallint DEFAULT 10 NOT NULL,
    editalways smallint DEFAULT 0 NOT NULL,
    rsstype smallint DEFAULT 0 NOT NULL,
    rssarticles smallint DEFAULT 0 NOT NULL,
    assessed bigint DEFAULT 0 NOT NULL,
    assesstimestart bigint DEFAULT 0 NOT NULL,
    assesstimefinish bigint DEFAULT 0 NOT NULL,
    scale bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    completionentries integer DEFAULT 0 NOT NULL,
    approvaldisplayformat character varying(50) DEFAULT 'default'::character varying NOT NULL
);


ALTER TABLE mdl_glossary OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary IS 'all glossaries';


--
-- Name: mdl_glossary_alias_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_alias_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_alias_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_alias; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary_alias (
    id bigint DEFAULT nextval('mdl_glossary_alias_id_seq'::regclass) NOT NULL,
    entryid bigint DEFAULT 0 NOT NULL,
    alias character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_glossary_alias OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary_alias; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary_alias IS 'entries alias';


--
-- Name: mdl_glossary_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_categories_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_categories; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary_categories (
    id bigint DEFAULT nextval('mdl_glossary_categories_id_seq'::regclass) NOT NULL,
    glossaryid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    usedynalink smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_glossary_categories OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary_categories; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary_categories IS 'all categories for glossary entries';


--
-- Name: mdl_glossary_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_entries_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_entries; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary_entries (
    id bigint DEFAULT nextval('mdl_glossary_entries_id_seq'::regclass) NOT NULL,
    glossaryid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    concept character varying(255) DEFAULT ''::character varying NOT NULL,
    definition text NOT NULL,
    definitionformat smallint DEFAULT 0 NOT NULL,
    attachment character varying(100) DEFAULT ''::character varying NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    teacherentry smallint DEFAULT 0 NOT NULL,
    sourceglossaryid bigint DEFAULT 0 NOT NULL,
    usedynalink smallint DEFAULT 1 NOT NULL,
    casesensitive smallint DEFAULT 0 NOT NULL,
    fullmatch smallint DEFAULT 1 NOT NULL,
    approved smallint DEFAULT 1 NOT NULL,
    definitiontrust smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_glossary_entries OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary_entries; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary_entries IS 'all glossary entries';


--
-- Name: mdl_glossary_entries_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_entries_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_entries_categories_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_entries_categories; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary_entries_categories (
    id bigint DEFAULT nextval('mdl_glossary_entries_categories_id_seq'::regclass) NOT NULL,
    categoryid bigint DEFAULT 0 NOT NULL,
    entryid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_glossary_entries_categories OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary_entries_categories; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary_entries_categories IS 'categories of each glossary entry';


--
-- Name: mdl_glossary_formats_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_formats_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_formats_id_seq OWNER TO innovaedu;

--
-- Name: mdl_glossary_formats; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_glossary_formats (
    id bigint DEFAULT nextval('mdl_glossary_formats_id_seq'::regclass) NOT NULL,
    name character varying(50) DEFAULT ''::character varying NOT NULL,
    popupformatname character varying(50) DEFAULT ''::character varying NOT NULL,
    visible smallint DEFAULT 1 NOT NULL,
    showgroup smallint DEFAULT 1 NOT NULL,
    defaultmode character varying(50) DEFAULT ''::character varying NOT NULL,
    defaulthook character varying(50) DEFAULT ''::character varying NOT NULL,
    sortkey character varying(50) DEFAULT ''::character varying NOT NULL,
    sortorder character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_glossary_formats OWNER TO innovaedu;

--
-- Name: TABLE mdl_glossary_formats; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_glossary_formats IS 'Setting of the display formats';


--
-- Name: mdl_glossary_ratings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_glossary_ratings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_glossary_ratings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_categories_history; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_categories_history (
    id bigint NOT NULL,
    action bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    source character varying(255),
    timemodified bigint,
    loggeduser bigint,
    courseid bigint NOT NULL,
    parent bigint,
    depth bigint DEFAULT 0 NOT NULL,
    path character varying(255),
    fullname character varying(255) DEFAULT ''::character varying NOT NULL,
    aggregation bigint DEFAULT 0 NOT NULL,
    keephigh bigint DEFAULT 0 NOT NULL,
    droplow bigint DEFAULT 0 NOT NULL,
    aggregateonlygraded smallint DEFAULT 0 NOT NULL,
    aggregateoutcomes smallint DEFAULT 0 NOT NULL,
    aggregatesubcats smallint DEFAULT 0 NOT NULL,
    hidden smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_categories_history OWNER TO innovaedu;

--
-- Name: mdl_grade_categories_history_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_categories_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_categories_history_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_categories_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_categories_history_id_seq OWNED BY mdl_grade_categories_history.id;


--
-- Name: mdl_grade_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_categories_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_categories_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_categories_id_seq OWNED BY mdl_grade_categories.id;


--
-- Name: mdl_grade_category_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_category_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_exceptions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_exceptions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_exceptions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_grades_history; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_grades_history (
    id bigint NOT NULL,
    action bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    source character varying(255),
    timemodified bigint,
    loggeduser bigint,
    itemid bigint NOT NULL,
    userid bigint NOT NULL,
    rawgrade numeric(10,5),
    rawgrademax numeric(10,5) DEFAULT 100 NOT NULL,
    rawgrademin numeric(10,5) DEFAULT 0 NOT NULL,
    rawscaleid bigint,
    usermodified bigint,
    finalgrade numeric(10,5),
    hidden bigint DEFAULT 0 NOT NULL,
    locked bigint DEFAULT 0 NOT NULL,
    locktime bigint DEFAULT 0 NOT NULL,
    exported bigint DEFAULT 0 NOT NULL,
    overridden bigint DEFAULT 0 NOT NULL,
    excluded bigint DEFAULT 0 NOT NULL,
    feedback text,
    feedbackformat bigint DEFAULT 0 NOT NULL,
    information text,
    informationformat bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_grades_history OWNER TO innovaedu;

--
-- Name: mdl_grade_grades_history_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_grades_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_grades_history_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_grades_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_grades_history_id_seq OWNED BY mdl_grade_grades_history.id;


--
-- Name: mdl_grade_grades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_grades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_grades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_grades_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_grades_id_seq OWNED BY mdl_grade_grades.id;


--
-- Name: mdl_grade_import_newitem; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_import_newitem (
    id bigint NOT NULL,
    itemname character varying(255) DEFAULT ''::character varying NOT NULL,
    importcode bigint NOT NULL,
    importer bigint NOT NULL
);


ALTER TABLE mdl_grade_import_newitem OWNER TO innovaedu;

--
-- Name: mdl_grade_import_newitem_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_import_newitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_import_newitem_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_import_newitem_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_import_newitem_id_seq OWNED BY mdl_grade_import_newitem.id;


--
-- Name: mdl_grade_import_values; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_import_values (
    id bigint NOT NULL,
    itemid bigint,
    newgradeitem bigint,
    userid bigint NOT NULL,
    finalgrade numeric(10,5),
    feedback text,
    importcode bigint NOT NULL,
    importer bigint
);


ALTER TABLE mdl_grade_import_values OWNER TO innovaedu;

--
-- Name: mdl_grade_import_values_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_import_values_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_import_values_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_import_values_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_import_values_id_seq OWNED BY mdl_grade_import_values.id;


--
-- Name: mdl_grade_item_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_item_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_item_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_items_history; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_items_history (
    id bigint NOT NULL,
    action bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    source character varying(255),
    timemodified bigint,
    loggeduser bigint,
    courseid bigint,
    categoryid bigint,
    itemname character varying(255),
    itemtype character varying(30) DEFAULT ''::character varying NOT NULL,
    itemmodule character varying(30),
    iteminstance bigint,
    itemnumber bigint,
    iteminfo text,
    idnumber character varying(255),
    calculation text,
    gradetype smallint DEFAULT 1 NOT NULL,
    grademax numeric(10,5) DEFAULT 100 NOT NULL,
    grademin numeric(10,5) DEFAULT 0 NOT NULL,
    scaleid bigint,
    outcomeid bigint,
    gradepass numeric(10,5) DEFAULT 0 NOT NULL,
    multfactor numeric(10,5) DEFAULT 1.0 NOT NULL,
    plusfactor numeric(10,5) DEFAULT 0 NOT NULL,
    aggregationcoef numeric(10,5) DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    display bigint DEFAULT 0 NOT NULL,
    decimals smallint,
    hidden bigint DEFAULT 0 NOT NULL,
    locked bigint DEFAULT 0 NOT NULL,
    locktime bigint DEFAULT 0 NOT NULL,
    needsupdate bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_items_history OWNER TO innovaedu;

--
-- Name: mdl_grade_items_history_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_items_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_items_history_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_items_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_items_history_id_seq OWNED BY mdl_grade_items_history.id;


--
-- Name: mdl_grade_items_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_items_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_items_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_items_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_items_id_seq OWNED BY mdl_grade_items.id;


--
-- Name: mdl_grade_letters_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_letters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_letters_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_letters; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_letters (
    id bigint DEFAULT nextval('mdl_grade_letters_id_seq'::regclass) NOT NULL,
    contextid bigint DEFAULT 0 NOT NULL,
    lowerboundary numeric(10,5) NOT NULL,
    letter character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_grade_letters OWNER TO innovaedu;

--
-- Name: TABLE mdl_grade_letters; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_grade_letters IS 'to convert numerical grades to letter grades';


--
-- Name: mdl_grade_outcomes; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_outcomes (
    id bigint NOT NULL,
    courseid bigint,
    shortname character varying(255) DEFAULT ''::character varying NOT NULL,
    fullname text NOT NULL,
    scaleid bigint,
    description text,
    timecreated bigint,
    timemodified bigint,
    usermodified bigint,
    descriptionformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_outcomes OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_courses; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_outcomes_courses (
    id bigint NOT NULL,
    courseid bigint NOT NULL,
    outcomeid bigint NOT NULL
);


ALTER TABLE mdl_grade_outcomes_courses OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_courses_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_outcomes_courses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_outcomes_courses_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_courses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_outcomes_courses_id_seq OWNED BY mdl_grade_outcomes_courses.id;


--
-- Name: mdl_grade_outcomes_history; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_outcomes_history (
    id bigint NOT NULL,
    action bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    source character varying(255),
    timemodified bigint,
    loggeduser bigint,
    courseid bigint,
    shortname character varying(255) DEFAULT ''::character varying NOT NULL,
    fullname text NOT NULL,
    scaleid bigint,
    description text,
    descriptionformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_grade_outcomes_history OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_history_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_outcomes_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_outcomes_history_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_outcomes_history_id_seq OWNED BY mdl_grade_outcomes_history.id;


--
-- Name: mdl_grade_outcomes_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_outcomes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_outcomes_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_outcomes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_outcomes_id_seq OWNED BY mdl_grade_outcomes.id;


--
-- Name: mdl_grade_preferences_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_preferences_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_preferences_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_settings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grade_settings (
    id bigint NOT NULL,
    courseid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_grade_settings OWNER TO innovaedu;

--
-- Name: mdl_grade_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grade_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grade_settings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grade_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grade_settings_id_seq OWNED BY mdl_grade_settings.id;


--
-- Name: mdl_grading_areas; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grading_areas (
    id bigint NOT NULL,
    contextid bigint NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    areaname character varying(100) DEFAULT ''::character varying NOT NULL,
    activemethod character varying(100)
);


ALTER TABLE mdl_grading_areas OWNER TO innovaedu;

--
-- Name: mdl_grading_areas_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grading_areas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grading_areas_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grading_areas_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grading_areas_id_seq OWNED BY mdl_grading_areas.id;


--
-- Name: mdl_grading_definitions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grading_definitions (
    id bigint NOT NULL,
    areaid bigint NOT NULL,
    method character varying(100) DEFAULT ''::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    descriptionformat smallint,
    status bigint DEFAULT 0 NOT NULL,
    copiedfromid bigint,
    timecreated bigint NOT NULL,
    usercreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    usermodified bigint NOT NULL,
    timecopied bigint DEFAULT 0,
    options text
);


ALTER TABLE mdl_grading_definitions OWNER TO innovaedu;

--
-- Name: mdl_grading_definitions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grading_definitions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grading_definitions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grading_definitions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grading_definitions_id_seq OWNED BY mdl_grading_definitions.id;


--
-- Name: mdl_grading_instances; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_grading_instances (
    id bigint NOT NULL,
    definitionid bigint NOT NULL,
    raterid bigint NOT NULL,
    itemid bigint,
    rawgrade numeric(10,5),
    status bigint DEFAULT 0 NOT NULL,
    feedback text,
    feedbackformat smallint,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_grading_instances OWNER TO innovaedu;

--
-- Name: mdl_grading_instances_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_grading_instances_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_grading_instances_id_seq OWNER TO innovaedu;

--
-- Name: mdl_grading_instances_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_grading_instances_id_seq OWNED BY mdl_grading_instances.id;


--
-- Name: mdl_gradingform_guide_comments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_guide_comments (
    id bigint NOT NULL,
    definitionid bigint NOT NULL,
    sortorder bigint NOT NULL,
    description text,
    descriptionformat smallint
);


ALTER TABLE mdl_gradingform_guide_comments OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_guide_comments; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_guide_comments IS 'frequently used comments used in marking guide';


--
-- Name: mdl_gradingform_guide_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_guide_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_guide_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_guide_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_guide_comments_id_seq OWNED BY mdl_gradingform_guide_comments.id;


--
-- Name: mdl_gradingform_guide_criteria; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_guide_criteria (
    id bigint NOT NULL,
    definitionid bigint NOT NULL,
    sortorder bigint NOT NULL,
    shortname character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    descriptionformat smallint,
    descriptionmarkers text,
    descriptionmarkersformat smallint,
    maxscore numeric(10,5) NOT NULL
);


ALTER TABLE mdl_gradingform_guide_criteria OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_guide_criteria; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_guide_criteria IS 'Stores the rows of the criteria grid.';


--
-- Name: mdl_gradingform_guide_criteria_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_guide_criteria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_guide_criteria_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_guide_criteria_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_guide_criteria_id_seq OWNED BY mdl_gradingform_guide_criteria.id;


--
-- Name: mdl_gradingform_guide_fillings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_guide_fillings (
    id bigint NOT NULL,
    instanceid bigint NOT NULL,
    criterionid bigint NOT NULL,
    remark text,
    remarkformat smallint,
    score numeric(10,5) NOT NULL
);


ALTER TABLE mdl_gradingform_guide_fillings OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_guide_fillings; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_guide_fillings IS 'Stores the data of how the guide is filled by a particular rater';


--
-- Name: mdl_gradingform_guide_fillings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_guide_fillings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_guide_fillings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_guide_fillings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_guide_fillings_id_seq OWNED BY mdl_gradingform_guide_fillings.id;


--
-- Name: mdl_gradingform_rubric_criteria; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_rubric_criteria (
    id bigint NOT NULL,
    definitionid bigint NOT NULL,
    sortorder bigint NOT NULL,
    description text,
    descriptionformat smallint
);


ALTER TABLE mdl_gradingform_rubric_criteria OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_rubric_criteria; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_rubric_criteria IS 'Stores the rows of the rubric grid.';


--
-- Name: mdl_gradingform_rubric_criteria_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_rubric_criteria_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_rubric_criteria_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_rubric_criteria_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_rubric_criteria_id_seq OWNED BY mdl_gradingform_rubric_criteria.id;


--
-- Name: mdl_gradingform_rubric_fillings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_rubric_fillings (
    id bigint NOT NULL,
    instanceid bigint NOT NULL,
    criterionid bigint NOT NULL,
    levelid bigint,
    remark text,
    remarkformat smallint
);


ALTER TABLE mdl_gradingform_rubric_fillings OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_rubric_fillings; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_rubric_fillings IS 'Stores the data of how the rubric is filled by a particular rater';


--
-- Name: mdl_gradingform_rubric_fillings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_rubric_fillings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_rubric_fillings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_rubric_fillings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_rubric_fillings_id_seq OWNED BY mdl_gradingform_rubric_fillings.id;


--
-- Name: mdl_gradingform_rubric_levels; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_gradingform_rubric_levels (
    id bigint NOT NULL,
    criterionid bigint NOT NULL,
    score numeric(10,5) NOT NULL,
    definition text,
    definitionformat bigint
);


ALTER TABLE mdl_gradingform_rubric_levels OWNER TO innovaedu;

--
-- Name: TABLE mdl_gradingform_rubric_levels; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_gradingform_rubric_levels IS 'Stores the columns of the rubric grid.';


--
-- Name: mdl_gradingform_rubric_levels_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_gradingform_rubric_levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_gradingform_rubric_levels_id_seq OWNER TO innovaedu;

--
-- Name: mdl_gradingform_rubric_levels_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_gradingform_rubric_levels_id_seq OWNED BY mdl_gradingform_rubric_levels.id;


--
-- Name: mdl_groupings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groupings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groupings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_groupings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_groupings (
    id bigint DEFAULT nextval('mdl_groupings_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    timecreated bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    configdata text,
    timemodified bigint DEFAULT 0 NOT NULL,
    descriptionformat smallint DEFAULT 0 NOT NULL,
    idnumber character varying(100) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_groupings OWNER TO innovaedu;

--
-- Name: TABLE mdl_groupings; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_groupings IS 'A grouping is a collection of groups.';


--
-- Name: mdl_groupings_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groupings_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groupings_groups_id_seq OWNER TO innovaedu;

--
-- Name: mdl_groupings_groups; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_groupings_groups (
    id bigint DEFAULT nextval('mdl_groupings_groups_id_seq'::regclass) NOT NULL,
    groupingid bigint DEFAULT 0 NOT NULL,
    groupid bigint NOT NULL,
    timeadded bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_groupings_groups OWNER TO innovaedu;

--
-- Name: TABLE mdl_groupings_groups; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_groupings_groups IS 'Link a group to a grouping.';


--
-- Name: mdl_groups_courses_groupings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groups_courses_groupings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groups_courses_groupings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_groups_courses_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_groups_courses_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_groups_courses_groups_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot (
    id bigint DEFAULT nextval('mdl_hotpot_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    summary text NOT NULL,
    timeopen bigint DEFAULT 0 NOT NULL,
    timeclose bigint DEFAULT 0 NOT NULL,
    location smallint DEFAULT 0 NOT NULL,
    reference character varying(255) DEFAULT ''::character varying NOT NULL,
    outputformat smallint DEFAULT 1 NOT NULL,
    navigation smallint DEFAULT 1 NOT NULL,
    studentfeedback smallint DEFAULT 0 NOT NULL,
    studentfeedbackurl character varying(255) DEFAULT ''::character varying NOT NULL,
    forceplugins smallint DEFAULT 0 NOT NULL,
    shownextquiz smallint DEFAULT 0 NOT NULL,
    review smallint DEFAULT 0 NOT NULL,
    grade bigint DEFAULT 0 NOT NULL,
    grademethod smallint DEFAULT 1 NOT NULL,
    attempts integer DEFAULT 0 NOT NULL,
    password character varying(255) DEFAULT ''::character varying NOT NULL,
    subnet character varying(255) DEFAULT ''::character varying NOT NULL,
    clickreporting smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_hotpot OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot IS 'details about Hot Potatoes quizzes';


--
-- Name: mdl_hotpot_attempts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_attempts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_attempts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_attempts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot_attempts (
    id bigint DEFAULT nextval('mdl_hotpot_attempts_id_seq'::regclass) NOT NULL,
    hotpot bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    starttime bigint DEFAULT 0 NOT NULL,
    endtime bigint DEFAULT 0 NOT NULL,
    score integer DEFAULT 0 NOT NULL,
    penalties integer DEFAULT 0 NOT NULL,
    attempt integer DEFAULT 0 NOT NULL,
    timestart bigint DEFAULT 0 NOT NULL,
    timefinish bigint DEFAULT 0 NOT NULL,
    status smallint DEFAULT 1 NOT NULL,
    clickreportid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_hotpot_attempts OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot_attempts; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot_attempts IS 'details about Hot Potatoes quiz attempts';


--
-- Name: mdl_hotpot_details_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_details_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_details; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot_details (
    id bigint DEFAULT nextval('mdl_hotpot_details_id_seq'::regclass) NOT NULL,
    attempt bigint DEFAULT 0 NOT NULL,
    details text
);


ALTER TABLE mdl_hotpot_details OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot_details; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot_details IS 'raw details (as XML) of Hot Potatoes quiz attempts';


--
-- Name: mdl_hotpot_questions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_questions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_questions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_questions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot_questions (
    id bigint DEFAULT nextval('mdl_hotpot_questions_id_seq'::regclass) NOT NULL,
    name text NOT NULL,
    type smallint DEFAULT 0 NOT NULL,
    text bigint DEFAULT 0 NOT NULL,
    hotpot bigint DEFAULT 0 NOT NULL,
    md5key character varying(32) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_hotpot_questions OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot_questions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot_questions IS 'details about questions in Hot Potatoes quiz attempts';


--
-- Name: mdl_hotpot_responses_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_responses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_responses_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_responses; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot_responses (
    id bigint DEFAULT nextval('mdl_hotpot_responses_id_seq'::regclass) NOT NULL,
    attempt bigint DEFAULT 0 NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    score integer DEFAULT 0 NOT NULL,
    weighting integer DEFAULT 0 NOT NULL,
    correct character varying(255) DEFAULT ''::character varying NOT NULL,
    wrong character varying(255) DEFAULT ''::character varying NOT NULL,
    ignored character varying(255) DEFAULT ''::character varying NOT NULL,
    hints integer DEFAULT 0 NOT NULL,
    clues integer DEFAULT 0 NOT NULL,
    checks integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_hotpot_responses OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot_responses; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot_responses IS 'details about responses in Hot Potatoes quiz attempts';


--
-- Name: mdl_hotpot_strings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_hotpot_strings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_hotpot_strings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_hotpot_strings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_hotpot_strings (
    id bigint DEFAULT nextval('mdl_hotpot_strings_id_seq'::regclass) NOT NULL,
    string text NOT NULL,
    md5key character varying(32) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_hotpot_strings OWNER TO innovaedu;

--
-- Name: TABLE mdl_hotpot_strings; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_hotpot_strings IS 'strings used in Hot Potatoes questions and responses';


--
-- Name: mdl_imscp; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_imscp (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL,
    keepold bigint DEFAULT (-1) NOT NULL,
    structure text,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_imscp OWNER TO innovaedu;

--
-- Name: TABLE mdl_imscp; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_imscp IS 'each record is one imscp resource';


--
-- Name: mdl_imscp_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_imscp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_imscp_id_seq OWNER TO innovaedu;

--
-- Name: mdl_imscp_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_imscp_id_seq OWNED BY imscp.id;


--
-- Name: mdl_imscp_id_seq1; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_imscp_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_imscp_id_seq1 OWNER TO innovaedu;

--
-- Name: mdl_imscp_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_imscp_id_seq1 OWNED BY mdl_imscp.id;


--
-- Name: mdl_journal_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_journal_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_journal_entries_id_seq OWNER TO innovaedu;

--
-- Name: mdl_journal_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_journal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_journal_id_seq OWNER TO innovaedu;

--
-- Name: mdl_label_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_label_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_label_id_seq OWNER TO innovaedu;

--
-- Name: mdl_label; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_label (
    id bigint DEFAULT nextval('mdl_label_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0
);


ALTER TABLE mdl_label OWNER TO innovaedu;

--
-- Name: TABLE mdl_label; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_label IS 'Defines labels';


--
-- Name: mdl_lams_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lams_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lams_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson (
    id bigint DEFAULT nextval('mdl_lesson_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    practice smallint DEFAULT 0 NOT NULL,
    modattempts smallint DEFAULT 0 NOT NULL,
    usepassword smallint DEFAULT 0 NOT NULL,
    password character varying(32) DEFAULT ''::character varying NOT NULL,
    dependency bigint DEFAULT 0 NOT NULL,
    conditions text NOT NULL,
    grade smallint DEFAULT 0 NOT NULL,
    custom smallint DEFAULT 0 NOT NULL,
    ongoing smallint DEFAULT 0 NOT NULL,
    usemaxgrade smallint DEFAULT 0 NOT NULL,
    maxanswers smallint DEFAULT 4 NOT NULL,
    maxattempts smallint DEFAULT 5 NOT NULL,
    review smallint DEFAULT 0 NOT NULL,
    nextpagedefault smallint DEFAULT 0 NOT NULL,
    feedback smallint DEFAULT 1 NOT NULL,
    minquestions smallint DEFAULT 0 NOT NULL,
    maxpages smallint DEFAULT 0 NOT NULL,
    timed smallint DEFAULT 0 NOT NULL,
    maxtime bigint DEFAULT 0 NOT NULL,
    retake smallint DEFAULT 1 NOT NULL,
    activitylink bigint DEFAULT 0 NOT NULL,
    mediafile character varying(255) DEFAULT ''::character varying NOT NULL,
    mediaheight bigint DEFAULT 100 NOT NULL,
    mediawidth bigint DEFAULT 650 NOT NULL,
    mediaclose smallint DEFAULT 0 NOT NULL,
    slideshow smallint DEFAULT 0 NOT NULL,
    width bigint DEFAULT 640 NOT NULL,
    height bigint DEFAULT 480 NOT NULL,
    bgcolor character varying(7) DEFAULT '#FFFFFF'::character varying NOT NULL,
    displayleft smallint DEFAULT 0 NOT NULL,
    displayleftif smallint DEFAULT 0 NOT NULL,
    progressbar smallint DEFAULT 0 NOT NULL,
    highscores smallint DEFAULT 0 NOT NULL,
    maxhighscores bigint DEFAULT 0 NOT NULL,
    available bigint DEFAULT 0 NOT NULL,
    deadline bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson IS 'Defines lesson';


--
-- Name: mdl_lesson_answers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_answers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_answers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_answers (
    id bigint DEFAULT nextval('mdl_lesson_answers_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    jumpto bigint DEFAULT 0 NOT NULL,
    grade smallint DEFAULT 0 NOT NULL,
    score bigint DEFAULT 0 NOT NULL,
    flags smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    answer text,
    response text,
    answerformat smallint DEFAULT 0 NOT NULL,
    responseformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_answers OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_answers; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_answers IS 'Defines lesson_answers';


--
-- Name: mdl_lesson_attempts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_attempts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_attempts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_attempts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_attempts (
    id bigint DEFAULT nextval('mdl_lesson_attempts_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    answerid bigint DEFAULT 0 NOT NULL,
    retry smallint DEFAULT 0 NOT NULL,
    correct bigint DEFAULT 0 NOT NULL,
    useranswer text,
    timeseen bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_attempts OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_attempts; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_attempts IS 'Defines lesson_attempts';


--
-- Name: mdl_lesson_branch_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_branch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_branch_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_branch; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_branch (
    id bigint DEFAULT nextval('mdl_lesson_branch_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    retry bigint DEFAULT 0 NOT NULL,
    flag smallint DEFAULT 0 NOT NULL,
    timeseen bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_branch OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_branch; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_branch IS 'branches for each lesson/user';


--
-- Name: mdl_lesson_default_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_default_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_default_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_grades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_grades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_grades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_grades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_grades (
    id bigint DEFAULT nextval('mdl_lesson_grades_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    grade double precision DEFAULT 0 NOT NULL,
    late smallint DEFAULT 0 NOT NULL,
    completed bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_grades OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_grades; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_grades IS 'Defines lesson_grades';


--
-- Name: mdl_lesson_high_scores_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_high_scores_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_high_scores_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_high_scores; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_high_scores (
    id bigint DEFAULT nextval('mdl_lesson_high_scores_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    gradeid bigint DEFAULT 0 NOT NULL,
    nickname character varying(5) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_lesson_high_scores OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_high_scores; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_high_scores IS 'high scores for each lesson';


--
-- Name: mdl_lesson_pages_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_pages_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_pages; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_pages (
    id bigint DEFAULT nextval('mdl_lesson_pages_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    prevpageid bigint DEFAULT 0 NOT NULL,
    nextpageid bigint DEFAULT 0 NOT NULL,
    qtype smallint DEFAULT 0 NOT NULL,
    qoption smallint DEFAULT 0 NOT NULL,
    layout smallint DEFAULT 1 NOT NULL,
    display smallint DEFAULT 1 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    contents text NOT NULL,
    contentsformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_pages OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_pages; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_pages IS 'Defines lesson_pages';


--
-- Name: mdl_lesson_timer_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lesson_timer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lesson_timer_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lesson_timer; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lesson_timer (
    id bigint DEFAULT nextval('mdl_lesson_timer_id_seq'::regclass) NOT NULL,
    lessonid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    starttime bigint DEFAULT 0 NOT NULL,
    lessontime bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_lesson_timer OWNER TO innovaedu;

--
-- Name: TABLE mdl_lesson_timer; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lesson_timer IS 'lesson timer for each lesson';


--
-- Name: mdl_license; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_license (
    id bigint NOT NULL,
    shortname character varying(255),
    fullname text,
    source character varying(255),
    enabled smallint DEFAULT 1 NOT NULL,
    version bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_license OWNER TO innovaedu;

--
-- Name: mdl_license_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_license_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_license_id_seq OWNER TO innovaedu;

--
-- Name: mdl_license_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_license_id_seq OWNED BY mdl_license.id;


--
-- Name: mdl_log_display_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_log_display_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_log_display_id_seq OWNER TO innovaedu;

--
-- Name: mdl_log_display; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_log_display (
    id bigint DEFAULT nextval('mdl_log_display_id_seq'::regclass) NOT NULL,
    module character varying(20) DEFAULT ''::character varying NOT NULL,
    action character varying(40) DEFAULT ''::character varying NOT NULL,
    mtable character varying(30) DEFAULT ''::character varying NOT NULL,
    field character varying(200) DEFAULT ''::character varying NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_log_display OWNER TO innovaedu;

--
-- Name: TABLE mdl_log_display; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_log_display IS 'For a particular module/action, specifies a moodle table/field';


--
-- Name: mdl_log_queries; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_log_queries (
    id bigint NOT NULL,
    qtype integer NOT NULL,
    sqltext text NOT NULL,
    sqlparams text,
    error integer DEFAULT 0 NOT NULL,
    info text,
    backtrace text,
    exectime numeric(10,5) NOT NULL,
    timelogged bigint NOT NULL
);


ALTER TABLE mdl_log_queries OWNER TO innovaedu;

--
-- Name: mdl_log_queries_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_log_queries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_log_queries_id_seq OWNER TO innovaedu;

--
-- Name: mdl_log_queries_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_log_queries_id_seq OWNED BY mdl_log_queries.id;


--
-- Name: mdl_lti; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lti (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    typeid bigint,
    toolurl text NOT NULL,
    securetoolurl text,
    instructorchoicesendname smallint,
    instructorchoicesendemailaddr smallint,
    instructorchoiceallowroster smallint,
    instructorchoiceallowsetting smallint,
    instructorcustomparameters character varying(255),
    instructorchoiceacceptgrades smallint,
    grade numeric(10,5) DEFAULT 100 NOT NULL,
    launchcontainer smallint DEFAULT 1 NOT NULL,
    resourcekey character varying(255),
    password character varying(255),
    debuglaunch smallint DEFAULT 0 NOT NULL,
    showtitlelaunch smallint DEFAULT 0 NOT NULL,
    showdescriptionlaunch smallint DEFAULT 0 NOT NULL,
    servicesalt character varying(40),
    icon text,
    secureicon text
);


ALTER TABLE mdl_lti OWNER TO innovaedu;

--
-- Name: TABLE mdl_lti; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lti IS 'This table contains Basic LTI activities instances';


--
-- Name: mdl_lti_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lti_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lti_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lti_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_lti_id_seq OWNED BY mdl_lti.id;


--
-- Name: mdl_lti_submission; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lti_submission (
    id bigint NOT NULL,
    ltiid bigint NOT NULL,
    userid bigint NOT NULL,
    datesubmitted bigint NOT NULL,
    dateupdated bigint NOT NULL,
    gradepercent numeric(10,5) NOT NULL,
    originalgrade numeric(10,5) NOT NULL,
    launchid bigint NOT NULL,
    state smallint NOT NULL
);


ALTER TABLE mdl_lti_submission OWNER TO innovaedu;

--
-- Name: TABLE mdl_lti_submission; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lti_submission IS 'Keeps track of individual submissions for LTI activities.';


--
-- Name: mdl_lti_submission_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lti_submission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lti_submission_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lti_submission_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_lti_submission_id_seq OWNED BY mdl_lti_submission.id;


--
-- Name: mdl_lti_types; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lti_types (
    id bigint NOT NULL,
    name character varying(255) DEFAULT 'basiclti Activity'::character varying NOT NULL,
    baseurl text NOT NULL,
    tooldomain character varying(255) DEFAULT ''::character varying NOT NULL,
    state smallint DEFAULT 2 NOT NULL,
    course bigint NOT NULL,
    coursevisible smallint DEFAULT 0 NOT NULL,
    createdby bigint NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_lti_types OWNER TO innovaedu;

--
-- Name: TABLE mdl_lti_types; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lti_types IS 'Basic LTI pre-configured activities';


--
-- Name: mdl_lti_types_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_lti_types_config (
    id bigint NOT NULL,
    typeid bigint NOT NULL,
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    value character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_lti_types_config OWNER TO innovaedu;

--
-- Name: TABLE mdl_lti_types_config; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_lti_types_config IS 'Basic LTI types configuration';


--
-- Name: mdl_lti_types_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lti_types_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lti_types_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lti_types_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_lti_types_config_id_seq OWNED BY mdl_lti_types_config.id;


--
-- Name: mdl_lti_types_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_lti_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_lti_types_id_seq OWNER TO innovaedu;

--
-- Name: mdl_lti_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_lti_types_id_seq OWNED BY mdl_lti_types.id;


--
-- Name: mdl_medio_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_medio_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_medio_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message (
    id bigint DEFAULT nextval('mdl_message_id_seq'::regclass) NOT NULL,
    useridfrom bigint DEFAULT 0 NOT NULL,
    useridto bigint DEFAULT 0 NOT NULL,
    fullmessage text NOT NULL,
    fullmessageformat smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    subject text,
    fullmessagehtml text,
    smallmessage text,
    notification smallint DEFAULT 0,
    contexturl text,
    contexturlname text
);


ALTER TABLE mdl_message OWNER TO innovaedu;

--
-- Name: TABLE mdl_message; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_message IS 'Stores all unread messages';


--
-- Name: mdl_message_contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_contacts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_contacts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message_contacts (
    id bigint DEFAULT nextval('mdl_message_contacts_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    contactid bigint DEFAULT 0 NOT NULL,
    blocked smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_message_contacts OWNER TO innovaedu;

--
-- Name: TABLE mdl_message_contacts; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_message_contacts IS 'Maintains lists of relationships between users';


--
-- Name: mdl_message_processors; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message_processors (
    id bigint NOT NULL,
    name character varying(166) DEFAULT ''::character varying NOT NULL,
    enabled smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_message_processors OWNER TO innovaedu;

--
-- Name: mdl_message_processors_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_processors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_processors_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_processors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_message_processors_id_seq OWNED BY mdl_message_processors.id;


--
-- Name: mdl_message_providers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message_providers (
    id bigint NOT NULL,
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    component character varying(200) DEFAULT ''::character varying NOT NULL,
    capability character varying(255)
);


ALTER TABLE mdl_message_providers OWNER TO innovaedu;

--
-- Name: mdl_message_providers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_providers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_providers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_providers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_message_providers_id_seq OWNED BY mdl_message_providers.id;


--
-- Name: mdl_message_read_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_read_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_read_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_read; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message_read (
    id bigint DEFAULT nextval('mdl_message_read_id_seq'::regclass) NOT NULL,
    useridfrom bigint DEFAULT 0 NOT NULL,
    useridto bigint DEFAULT 0 NOT NULL,
    fullmessage text NOT NULL,
    fullmessageformat smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timeread bigint DEFAULT 0 NOT NULL,
    subject text,
    fullmessagehtml text,
    smallmessage text,
    notification smallint DEFAULT 0,
    contexturl text,
    contexturlname text
);


ALTER TABLE mdl_message_read OWNER TO innovaedu;

--
-- Name: TABLE mdl_message_read; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_message_read IS 'Stores all messages that have been read';


--
-- Name: mdl_message_working; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_message_working (
    id bigint NOT NULL,
    unreadmessageid bigint NOT NULL,
    processorid bigint NOT NULL
);


ALTER TABLE mdl_message_working OWNER TO innovaedu;

--
-- Name: mdl_message_working_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_message_working_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_message_working_id_seq OWNER TO innovaedu;

--
-- Name: mdl_message_working_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_message_working_id_seq OWNED BY mdl_message_working.id;


--
-- Name: mdl_mnet_application; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_application (
    id bigint NOT NULL,
    name character varying(50) DEFAULT ''::character varying NOT NULL,
    display_name character varying(50) DEFAULT ''::character varying NOT NULL,
    xmlrpc_server_url character varying(255) DEFAULT ''::character varying NOT NULL,
    sso_land_url character varying(255) DEFAULT ''::character varying NOT NULL,
    sso_jump_url character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_mnet_application OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_application; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_application IS 'Information about applications on remote hosts';


--
-- Name: mdl_mnet_application_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_application_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_application_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_application_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_mnet_application_id_seq OWNED BY mdl_mnet_application.id;


--
-- Name: mdl_mnet_enrol_assignments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_enrol_assignments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_enrol_assignments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_enrol_course_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_enrol_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_enrol_course_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_host_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_host_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_host_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_host; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_host (
    id bigint DEFAULT nextval('mdl_mnet_host_id_seq'::regclass) NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    wwwroot character varying(255) DEFAULT ''::character varying NOT NULL,
    ip_address character varying(45) DEFAULT ''::character varying NOT NULL,
    name character varying(80) DEFAULT ''::character varying NOT NULL,
    public_key text NOT NULL,
    public_key_expires bigint DEFAULT 0 NOT NULL,
    transport smallint DEFAULT 0 NOT NULL,
    last_connect_time bigint DEFAULT 0 NOT NULL,
    last_log_id bigint DEFAULT 0 NOT NULL,
    applicationid bigint DEFAULT 1 NOT NULL,
    force_theme smallint DEFAULT 0 NOT NULL,
    theme character varying(100),
    portno integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_host OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_host; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_host IS 'Information about the local and remote hosts for RPC';


--
-- Name: mdl_mnet_host2service_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_host2service_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_host2service_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_host2service; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_host2service (
    id bigint DEFAULT nextval('mdl_mnet_host2service_id_seq'::regclass) NOT NULL,
    hostid bigint DEFAULT 0 NOT NULL,
    serviceid bigint DEFAULT 0 NOT NULL,
    publish smallint DEFAULT 0 NOT NULL,
    subscribe smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_host2service OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_host2service; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_host2service IS 'Information about the services for a given host';


--
-- Name: mdl_mnet_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_log (
    id bigint DEFAULT nextval('mdl_mnet_log_id_seq'::regclass) NOT NULL,
    hostid bigint DEFAULT 0 NOT NULL,
    remoteid bigint DEFAULT 0 NOT NULL,
    "time" bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    ip character varying(45) DEFAULT ''::character varying NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    coursename character varying(40) DEFAULT ''::character varying NOT NULL,
    module character varying(20) DEFAULT ''::character varying NOT NULL,
    cmid bigint DEFAULT 0 NOT NULL,
    action character varying(40) DEFAULT ''::character varying NOT NULL,
    url character varying(100) DEFAULT ''::character varying NOT NULL,
    info character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_mnet_log OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_log; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_log IS 'Store session data from users migrating to other sites';


--
-- Name: mdl_mnet_remote_rpc; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_remote_rpc (
    id bigint NOT NULL,
    functionname character varying(40) DEFAULT ''::character varying NOT NULL,
    xmlrpcpath character varying(80) DEFAULT ''::character varying NOT NULL,
    plugintype character varying(20) DEFAULT ''::character varying NOT NULL,
    pluginname character varying(20) DEFAULT ''::character varying NOT NULL,
    enabled smallint NOT NULL
);


ALTER TABLE mdl_mnet_remote_rpc OWNER TO innovaedu;

--
-- Name: mdl_mnet_remote_rpc_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_remote_rpc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_remote_rpc_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_remote_rpc_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_mnet_remote_rpc_id_seq OWNED BY mdl_mnet_remote_rpc.id;


--
-- Name: mdl_mnet_remote_service2rpc; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_remote_service2rpc (
    id bigint NOT NULL,
    serviceid bigint DEFAULT 0 NOT NULL,
    rpcid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_remote_service2rpc OWNER TO innovaedu;

--
-- Name: mdl_mnet_remote_service2rpc_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_remote_service2rpc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_remote_service2rpc_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_remote_service2rpc_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_mnet_remote_service2rpc_id_seq OWNED BY mdl_mnet_remote_service2rpc.id;


--
-- Name: mdl_mnet_rpc_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_rpc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_rpc_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_rpc; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_rpc (
    id bigint DEFAULT nextval('mdl_mnet_rpc_id_seq'::regclass) NOT NULL,
    functionname character varying(40) DEFAULT ''::character varying NOT NULL,
    xmlrpcpath character varying(80) DEFAULT ''::character varying NOT NULL,
    plugintype character varying(20) DEFAULT ''::character varying NOT NULL,
    pluginname character varying(20) DEFAULT ''::character varying NOT NULL,
    enabled smallint DEFAULT 0 NOT NULL,
    help text NOT NULL,
    profile text NOT NULL,
    filename character varying(100) DEFAULT ''::character varying NOT NULL,
    classname character varying(150),
    static smallint
);


ALTER TABLE mdl_mnet_rpc OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_rpc; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_rpc IS 'Functions or methods that we may publish or subscribe to';


--
-- Name: mdl_mnet_service_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_service_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_service_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_service; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_service (
    id bigint DEFAULT nextval('mdl_mnet_service_id_seq'::regclass) NOT NULL,
    name character varying(40) DEFAULT ''::character varying NOT NULL,
    description character varying(40) DEFAULT ''::character varying NOT NULL,
    apiversion character varying(10) DEFAULT ''::character varying NOT NULL,
    offer smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_service OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_service; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_service IS 'A service is a group of functions';


--
-- Name: mdl_mnet_service2rpc_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_service2rpc_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_service2rpc_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_service2rpc; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_service2rpc (
    id bigint DEFAULT nextval('mdl_mnet_service2rpc_id_seq'::regclass) NOT NULL,
    serviceid bigint DEFAULT 0 NOT NULL,
    rpcid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_service2rpc OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_service2rpc; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_service2rpc IS 'Group functions or methods under a service';


--
-- Name: mdl_mnet_session_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_session_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_session_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_session; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_session (
    id bigint DEFAULT nextval('mdl_mnet_session_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    username character varying(100) DEFAULT ''::character varying NOT NULL,
    token character varying(40) DEFAULT ''::character varying NOT NULL,
    mnethostid bigint DEFAULT 0 NOT NULL,
    useragent character varying(40) DEFAULT ''::character varying NOT NULL,
    confirm_timeout bigint DEFAULT 0 NOT NULL,
    session_id character varying(40) DEFAULT ''::character varying NOT NULL,
    expires bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_mnet_session OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_session; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_session IS 'Store session data from users migrating to other sites';


--
-- Name: mdl_mnet_sso_access_control_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnet_sso_access_control_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnet_sso_access_control_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnet_sso_access_control; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnet_sso_access_control (
    id bigint DEFAULT nextval('mdl_mnet_sso_access_control_id_seq'::regclass) NOT NULL,
    username character varying(100) DEFAULT ''::character varying NOT NULL,
    mnet_host_id bigint DEFAULT 0 NOT NULL,
    accessctrl character varying(20) DEFAULT 'allow'::character varying NOT NULL
);


ALTER TABLE mdl_mnet_sso_access_control OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnet_sso_access_control; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnet_sso_access_control IS 'Users by host permitted (or not) to login from a remote provider';


--
-- Name: mdl_mnetservice_enrol_courses; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnetservice_enrol_courses (
    id bigint NOT NULL,
    hostid bigint NOT NULL,
    remoteid bigint NOT NULL,
    categoryid bigint NOT NULL,
    categoryname character varying(255) DEFAULT ''::character varying NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    fullname character varying(254) DEFAULT ''::character varying NOT NULL,
    shortname character varying(100) DEFAULT ''::character varying NOT NULL,
    idnumber character varying(100) DEFAULT ''::character varying NOT NULL,
    summary text NOT NULL,
    summaryformat smallint DEFAULT 0,
    startdate bigint NOT NULL,
    roleid bigint NOT NULL,
    rolename character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_mnetservice_enrol_courses OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnetservice_enrol_courses; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnetservice_enrol_courses IS 'Caches the information fetched via XML-RPC about courses on remote hosts that are offered for our users';


--
-- Name: mdl_mnetservice_enrol_courses_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnetservice_enrol_courses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnetservice_enrol_courses_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnetservice_enrol_courses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_mnetservice_enrol_courses_id_seq OWNED BY mdl_mnetservice_enrol_courses.id;


--
-- Name: mdl_mnetservice_enrol_enrolments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_mnetservice_enrol_enrolments (
    id bigint NOT NULL,
    hostid bigint NOT NULL,
    userid bigint NOT NULL,
    remotecourseid bigint NOT NULL,
    rolename character varying(255) DEFAULT ''::character varying NOT NULL,
    enroltime bigint DEFAULT 0 NOT NULL,
    enroltype character varying(20) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_mnetservice_enrol_enrolments OWNER TO innovaedu;

--
-- Name: TABLE mdl_mnetservice_enrol_enrolments; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_mnetservice_enrol_enrolments IS 'Caches the information about enrolments of our local users in courses on remote hosts';


--
-- Name: mdl_mnetservice_enrol_enrolments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_mnetservice_enrol_enrolments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_mnetservice_enrol_enrolments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_mnetservice_enrol_enrolments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_mnetservice_enrol_enrolments_id_seq OWNED BY mdl_mnetservice_enrol_enrolments.id;


--
-- Name: mdl_my_pages; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_my_pages (
    id bigint NOT NULL,
    userid bigint DEFAULT 0,
    name character varying(200) DEFAULT ''::character varying NOT NULL,
    private smallint DEFAULT 1 NOT NULL,
    sortorder integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_my_pages OWNER TO innovaedu;

--
-- Name: mdl_my_pages_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_my_pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_my_pages_id_seq OWNER TO innovaedu;

--
-- Name: mdl_my_pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_my_pages_id_seq OWNED BY mdl_my_pages.id;


--
-- Name: mdl_nomina20143; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_nomina20143 (
    usuario character varying(12),
    paterno character varying(50),
    materno character varying(50),
    nombre character varying(50),
    curp character varying(20),
    rfc character varying(20),
    clvcat character varying(20) DEFAULT 0 NOT NULL,
    nomcat character varying(200) DEFAULT 0 NOT NULL,
    clvdepto character varying(20) DEFAULT 0 NOT NULL,
    fching character varying(20) DEFAULT 0 NOT NULL,
    a character varying(10) DEFAULT 0 NOT NULL,
    b character varying(10) DEFAULT 0 NOT NULL,
    c character varying(10) DEFAULT 0 NOT NULL,
    sexo character varying(10) DEFAULT 0 NOT NULL,
    fchnac character varying(20) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_nomina20143 OWNER TO innovaedu;

--
-- Name: mdl_nomina20143v; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_nomina20143v (
    matricula character varying(12),
    paterno character varying(50),
    materno character varying(50),
    nombre character varying(50),
    curp character varying(20),
    rfc character varying(20),
    clvcat character varying(20) DEFAULT 0 NOT NULL,
    nomcat character varying(200) DEFAULT 0 NOT NULL,
    clvdepto character varying(20) DEFAULT 0 NOT NULL,
    nomdepto character varying(200) DEFAULT 0 NOT NULL,
    fching character varying(20) DEFAULT 0 NOT NULL,
    anio character varying(10) DEFAULT 0 NOT NULL,
    quincena character varying(10) DEFAULT 0 NOT NULL,
    dias character varying(10) DEFAULT 0 NOT NULL,
    sexo character varying(10) DEFAULT 0 NOT NULL,
    fchnac character varying(20) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_nomina20143v OWNER TO innovaedu;

--
-- Name: mdl_page; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_page (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    content text,
    contentformat smallint DEFAULT 0 NOT NULL,
    legacyfiles smallint DEFAULT 0 NOT NULL,
    legacyfileslast bigint,
    display smallint DEFAULT 0 NOT NULL,
    displayoptions text,
    revision bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_page OWNER TO innovaedu;

--
-- Name: TABLE mdl_page; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_page IS 'Each record is one page and its config data';


--
-- Name: mdl_page_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_page_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_page_id_seq OWNER TO innovaedu;

--
-- Name: mdl_page_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_page_id_seq OWNED BY mdl_page.id;


--
-- Name: mdl_portfolio_instance; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_instance (
    id bigint NOT NULL,
    plugin character varying(50) DEFAULT ''::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    visible smallint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_portfolio_instance OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_instance_config (
    id bigint NOT NULL,
    instance bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_portfolio_instance_config OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_instance_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_instance_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_instance_config_id_seq OWNED BY mdl_portfolio_instance_config.id;


--
-- Name: mdl_portfolio_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_instance_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_instance_id_seq OWNED BY mdl_portfolio_instance.id;


--
-- Name: mdl_portfolio_instance_user; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_instance_user (
    id bigint NOT NULL,
    instance bigint NOT NULL,
    userid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_portfolio_instance_user OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_user_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_instance_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_instance_user_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_instance_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_instance_user_id_seq OWNED BY mdl_portfolio_instance_user.id;


--
-- Name: mdl_portfolio_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_log (
    id bigint NOT NULL,
    userid bigint NOT NULL,
    "time" bigint NOT NULL,
    portfolio bigint NOT NULL,
    caller_class character varying(150) DEFAULT ''::character varying NOT NULL,
    caller_file character varying(255) DEFAULT ''::character varying NOT NULL,
    caller_sha1 character varying(255) DEFAULT ''::character varying NOT NULL,
    tempdataid bigint DEFAULT 0 NOT NULL,
    returnurl character varying(255) DEFAULT ''::character varying NOT NULL,
    continueurl character varying(255) DEFAULT ''::character varying NOT NULL,
    caller_component character varying(255)
);


ALTER TABLE mdl_portfolio_log OWNER TO innovaedu;

--
-- Name: mdl_portfolio_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_log_id_seq OWNED BY mdl_portfolio_log.id;


--
-- Name: mdl_portfolio_mahara_queue; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_mahara_queue (
    id bigint NOT NULL,
    transferid bigint NOT NULL,
    token character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_portfolio_mahara_queue OWNER TO innovaedu;

--
-- Name: TABLE mdl_portfolio_mahara_queue; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_portfolio_mahara_queue IS 'maps mahara tokens to transfer ids';


--
-- Name: mdl_portfolio_mahara_queue_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_mahara_queue_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_mahara_queue_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_mahara_queue_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_mahara_queue_id_seq OWNED BY mdl_portfolio_mahara_queue.id;


--
-- Name: mdl_portfolio_tempdata; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_portfolio_tempdata (
    id bigint NOT NULL,
    data text,
    expirytime bigint NOT NULL,
    userid bigint NOT NULL,
    instance bigint DEFAULT 0
);


ALTER TABLE mdl_portfolio_tempdata OWNER TO innovaedu;

--
-- Name: mdl_portfolio_tempdata_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_portfolio_tempdata_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_portfolio_tempdata_id_seq OWNER TO innovaedu;

--
-- Name: mdl_portfolio_tempdata_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_portfolio_tempdata_id_seq OWNED BY mdl_portfolio_tempdata.id;


--
-- Name: mdl_post_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_post_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_post_id_seq OWNER TO innovaedu;

--
-- Name: mdl_post; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_post (
    id bigint DEFAULT nextval('mdl_post_id_seq'::regclass) NOT NULL,
    module character varying(20) DEFAULT ''::character varying NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    moduleid bigint DEFAULT 0 NOT NULL,
    coursemoduleid bigint DEFAULT 0 NOT NULL,
    subject character varying(128) DEFAULT ''::character varying NOT NULL,
    summary text,
    content text,
    uniquehash character varying(255) DEFAULT ''::character varying NOT NULL,
    rating bigint DEFAULT 0 NOT NULL,
    format bigint DEFAULT 0 NOT NULL,
    attachment character varying(100),
    publishstate character varying(20) DEFAULT 'draft'::character varying NOT NULL,
    lastmodified bigint DEFAULT 0 NOT NULL,
    created bigint DEFAULT 0 NOT NULL,
    usermodified bigint,
    summaryformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_post OWNER TO innovaedu;

--
-- Name: TABLE mdl_post; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_post IS 'Generic post table to hold data blog entries etc in different modules';


--
-- Name: mdl_profesion_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_profesion_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_profesion_id_seq OWNER TO innovaedu;

--
-- Name: mdl_profiling; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_profiling (
    id bigint NOT NULL,
    runid character varying(32) DEFAULT ''::character varying NOT NULL,
    url character varying(255) DEFAULT ''::character varying NOT NULL,
    data text NOT NULL,
    totalexecutiontime bigint NOT NULL,
    totalcputime bigint NOT NULL,
    totalcalls bigint NOT NULL,
    totalmemory bigint NOT NULL,
    runreference smallint DEFAULT 0 NOT NULL,
    runcomment character varying(255) DEFAULT ''::character varying NOT NULL,
    timecreated bigint NOT NULL
);


ALTER TABLE mdl_profiling OWNER TO innovaedu;

--
-- Name: mdl_profiling_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_profiling_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_profiling_id_seq OWNER TO innovaedu;

--
-- Name: mdl_profiling_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_profiling_id_seq OWNED BY mdl_profiling.id;


--
-- Name: mdl_propuesta_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_propuesta_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_propuesta_id_seq OWNER TO innovaedu;

--
-- Name: mdl_pruebadirectivos; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_pruebadirectivos (
    usuario character varying(20),
    pat character varying(100),
    mat character varying(100),
    nom character varying(100),
    del character varying(100),
    ads character varying(100),
    correo character varying(100)
);


ALTER TABLE mdl_pruebadirectivos OWNER TO innovaedu;

--
-- Name: TABLE mdl_pruebadirectivos; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_pruebadirectivos IS 'Para identificar candidatos en directivos';


--
-- Name: mdl_pruebanomina2_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_pruebanomina2_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_pruebanomina2_id_seq OWNER TO innovaedu;

--
-- Name: mdl_qtype_essay_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_qtype_essay_options (
    id bigint NOT NULL,
    questionid bigint NOT NULL,
    responseformat character varying(16) DEFAULT 'editor'::character varying NOT NULL,
    responsefieldlines smallint DEFAULT 15 NOT NULL,
    attachments smallint DEFAULT 0 NOT NULL,
    graderinfo text,
    graderinfoformat smallint DEFAULT 0 NOT NULL,
    responsetemplate text,
    responsetemplateformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_qtype_essay_options OWNER TO innovaedu;

--
-- Name: mdl_qtype_essay_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_qtype_essay_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_qtype_essay_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_qtype_essay_options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_qtype_essay_options_id_seq OWNED BY mdl_qtype_essay_options.id;


--
-- Name: mdl_qtype_match_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_qtype_match_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_qtype_match_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_qtype_match_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_qtype_match_options (
    id bigint DEFAULT nextval('mdl_qtype_match_options_id_seq'::regclass) NOT NULL,
    questionid bigint DEFAULT 0 NOT NULL,
    shuffleanswers smallint DEFAULT 1 NOT NULL,
    correctfeedback text NOT NULL,
    correctfeedbackformat smallint DEFAULT 0 NOT NULL,
    partiallycorrectfeedback text NOT NULL,
    partiallycorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    incorrectfeedback text NOT NULL,
    incorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    shownumcorrect smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_qtype_match_options OWNER TO innovaedu;

--
-- Name: TABLE mdl_qtype_match_options; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_qtype_match_options IS 'Defines fixed matching questions';


--
-- Name: mdl_qtype_match_subquestions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_qtype_match_subquestions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_qtype_match_subquestions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_qtype_match_subquestions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_qtype_match_subquestions (
    id bigint DEFAULT nextval('mdl_qtype_match_subquestions_id_seq'::regclass) NOT NULL,
    questionid bigint DEFAULT 0 NOT NULL,
    questiontext text NOT NULL,
    answertext character varying(255) DEFAULT ''::character varying NOT NULL,
    questiontextformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_qtype_match_subquestions OWNER TO innovaedu;

--
-- Name: TABLE mdl_qtype_match_subquestions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_qtype_match_subquestions IS 'Defines the subquestions that make up a matching question';


--
-- Name: mdl_qtype_shortanswer_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_qtype_shortanswer_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_qtype_shortanswer_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_qtype_shortanswer_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_qtype_shortanswer_options (
    id bigint DEFAULT nextval('mdl_qtype_shortanswer_options_id_seq'::regclass) NOT NULL,
    questionid bigint DEFAULT 0 NOT NULL,
    usecase smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_qtype_shortanswer_options OWNER TO innovaedu;

--
-- Name: TABLE mdl_qtype_shortanswer_options; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_qtype_shortanswer_options IS 'Options for short answer questions';


--
-- Name: mdl_question_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question (
    id bigint DEFAULT nextval('mdl_question_id_seq'::regclass) NOT NULL,
    category bigint DEFAULT 0 NOT NULL,
    parent bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    questiontext text NOT NULL,
    questiontextformat smallint DEFAULT 0 NOT NULL,
    generalfeedback text NOT NULL,
    defaultmark numeric(12,7) DEFAULT 1 NOT NULL,
    penalty numeric(12,7) DEFAULT 0.3333333 NOT NULL,
    qtype character varying(20) DEFAULT ''::character varying NOT NULL,
    length bigint DEFAULT 1 NOT NULL,
    stamp character varying(255) DEFAULT ''::character varying NOT NULL,
    version character varying(255) DEFAULT ''::character varying NOT NULL,
    hidden smallint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    createdby bigint,
    modifiedby bigint,
    generalfeedbackformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question OWNER TO innovaedu;

--
-- Name: TABLE mdl_question; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question IS 'The questions themselves';


--
-- Name: mdl_question_answers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_answers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_answers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_answers (
    id bigint DEFAULT nextval('mdl_question_answers_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    answer text NOT NULL,
    fraction numeric(12,7) DEFAULT 0 NOT NULL,
    feedback text NOT NULL,
    answerformat smallint DEFAULT 0 NOT NULL,
    feedbackformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_answers OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_answers; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_answers IS 'Answers, with a fractional grade (0-1) and feedback';


--
-- Name: mdl_question_attempt_step_data; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_attempt_step_data (
    id bigint NOT NULL,
    attemptstepid bigint NOT NULL,
    name character varying(32) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_question_attempt_step_data OWNER TO innovaedu;

--
-- Name: mdl_question_attempt_step_data_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_attempt_step_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_attempt_step_data_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_attempt_step_data_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_attempt_step_data_id_seq OWNED BY mdl_question_attempt_step_data.id;


--
-- Name: mdl_question_attempt_steps; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_attempt_steps (
    id bigint NOT NULL,
    questionattemptid bigint NOT NULL,
    sequencenumber bigint NOT NULL,
    state character varying(13) DEFAULT ''::character varying NOT NULL,
    fraction numeric(12,7),
    timecreated bigint NOT NULL,
    userid bigint
);


ALTER TABLE mdl_question_attempt_steps OWNER TO innovaedu;

--
-- Name: mdl_question_attempt_steps_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_attempt_steps_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_attempt_steps_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_attempt_steps_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_attempt_steps_id_seq OWNED BY mdl_question_attempt_steps.id;


--
-- Name: mdl_question_attempts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_attempts (
    id bigint NOT NULL,
    questionusageid bigint NOT NULL,
    slot bigint NOT NULL,
    behaviour character varying(32) DEFAULT ''::character varying NOT NULL,
    questionid bigint NOT NULL,
    maxmark numeric(12,7) NOT NULL,
    minfraction numeric(12,7) NOT NULL,
    flagged smallint DEFAULT 0 NOT NULL,
    questionsummary text,
    rightanswer text,
    responsesummary text,
    timemodified bigint NOT NULL,
    variant bigint DEFAULT 1 NOT NULL
);


ALTER TABLE mdl_question_attempts OWNER TO innovaedu;

--
-- Name: mdl_question_attempts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_attempts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_attempts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_attempts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_attempts_id_seq OWNED BY mdl_question_attempts.id;


--
-- Name: mdl_question_calculated_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_calculated_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_calculated_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_calculated; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_calculated (
    id bigint DEFAULT nextval('mdl_question_calculated_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    answer bigint DEFAULT 0 NOT NULL,
    tolerance character varying(20) DEFAULT '0.0'::character varying NOT NULL,
    tolerancetype bigint DEFAULT 1 NOT NULL,
    correctanswerlength bigint DEFAULT 2 NOT NULL,
    correctanswerformat bigint DEFAULT 2 NOT NULL
);


ALTER TABLE mdl_question_calculated OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_calculated; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_calculated IS 'Options for questions of type calculated';


--
-- Name: mdl_question_calculated_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_calculated_options (
    id bigint NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    synchronize smallint DEFAULT 0 NOT NULL,
    single smallint DEFAULT 0 NOT NULL,
    shuffleanswers smallint DEFAULT 0 NOT NULL,
    correctfeedback text,
    partiallycorrectfeedback text,
    incorrectfeedback text,
    answernumbering character varying(10) DEFAULT 'abc'::character varying NOT NULL,
    correctfeedbackformat smallint DEFAULT 0 NOT NULL,
    partiallycorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    incorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    shownumcorrect smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_calculated_options OWNER TO innovaedu;

--
-- Name: mdl_question_calculated_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_calculated_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_calculated_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_calculated_options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_calculated_options_id_seq OWNED BY mdl_question_calculated_options.id;


--
-- Name: mdl_question_categories_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_categories_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_categories; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_categories (
    id bigint DEFAULT nextval('mdl_question_categories_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    info text NOT NULL,
    stamp character varying(255) DEFAULT ''::character varying NOT NULL,
    parent bigint DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 999 NOT NULL,
    contextid bigint DEFAULT 0 NOT NULL,
    infoformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_categories OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_categories; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_categories IS 'Categories are for grouping questions';


--
-- Name: mdl_question_dataset_definitions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_dataset_definitions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_dataset_definitions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_dataset_definitions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_dataset_definitions (
    id bigint DEFAULT nextval('mdl_question_dataset_definitions_id_seq'::regclass) NOT NULL,
    category bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    type bigint DEFAULT 0 NOT NULL,
    options character varying(255) DEFAULT ''::character varying NOT NULL,
    itemcount bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_dataset_definitions OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_dataset_definitions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_dataset_definitions IS 'Organises and stores properties for dataset items';


--
-- Name: mdl_question_dataset_items_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_dataset_items_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_dataset_items_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_dataset_items; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_dataset_items (
    id bigint DEFAULT nextval('mdl_question_dataset_items_id_seq'::regclass) NOT NULL,
    definition bigint DEFAULT 0 NOT NULL,
    itemnumber bigint DEFAULT 0 NOT NULL,
    value character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_question_dataset_items OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_dataset_items; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_dataset_items IS 'Individual dataset items';


--
-- Name: mdl_question_datasets_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_datasets_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_datasets_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_datasets; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_datasets (
    id bigint DEFAULT nextval('mdl_question_datasets_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    datasetdefinition bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_datasets OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_datasets; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_datasets IS 'Many-many relation between questions and dataset definitions';


--
-- Name: mdl_question_hints; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_hints (
    id bigint NOT NULL,
    questionid bigint NOT NULL,
    hint text NOT NULL,
    hintformat smallint DEFAULT 0 NOT NULL,
    shownumcorrect smallint,
    clearwrong smallint,
    options character varying(255)
);


ALTER TABLE mdl_question_hints OWNER TO innovaedu;

--
-- Name: mdl_question_hints_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_hints_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_hints_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_hints_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_hints_id_seq OWNED BY mdl_question_hints.id;


--
-- Name: mdl_question_multianswer_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_multianswer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_multianswer_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_multianswer; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_multianswer (
    id bigint DEFAULT nextval('mdl_question_multianswer_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    sequence text NOT NULL
);


ALTER TABLE mdl_question_multianswer OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_multianswer; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_multianswer IS 'Options for multianswer questions';


--
-- Name: mdl_question_multichoice_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_multichoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_multichoice_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_multichoice; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_multichoice (
    id bigint DEFAULT nextval('mdl_question_multichoice_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    layout smallint DEFAULT 0 NOT NULL,
    answers character varying(255) DEFAULT ''::character varying NOT NULL,
    single smallint DEFAULT 0 NOT NULL,
    shuffleanswers smallint DEFAULT 1 NOT NULL,
    correctfeedback text NOT NULL,
    partiallycorrectfeedback text NOT NULL,
    incorrectfeedback text NOT NULL,
    answernumbering character varying(10) DEFAULT 'abc'::character varying NOT NULL,
    correctfeedbackformat smallint DEFAULT 0 NOT NULL,
    partiallycorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    incorrectfeedbackformat smallint DEFAULT 0 NOT NULL,
    shownumcorrect smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_multichoice OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_multichoice; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_multichoice IS 'Options for multiple choice questions';


--
-- Name: mdl_question_numerical_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_numerical_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_numerical_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_numerical; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_numerical (
    id bigint DEFAULT nextval('mdl_question_numerical_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    answer bigint DEFAULT 0 NOT NULL,
    tolerance character varying(255) DEFAULT '0.0'::character varying NOT NULL
);


ALTER TABLE mdl_question_numerical OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_numerical; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_numerical IS 'Options for numerical questions';


--
-- Name: mdl_question_numerical_options; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_numerical_options (
    id bigint NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    showunits smallint DEFAULT 0 NOT NULL,
    unitsleft smallint DEFAULT 0 NOT NULL,
    unitgradingtype smallint DEFAULT 0 NOT NULL,
    unitpenalty numeric(12,7) DEFAULT 0.1 NOT NULL
);


ALTER TABLE mdl_question_numerical_options OWNER TO innovaedu;

--
-- Name: mdl_question_numerical_options_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_numerical_options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_numerical_options_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_numerical_options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_question_numerical_options_id_seq OWNED BY mdl_question_numerical_options.id;


--
-- Name: mdl_question_numerical_units_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_numerical_units_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_numerical_units_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_numerical_units; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_numerical_units (
    id bigint DEFAULT nextval('mdl_question_numerical_units_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    multiplier numeric(40,20) DEFAULT 1.00000000000000000000 NOT NULL,
    unit character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_question_numerical_units OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_numerical_units; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_numerical_units IS 'Optional unit options for numerical questions';


--
-- Name: mdl_question_randomsamatch_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_randomsamatch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_randomsamatch_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_randomsamatch; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_randomsamatch (
    id bigint DEFAULT nextval('mdl_question_randomsamatch_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    choose bigint DEFAULT 4 NOT NULL
);


ALTER TABLE mdl_question_randomsamatch OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_randomsamatch; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_randomsamatch IS 'Info about a random short-answer matching question';


--
-- Name: mdl_question_rqp_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_rqp_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_rqp_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_rqp_servers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_rqp_servers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_rqp_servers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_rqp_states_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_rqp_states_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_rqp_states_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_rqp_types_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_rqp_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_rqp_types_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_sessions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_sessions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_sessions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_sessions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_sessions (
    id bigint DEFAULT nextval('mdl_question_sessions_id_seq'::regclass) NOT NULL,
    attemptid bigint DEFAULT 0 NOT NULL,
    questionid bigint DEFAULT 0 NOT NULL,
    newest bigint DEFAULT 0 NOT NULL,
    newgraded bigint DEFAULT 0 NOT NULL,
    sumpenalty numeric(12,7) DEFAULT 0 NOT NULL,
    manualcomment text NOT NULL,
    flagged smallint DEFAULT 0 NOT NULL,
    manualcommentformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_sessions OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_sessions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_sessions IS 'Gives ids of the newest open and newest graded states';


--
-- Name: mdl_question_states_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_states_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_states_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_states; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_states (
    id bigint DEFAULT nextval('mdl_question_states_id_seq'::regclass) NOT NULL,
    attempt bigint DEFAULT 0 NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    seq_number integer DEFAULT 0 NOT NULL,
    answer text NOT NULL,
    "timestamp" bigint DEFAULT 0 NOT NULL,
    event smallint DEFAULT 0 NOT NULL,
    grade numeric(12,7) DEFAULT 0 NOT NULL,
    raw_grade numeric(12,7) DEFAULT 0 NOT NULL,
    penalty numeric(12,7) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_states OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_states; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_states IS 'Stores user responses to an attempt, and percentage grades';


--
-- Name: mdl_question_truefalse_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_truefalse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_truefalse_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_truefalse; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_truefalse (
    id bigint DEFAULT nextval('mdl_question_truefalse_id_seq'::regclass) NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    trueanswer bigint DEFAULT 0 NOT NULL,
    falseanswer bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_question_truefalse OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_truefalse; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_truefalse IS 'Options for True-False questions';


--
-- Name: mdl_question_usages_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_question_usages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_question_usages_id_seq OWNER TO innovaedu;

--
-- Name: mdl_question_usages; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_question_usages (
    id bigint DEFAULT nextval('mdl_question_usages_id_seq'::regclass) NOT NULL,
    component character varying(255) DEFAULT ''::character varying NOT NULL,
    contextid bigint NOT NULL,
    preferredbehaviour character varying(32) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_question_usages OWNER TO innovaedu;

--
-- Name: TABLE mdl_question_usages; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_question_usages IS 'Student attempts. This table gets extended by the modules';


--
-- Name: mdl_quiz_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz (
    id bigint DEFAULT nextval('mdl_quiz_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    timeopen bigint DEFAULT 0 NOT NULL,
    timeclose bigint DEFAULT 0 NOT NULL,
    attempts integer DEFAULT 0 NOT NULL,
    attemptonlast smallint DEFAULT 0 NOT NULL,
    grademethod smallint DEFAULT 1 NOT NULL,
    decimalpoints smallint DEFAULT 2 NOT NULL,
    questionsperpage bigint DEFAULT 0 NOT NULL,
    shufflequestions smallint DEFAULT 0 NOT NULL,
    shuffleanswers smallint DEFAULT 0 NOT NULL,
    questions text NOT NULL,
    sumgrades numeric(10,5) DEFAULT 0 NOT NULL,
    grade numeric(10,5) DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    password character varying(255) DEFAULT ''::character varying NOT NULL,
    subnet character varying(255) DEFAULT ''::character varying NOT NULL,
    delay1 bigint DEFAULT 0 NOT NULL,
    delay2 bigint DEFAULT 0 NOT NULL,
    timelimit bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    showuserpicture smallint DEFAULT 0 NOT NULL,
    questiondecimalpoints smallint DEFAULT (-1) NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    showblocks smallint DEFAULT 0 NOT NULL,
    preferredbehaviour character varying(32) NOT NULL,
    reviewattempt integer DEFAULT 0 NOT NULL,
    reviewcorrectness integer DEFAULT 0 NOT NULL,
    reviewmarks integer DEFAULT 0 NOT NULL,
    reviewspecificfeedback integer DEFAULT 0 NOT NULL,
    reviewgeneralfeedback integer DEFAULT 0 NOT NULL,
    reviewrightanswer integer DEFAULT 0 NOT NULL,
    reviewoverallfeedback integer DEFAULT 0 NOT NULL,
    browsersecurity character varying(32) DEFAULT ''::character varying NOT NULL,
    navmethod character varying(16) DEFAULT 'free'::character varying NOT NULL,
    overduehandling character varying(16) DEFAULT 'autoabandon'::character varying NOT NULL,
    graceperiod bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_quiz OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz IS 'Main information about each quiz';


--
-- Name: mdl_quiz_attempts_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_attempts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_attempts_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_attempts; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_attempts (
    id bigint DEFAULT nextval('mdl_quiz_attempts_id_seq'::regclass) NOT NULL,
    uniqueid bigint DEFAULT 0 NOT NULL,
    quiz bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    attempt integer DEFAULT 0 NOT NULL,
    sumgrades numeric(10,5),
    timestart bigint DEFAULT 0 NOT NULL,
    timefinish bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    layout text NOT NULL,
    preview smallint DEFAULT 0 NOT NULL,
    needsupgradetonewqe smallint DEFAULT 0 NOT NULL,
    currentpage bigint DEFAULT 0 NOT NULL,
    state character varying(16) DEFAULT 'inprogress'::character varying NOT NULL,
    timecheckstate bigint DEFAULT 0
);


ALTER TABLE mdl_quiz_attempts OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_attempts; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_attempts IS 'Stores various attempts on a quiz';


--
-- Name: mdl_quiz_feedback_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_feedback_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_feedback_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_feedback; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_feedback (
    id bigint DEFAULT nextval('mdl_quiz_feedback_id_seq'::regclass) NOT NULL,
    quizid bigint DEFAULT 0 NOT NULL,
    feedbacktext text NOT NULL,
    mingrade numeric(10,5) DEFAULT 0 NOT NULL,
    maxgrade numeric(10,5) DEFAULT 0 NOT NULL,
    feedbacktextformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_quiz_feedback OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_feedback; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_feedback IS 'Feedback given to students based on their overall score on the test';


--
-- Name: mdl_quiz_grades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_grades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_grades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_grades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_grades (
    id bigint DEFAULT nextval('mdl_quiz_grades_id_seq'::regclass) NOT NULL,
    quiz bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    grade numeric(10,5) DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_quiz_grades OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_grades; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_grades IS 'Final quiz grade (may be best of several attempts)';


--
-- Name: mdl_quiz_overrides; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_overrides (
    id bigint NOT NULL,
    quiz bigint DEFAULT 0 NOT NULL,
    groupid bigint,
    userid bigint,
    timeopen bigint,
    timeclose bigint,
    timelimit bigint,
    attempts integer,
    password character varying(255)
);


ALTER TABLE mdl_quiz_overrides OWNER TO innovaedu;

--
-- Name: mdl_quiz_overrides_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_overrides_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_overrides_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_overrides_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_overrides_id_seq OWNED BY mdl_quiz_overrides.id;


--
-- Name: mdl_quiz_overview_regrades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_overview_regrades (
    id bigint NOT NULL,
    questionusageid bigint NOT NULL,
    slot bigint NOT NULL,
    newfraction numeric(12,7),
    oldfraction numeric(12,7),
    regraded smallint NOT NULL,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_quiz_overview_regrades OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_overview_regrades; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_overview_regrades IS 'This table records which question attempts need regrading and the grade they will be regraded to.';


--
-- Name: mdl_quiz_overview_regrades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_overview_regrades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_overview_regrades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_overview_regrades_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_overview_regrades_id_seq OWNED BY mdl_quiz_overview_regrades.id;


--
-- Name: mdl_quiz_question_instances_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_question_instances_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_question_instances_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_question_instances; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_question_instances (
    id bigint DEFAULT nextval('mdl_quiz_question_instances_id_seq'::regclass) NOT NULL,
    quiz bigint DEFAULT 0 NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    grade numeric(12,7) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_quiz_question_instances OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_question_instances; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_question_instances IS 'The grade for a question in a quiz';


--
-- Name: mdl_quiz_question_response_stats; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_question_response_stats (
    id bigint NOT NULL,
    quizstatisticsid bigint NOT NULL,
    questionid bigint NOT NULL,
    subqid character varying(100) DEFAULT ''::character varying NOT NULL,
    aid character varying(100),
    response text,
    rcount bigint,
    credit numeric(15,5) NOT NULL
);


ALTER TABLE mdl_quiz_question_response_stats OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_question_response_stats; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_question_response_stats IS 'Quiz question responses.';


--
-- Name: mdl_quiz_question_response_stats_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_question_response_stats_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_question_response_stats_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_question_response_stats_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_question_response_stats_id_seq OWNED BY mdl_quiz_question_response_stats.id;


--
-- Name: mdl_quiz_question_statistics; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_question_statistics (
    id bigint NOT NULL,
    quizstatisticsid bigint NOT NULL,
    questionid bigint NOT NULL,
    slot bigint,
    subquestion smallint NOT NULL,
    s bigint DEFAULT 0 NOT NULL,
    effectiveweight numeric(15,5),
    negcovar smallint DEFAULT 0 NOT NULL,
    discriminationindex numeric(15,5),
    discriminativeefficiency numeric(15,5),
    sd numeric(15,10),
    facility numeric(15,10),
    subquestions text,
    maxmark numeric(12,7),
    positions text,
    randomguessscore numeric(12,7)
);


ALTER TABLE mdl_quiz_question_statistics OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_question_statistics; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_question_statistics IS 'Default comment for the table, please edit me';


--
-- Name: mdl_quiz_question_statistics_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_question_statistics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_question_statistics_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_question_statistics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_question_statistics_id_seq OWNED BY mdl_quiz_question_statistics.id;


--
-- Name: mdl_quiz_question_versions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_question_versions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_question_versions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_reports; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_reports (
    id bigint NOT NULL,
    name character varying(255),
    displayorder bigint NOT NULL,
    capability character varying(255)
);


ALTER TABLE mdl_quiz_reports OWNER TO innovaedu;

--
-- Name: mdl_quiz_reports_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_reports_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_reports_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_reports_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_reports_id_seq OWNED BY mdl_quiz_reports.id;


--
-- Name: mdl_quiz_statistics; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_quiz_statistics (
    id bigint NOT NULL,
    quizid bigint NOT NULL,
    groupid bigint NOT NULL,
    allattempts smallint NOT NULL,
    timemodified bigint NOT NULL,
    firstattemptscount bigint NOT NULL,
    allattemptscount bigint NOT NULL,
    firstattemptsavg numeric(15,5),
    allattemptsavg numeric(15,5),
    median numeric(15,5),
    standarddeviation numeric(15,5),
    skewness numeric(15,10),
    kurtosis numeric(15,5),
    cic numeric(15,10),
    errorratio numeric(15,10),
    standarderror numeric(15,10)
);


ALTER TABLE mdl_quiz_statistics OWNER TO innovaedu;

--
-- Name: TABLE mdl_quiz_statistics; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_quiz_statistics IS 'table to cache results from analysis done in statistics report for quizzes.';


--
-- Name: mdl_quiz_statistics_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_quiz_statistics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_quiz_statistics_id_seq OWNER TO innovaedu;

--
-- Name: mdl_quiz_statistics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_quiz_statistics_id_seq OWNED BY mdl_quiz_statistics.id;


--
-- Name: mdl_rating; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_rating (
    id bigint NOT NULL,
    contextid bigint NOT NULL,
    itemid bigint NOT NULL,
    scaleid bigint NOT NULL,
    rating bigint NOT NULL,
    userid bigint NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    component character varying(100) DEFAULT ''::character varying NOT NULL,
    ratingarea character varying(50) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_rating OWNER TO innovaedu;

--
-- Name: mdl_rating_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_rating_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_rating_id_seq OWNER TO innovaedu;

--
-- Name: mdl_rating_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_rating_id_seq OWNED BY mdl_rating.id;


--
-- Name: mdl_registration_hubs; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_registration_hubs (
    id bigint NOT NULL,
    token character varying(255) DEFAULT ''::character varying NOT NULL,
    hubname character varying(255) DEFAULT ''::character varying NOT NULL,
    huburl character varying(255) DEFAULT ''::character varying NOT NULL,
    confirmed smallint DEFAULT 0 NOT NULL,
    secret character varying(255)
);


ALTER TABLE mdl_registration_hubs OWNER TO innovaedu;

--
-- Name: mdl_registration_hubs_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_registration_hubs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_registration_hubs_id_seq OWNER TO innovaedu;

--
-- Name: mdl_registration_hubs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_registration_hubs_id_seq OWNED BY mdl_registration_hubs.id;


--
-- Name: mdl_reportinventario; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_reportinventario (
    id bigint NOT NULL,
    iduni integer,
    name character varying(500),
    idadsarea integer,
    entities character varying(100)
);


ALTER TABLE mdl_reportinventario OWNER TO innovaedu;

--
-- Name: mdl_reportinventario_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_reportinventario_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_reportinventario_id_seq OWNER TO innovaedu;

--
-- Name: mdl_reportinventario_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_reportinventario_id_seq OWNED BY mdl_reportinventario.id;


--
-- Name: mdl_repository; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_repository (
    id bigint NOT NULL,
    type character varying(255) DEFAULT ''::character varying NOT NULL,
    visible smallint DEFAULT 1,
    sortorder bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_repository OWNER TO innovaedu;

--
-- Name: mdl_repository_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_repository_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_repository_id_seq OWNER TO innovaedu;

--
-- Name: mdl_repository_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_repository_id_seq OWNED BY mdl_repository.id;


--
-- Name: mdl_repository_instance_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_repository_instance_config (
    id bigint NOT NULL,
    instanceid bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text
);


ALTER TABLE mdl_repository_instance_config OWNER TO innovaedu;

--
-- Name: mdl_repository_instance_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_repository_instance_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_repository_instance_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_repository_instance_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_repository_instance_config_id_seq OWNED BY mdl_repository_instance_config.id;


--
-- Name: mdl_repository_instances; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_repository_instances (
    id bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    typeid bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    contextid bigint NOT NULL,
    username character varying(255),
    password character varying(255),
    timecreated bigint,
    timemodified bigint,
    readonly smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_repository_instances OWNER TO innovaedu;

--
-- Name: mdl_repository_instances_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_repository_instances_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_repository_instances_id_seq OWNER TO innovaedu;

--
-- Name: mdl_repository_instances_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_repository_instances_id_seq OWNED BY mdl_repository_instances.id;


--
-- Name: mdl_resource_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_resource_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_resource_id_seq OWNER TO innovaedu;

--
-- Name: mdl_resource; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_resource (
    id bigint DEFAULT nextval('mdl_resource_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    tobemigrated smallint DEFAULT 0 NOT NULL,
    legacyfiles smallint DEFAULT 0 NOT NULL,
    legacyfileslast bigint,
    display smallint DEFAULT 0 NOT NULL,
    displayoptions text,
    filterfiles smallint DEFAULT 0 NOT NULL,
    revision bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_resource OWNER TO innovaedu;

--
-- Name: TABLE mdl_resource; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_resource IS 'each record is one resource and its config data';


--
-- Name: mdl_resource_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_resource_old (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    type character varying(30) DEFAULT ''::character varying NOT NULL,
    reference character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    alltext text NOT NULL,
    popup text NOT NULL,
    options character varying(255) DEFAULT ''::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    cmid bigint,
    newmodule character varying(50),
    newid bigint,
    migrated bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_resource_old OWNER TO innovaedu;

--
-- Name: mdl_resource_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_resource_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_resource_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_resource_old_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_resource_old_id_seq OWNED BY mdl_resource_old.id;


--
-- Name: mdl_role_allow_assign_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_allow_assign_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_allow_assign_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_allow_assign; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_allow_assign (
    id bigint DEFAULT nextval('mdl_role_allow_assign_id_seq'::regclass) NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    allowassign bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_role_allow_assign OWNER TO innovaedu;

--
-- Name: TABLE mdl_role_allow_assign; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role_allow_assign IS 'this defines what role can assign what role';


--
-- Name: mdl_role_allow_override_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_allow_override_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_allow_override_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_allow_override; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_allow_override (
    id bigint DEFAULT nextval('mdl_role_allow_override_id_seq'::regclass) NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    allowoverride bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_role_allow_override OWNER TO innovaedu;

--
-- Name: TABLE mdl_role_allow_override; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role_allow_override IS 'this defines what role can override what role';


--
-- Name: mdl_role_allow_switch; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_allow_switch (
    id bigint NOT NULL,
    roleid bigint NOT NULL,
    allowswitch bigint NOT NULL
);


ALTER TABLE mdl_role_allow_switch OWNER TO innovaedu;

--
-- Name: mdl_role_allow_switch_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_allow_switch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_allow_switch_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_allow_switch_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_role_allow_switch_id_seq OWNED BY mdl_role_allow_switch.id;


--
-- Name: mdl_role_capabilities_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_capabilities_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_capabilities_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_capabilities; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_capabilities (
    id bigint DEFAULT nextval('mdl_role_capabilities_id_seq'::regclass) NOT NULL,
    contextid bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    capability character varying(255) DEFAULT ''::character varying NOT NULL,
    permission bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    modifierid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_role_capabilities OWNER TO innovaedu;

--
-- Name: TABLE mdl_role_capabilities; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role_capabilities IS 'permission has to be signed, overriding a capability for a particular role in a particular context';


--
-- Name: mdl_role_context_levels; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_context_levels (
    id bigint NOT NULL,
    roleid bigint NOT NULL,
    contextlevel bigint NOT NULL
);


ALTER TABLE mdl_role_context_levels OWNER TO innovaedu;

--
-- Name: mdl_role_context_levels_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_context_levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_context_levels_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_context_levels_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_role_context_levels_id_seq OWNED BY mdl_role_context_levels.id;


--
-- Name: mdl_role_names_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_names_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_names_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_names; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_names (
    id bigint DEFAULT nextval('mdl_role_names_id_seq'::regclass) NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    contextid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_role_names OWNER TO innovaedu;

--
-- Name: TABLE mdl_role_names; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_role_names IS 'role names in native strings';


--
-- Name: mdl_role_sortorder; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_role_sortorder (
    id bigint NOT NULL,
    userid bigint NOT NULL,
    roleid bigint NOT NULL,
    contextid bigint NOT NULL,
    sortoder bigint NOT NULL
);


ALTER TABLE mdl_role_sortorder OWNER TO innovaedu;

--
-- Name: mdl_role_sortorder_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_role_sortorder_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_role_sortorder_id_seq OWNER TO innovaedu;

--
-- Name: mdl_role_sortorder_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_role_sortorder_id_seq OWNED BY mdl_role_sortorder.id;


--
-- Name: mdl_scale_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scale_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scale_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scale; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scale (
    id bigint DEFAULT nextval('mdl_scale_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    scale text NOT NULL,
    description text NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    descriptionformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_scale OWNER TO innovaedu;

--
-- Name: TABLE mdl_scale; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scale IS 'Defines grading scales';


--
-- Name: mdl_scale_history; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scale_history (
    id bigint NOT NULL,
    action bigint DEFAULT 0 NOT NULL,
    oldid bigint NOT NULL,
    source character varying(255),
    timemodified bigint,
    loggeduser bigint,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    scale text NOT NULL,
    description text NOT NULL
);


ALTER TABLE mdl_scale_history OWNER TO innovaedu;

--
-- Name: mdl_scale_history_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scale_history_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scale_history_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scale_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_scale_history_id_seq OWNED BY mdl_scale_history.id;


--
-- Name: mdl_scorm_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm (
    id bigint DEFAULT nextval('mdl_scorm_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    reference character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    version character varying(9) DEFAULT ''::character varying NOT NULL,
    maxgrade double precision DEFAULT 0 NOT NULL,
    grademethod smallint DEFAULT 0 NOT NULL,
    whatgrade bigint DEFAULT 0 NOT NULL,
    maxattempt bigint DEFAULT 1 NOT NULL,
    updatefreq smallint DEFAULT 0 NOT NULL,
    md5hash character varying(32) DEFAULT ''::character varying NOT NULL,
    launch bigint DEFAULT 0 NOT NULL,
    skipview smallint DEFAULT 1 NOT NULL,
    hidebrowse smallint DEFAULT 0 NOT NULL,
    hidetoc smallint DEFAULT 0 NOT NULL,
    hidenav smallint DEFAULT 0 NOT NULL,
    auto smallint DEFAULT 0 NOT NULL,
    popup smallint DEFAULT 0 NOT NULL,
    options character varying(255) DEFAULT ''::character varying NOT NULL,
    width bigint DEFAULT 100 NOT NULL,
    height bigint DEFAULT 600 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    scormtype character varying(50) DEFAULT 'local'::character varying NOT NULL,
    sha1hash character varying(40),
    revision bigint DEFAULT 0 NOT NULL,
    forcecompleted smallint DEFAULT 1 NOT NULL,
    forcenewattempt smallint DEFAULT 0 NOT NULL,
    lastattemptlock smallint DEFAULT 0 NOT NULL,
    displayattemptstatus smallint DEFAULT 1 NOT NULL,
    displaycoursestructure smallint DEFAULT 1 NOT NULL,
    timeopen bigint DEFAULT 0 NOT NULL,
    timeclose bigint DEFAULT 0 NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL,
    completionstatusrequired smallint,
    completionscorerequired smallint
);


ALTER TABLE mdl_scorm OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm IS 'each table is one SCORM module and its configuration';


--
-- Name: mdl_scorm_aicc_session; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_aicc_session (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    scormid bigint DEFAULT 0 NOT NULL,
    hacpsession character varying(255) DEFAULT ''::character varying NOT NULL,
    scoid bigint DEFAULT 0,
    scormmode character varying(50),
    scormstatus character varying(255),
    attempt bigint,
    lessonstatus character varying(255),
    sessiontime character varying(255),
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_scorm_aicc_session OWNER TO innovaedu;

--
-- Name: mdl_scorm_aicc_session_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_aicc_session_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_aicc_session_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_aicc_session_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_scorm_aicc_session_id_seq OWNED BY mdl_scorm_aicc_session.id;


--
-- Name: mdl_scorm_scoes_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_scoes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_scoes_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_scoes; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_scoes (
    id bigint DEFAULT nextval('mdl_scorm_scoes_id_seq'::regclass) NOT NULL,
    scorm bigint DEFAULT 0 NOT NULL,
    manifest character varying(255) DEFAULT ''::character varying NOT NULL,
    organization character varying(255) DEFAULT ''::character varying NOT NULL,
    parent character varying(255) DEFAULT ''::character varying NOT NULL,
    identifier character varying(255) DEFAULT ''::character varying NOT NULL,
    launch text NOT NULL,
    scormtype character varying(5) DEFAULT ''::character varying NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_scorm_scoes OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_scoes; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_scoes IS 'each SCO part of the SCORM module';


--
-- Name: mdl_scorm_scoes_data_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_scoes_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_scoes_data_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_scoes_data; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_scoes_data (
    id bigint DEFAULT nextval('mdl_scorm_scoes_data_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value text NOT NULL
);


ALTER TABLE mdl_scorm_scoes_data OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_scoes_data; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_scoes_data IS 'Contains variable data get from packages';


--
-- Name: mdl_scorm_scoes_track_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_scoes_track_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_scoes_track_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_scoes_track; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_scoes_track (
    id bigint DEFAULT nextval('mdl_scorm_scoes_track_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    scormid bigint DEFAULT 0 NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    attempt bigint DEFAULT 1 NOT NULL,
    element character varying(255) DEFAULT ''::character varying NOT NULL,
    value text NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_scorm_scoes_track OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_scoes_track; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_scoes_track IS 'to track SCOes';


--
-- Name: mdl_scorm_seq_mapinfo_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_mapinfo_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_mapinfo_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_mapinfo; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_mapinfo (
    id bigint DEFAULT nextval('mdl_scorm_seq_mapinfo_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    objectiveid bigint DEFAULT 0 NOT NULL,
    targetobjectiveid bigint DEFAULT 0 NOT NULL,
    readsatisfiedstatus smallint DEFAULT 1 NOT NULL,
    readnormalizedmeasure smallint DEFAULT 1 NOT NULL,
    writesatisfiedstatus smallint DEFAULT 0 NOT NULL,
    writenormalizedmeasure smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_scorm_seq_mapinfo OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_mapinfo; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_mapinfo IS 'SCORM2004 objective mapinfo description';


--
-- Name: mdl_scorm_seq_objective_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_objective_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_objective_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_objective; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_objective (
    id bigint DEFAULT nextval('mdl_scorm_seq_objective_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    primaryobj smallint DEFAULT 0 NOT NULL,
    objectiveid character varying(255) DEFAULT ''::character varying NOT NULL,
    satisfiedbymeasure smallint DEFAULT 1 NOT NULL,
    minnormalizedmeasure real DEFAULT 0.0000 NOT NULL
);


ALTER TABLE mdl_scorm_seq_objective OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_objective; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_objective IS 'SCORM2004 objective description';


--
-- Name: mdl_scorm_seq_rolluprule_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_rolluprule_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_rolluprule_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_rolluprule; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_rolluprule (
    id bigint DEFAULT nextval('mdl_scorm_seq_rolluprule_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    childactivityset character varying(15) DEFAULT ''::character varying NOT NULL,
    minimumcount bigint DEFAULT 0 NOT NULL,
    minimumpercent real DEFAULT 0.0000 NOT NULL,
    conditioncombination character varying(3) DEFAULT 'all'::character varying NOT NULL,
    action character varying(15) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_scorm_seq_rolluprule OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_rolluprule; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_rolluprule IS 'SCORM2004 sequencing rule';


--
-- Name: mdl_scorm_seq_rolluprulecond_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_rolluprulecond_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_rolluprulecond_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_rolluprulecond; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_rolluprulecond (
    id bigint DEFAULT nextval('mdl_scorm_seq_rolluprulecond_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    rollupruleid bigint DEFAULT 0 NOT NULL,
    operator character varying(5) DEFAULT 'noOp'::character varying NOT NULL,
    cond character varying(25) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_scorm_seq_rolluprulecond OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_rolluprulecond; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_rolluprulecond IS 'SCORM2004 sequencing rule';


--
-- Name: mdl_scorm_seq_rulecond_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_rulecond_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_rulecond_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_rulecond; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_rulecond (
    id bigint DEFAULT nextval('mdl_scorm_seq_rulecond_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    ruleconditionsid bigint DEFAULT 0 NOT NULL,
    refrencedobjective character varying(255) DEFAULT ''::character varying NOT NULL,
    measurethreshold real DEFAULT 0.0000 NOT NULL,
    operator character varying(5) DEFAULT 'noOp'::character varying NOT NULL,
    cond character varying(30) DEFAULT 'always'::character varying NOT NULL
);


ALTER TABLE mdl_scorm_seq_rulecond OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_rulecond; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_rulecond IS 'SCORM2004 rule condition';


--
-- Name: mdl_scorm_seq_ruleconds_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_scorm_seq_ruleconds_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_scorm_seq_ruleconds_id_seq OWNER TO innovaedu;

--
-- Name: mdl_scorm_seq_ruleconds; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_scorm_seq_ruleconds (
    id bigint DEFAULT nextval('mdl_scorm_seq_ruleconds_id_seq'::regclass) NOT NULL,
    scoid bigint DEFAULT 0 NOT NULL,
    conditioncombination character varying(3) DEFAULT 'all'::character varying NOT NULL,
    ruletype smallint DEFAULT 0 NOT NULL,
    action character varying(25) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_scorm_seq_ruleconds OWNER TO innovaedu;

--
-- Name: TABLE mdl_scorm_seq_ruleconds; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_scorm_seq_ruleconds IS 'SCORM2004 rule conditions';


--
-- Name: mdl_sessions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_sessions (
    id bigint NOT NULL,
    state bigint DEFAULT 0 NOT NULL,
    sid character varying(128) DEFAULT ''::character varying NOT NULL,
    userid bigint NOT NULL,
    sessdata text,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    firstip character varying(45),
    lastip character varying(45)
);


ALTER TABLE mdl_sessions OWNER TO innovaedu;

--
-- Name: mdl_sessions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_sessions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_sessions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_sessions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_sessions_id_seq OWNED BY mdl_sessions.id;


--
-- Name: mdl_stats_daily_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_daily_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_daily_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_daily; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_daily (
    id bigint DEFAULT nextval('mdl_stats_daily_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    stattype character varying(20) DEFAULT 'activity'::character varying NOT NULL,
    stat1 bigint DEFAULT 0 NOT NULL,
    stat2 bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_stats_daily OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_daily; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_daily IS 'to accumulate daily stats';


--
-- Name: mdl_stats_monthly_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_monthly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_monthly_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_monthly; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_monthly (
    id bigint DEFAULT nextval('mdl_stats_monthly_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    stattype character varying(20) DEFAULT 'activity'::character varying NOT NULL,
    stat1 bigint DEFAULT 0 NOT NULL,
    stat2 bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_stats_monthly OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_monthly; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_monthly IS 'To accumulate monthly stats';


--
-- Name: mdl_stats_user_daily_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_user_daily_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_user_daily_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_user_daily; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_user_daily (
    id bigint DEFAULT nextval('mdl_stats_user_daily_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    statsreads bigint DEFAULT 0 NOT NULL,
    statswrites bigint DEFAULT 0 NOT NULL,
    stattype character varying(30) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_stats_user_daily OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_user_daily; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_user_daily IS 'To accumulate daily stats per course/user';


--
-- Name: mdl_stats_user_monthly_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_user_monthly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_user_monthly_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_user_monthly; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_user_monthly (
    id bigint DEFAULT nextval('mdl_stats_user_monthly_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    statsreads bigint DEFAULT 0 NOT NULL,
    statswrites bigint DEFAULT 0 NOT NULL,
    stattype character varying(30) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_stats_user_monthly OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_user_monthly; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_user_monthly IS 'To accumulate monthly stats per course/user';


--
-- Name: mdl_stats_user_weekly_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_user_weekly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_user_weekly_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_user_weekly; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_user_weekly (
    id bigint DEFAULT nextval('mdl_stats_user_weekly_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    statsreads bigint DEFAULT 0 NOT NULL,
    statswrites bigint DEFAULT 0 NOT NULL,
    stattype character varying(30) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_stats_user_weekly OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_user_weekly; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_user_weekly IS 'To accumulate weekly stats per course/user';


--
-- Name: mdl_stats_weekly_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_stats_weekly_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_stats_weekly_id_seq OWNER TO innovaedu;

--
-- Name: mdl_stats_weekly; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_stats_weekly (
    id bigint DEFAULT nextval('mdl_stats_weekly_id_seq'::regclass) NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 0 NOT NULL,
    roleid bigint DEFAULT 0 NOT NULL,
    stattype character varying(20) DEFAULT 'activity'::character varying NOT NULL,
    stat1 bigint DEFAULT 0 NOT NULL,
    stat2 bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_stats_weekly OWNER TO innovaedu;

--
-- Name: TABLE mdl_stats_weekly; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_stats_weekly IS 'To accumulate weekly stats';


--
-- Name: mdl_subcat_course_id_exp_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_subcat_course_id_exp_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_subcat_course_id_exp_seq OWNER TO innovaedu;

--
-- Name: mdl_subcat_course_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_subcat_course_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_subcat_course_id_seq OWNER TO innovaedu;

--
-- Name: mdl_subcategory_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_subcategory_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_subcategory_id_seq OWNER TO innovaedu;

--
-- Name: mdl_survey_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_survey_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_survey_id_seq OWNER TO innovaedu;

--
-- Name: mdl_survey; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_survey (
    id bigint DEFAULT nextval('mdl_survey_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    template bigint DEFAULT 0 NOT NULL,
    days integer DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text NOT NULL,
    questions character varying(255) DEFAULT ''::character varying NOT NULL,
    introformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_survey OWNER TO innovaedu;

--
-- Name: TABLE mdl_survey; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_survey IS 'Each record is one SURVEY module with its configuration';


--
-- Name: mdl_survey_analysis_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_survey_analysis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_survey_analysis_id_seq OWNER TO innovaedu;

--
-- Name: mdl_survey_analysis; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_survey_analysis (
    id bigint DEFAULT nextval('mdl_survey_analysis_id_seq'::regclass) NOT NULL,
    survey bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    notes text NOT NULL
);


ALTER TABLE mdl_survey_analysis OWNER TO innovaedu;

--
-- Name: TABLE mdl_survey_analysis; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_survey_analysis IS 'text about each survey submission';


--
-- Name: mdl_survey_answers_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_survey_answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_survey_answers_id_seq OWNER TO innovaedu;

--
-- Name: mdl_survey_answers; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_survey_answers (
    id bigint DEFAULT nextval('mdl_survey_answers_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    survey bigint DEFAULT 0 NOT NULL,
    question bigint DEFAULT 0 NOT NULL,
    "time" bigint DEFAULT 0 NOT NULL,
    answer1 text NOT NULL,
    answer2 text NOT NULL
);


ALTER TABLE mdl_survey_answers OWNER TO innovaedu;

--
-- Name: TABLE mdl_survey_answers; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_survey_answers IS 'the answers to each questions filled by the users';


--
-- Name: mdl_survey_questions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_survey_questions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_survey_questions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_survey_questions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_survey_questions (
    id bigint DEFAULT nextval('mdl_survey_questions_id_seq'::regclass) NOT NULL,
    text character varying(255) DEFAULT ''::character varying NOT NULL,
    shorttext character varying(30) DEFAULT ''::character varying NOT NULL,
    multi character varying(100) DEFAULT ''::character varying NOT NULL,
    intro character varying(50) DEFAULT ''::character varying NOT NULL,
    type smallint DEFAULT 0 NOT NULL,
    options text
);


ALTER TABLE mdl_survey_questions OWNER TO innovaedu;

--
-- Name: TABLE mdl_survey_questions; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_survey_questions IS 'the questions conforming one survey';


--
-- Name: mdl_tag; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tag (
    id bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    tagtype character varying(255),
    description text,
    descriptionformat smallint DEFAULT 0 NOT NULL,
    flag smallint DEFAULT 0,
    timemodified bigint,
    rawname character varying(255) DEFAULT ''::character varying NOT NULL,
    userid bigint NOT NULL
);


ALTER TABLE mdl_tag OWNER TO innovaedu;

--
-- Name: mdl_tag_correlation; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tag_correlation (
    id bigint NOT NULL,
    correlatedtags text NOT NULL,
    tagid bigint NOT NULL
);


ALTER TABLE mdl_tag_correlation OWNER TO innovaedu;

--
-- Name: mdl_tag_correlation_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tag_correlation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tag_correlation_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tag_correlation_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tag_correlation_id_seq OWNED BY mdl_tag_correlation.id;


--
-- Name: mdl_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tag_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tag_id_seq OWNED BY mdl_tag.id;


--
-- Name: mdl_tag_instance; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tag_instance (
    id bigint NOT NULL,
    itemtype character varying(255) DEFAULT ''::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    tagid bigint NOT NULL,
    itemid bigint NOT NULL,
    ordering bigint,
    tiuserid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_tag_instance OWNER TO innovaedu;

--
-- Name: mdl_tag_instance_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tag_instance_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tag_instance_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tag_instance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tag_instance_id_seq OWNED BY mdl_tag_instance.id;


--
-- Name: mdl_tags_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tags_id_seq OWNER TO innovaedu;

--
-- Name: mdl_temp_enroled_template; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_temp_enroled_template (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    courseid bigint DEFAULT 0 NOT NULL,
    roleid bigint NOT NULL
);


ALTER TABLE mdl_temp_enroled_template OWNER TO innovaedu;

--
-- Name: mdl_temp_enroled_template_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_temp_enroled_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_temp_enroled_template_id_seq OWNER TO innovaedu;

--
-- Name: mdl_temp_enroled_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_temp_enroled_template_id_seq OWNED BY mdl_temp_enroled_template.id;


--
-- Name: mdl_temp_log_template; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_temp_log_template (
    id bigint NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    action character varying(40) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_temp_log_template OWNER TO innovaedu;

--
-- Name: mdl_temp_log_template_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_temp_log_template_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_temp_log_template_id_seq OWNER TO innovaedu;

--
-- Name: mdl_temp_log_template_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_temp_log_template_id_seq OWNED BY mdl_temp_log_template.id;


--
-- Name: mdl_temporary_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_temporary_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_temporary_id_seq OWNER TO innovaedu;

--
-- Name: mdl_timezone_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_timezone_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_timezone_id_seq OWNER TO innovaedu;

--
-- Name: mdl_timezone; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_timezone (
    id bigint DEFAULT nextval('mdl_timezone_id_seq'::regclass) NOT NULL,
    name character varying(100) DEFAULT ''::character varying NOT NULL,
    year bigint DEFAULT 0 NOT NULL,
    tzrule character varying(20) DEFAULT ''::character varying NOT NULL,
    gmtoff bigint DEFAULT 0 NOT NULL,
    dstoff bigint DEFAULT 0 NOT NULL,
    dst_month smallint DEFAULT 0 NOT NULL,
    dst_startday smallint DEFAULT 0 NOT NULL,
    dst_weekday smallint DEFAULT 0 NOT NULL,
    dst_skipweeks smallint DEFAULT 0 NOT NULL,
    dst_time character varying(6) DEFAULT '00:00'::character varying NOT NULL,
    std_month smallint DEFAULT 0 NOT NULL,
    std_startday smallint DEFAULT 0 NOT NULL,
    std_weekday smallint DEFAULT 0 NOT NULL,
    std_skipweeks smallint DEFAULT 0 NOT NULL,
    std_time character varying(6) DEFAULT '00:00'::character varying NOT NULL
);


ALTER TABLE mdl_timezone OWNER TO innovaedu;

--
-- Name: TABLE mdl_timezone; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_timezone IS 'Rules for calculating local wall clock time for users';


--
-- Name: mdl_tmp_user; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tmp_user (
    usuario character varying(30) NOT NULL,
    rfc character varying(30),
    curp character varying(30),
    clavecat bigint,
    nomcat character varying(100),
    clvdepto character varying(100),
    nomdepto character varying(100),
    direccion character varying(100),
    fching date,
    aa integer,
    aq integer,
    ad double precision,
    sexo character(1),
    fchnac date
);


ALTER TABLE mdl_tmp_user OWNER TO innovaedu;

--
-- Name: mdl_tmpaero; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tmpaero (
    id integer NOT NULL,
    id_ads integer DEFAULT 0 NOT NULL,
    fase integer DEFAULT 3 NOT NULL
);


ALTER TABLE mdl_tmpaero OWNER TO innovaedu;

--
-- Name: mdl_tmpaero_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tmpaero_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tmpaero_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tmpaero_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tmpaero_id_seq OWNED BY mdl_tmpaero.id;


--
-- Name: mdl_tool_customlang; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tool_customlang (
    id bigint NOT NULL,
    lang character varying(20) DEFAULT ''::character varying NOT NULL,
    componentid bigint NOT NULL,
    stringid character varying(255) DEFAULT ''::character varying NOT NULL,
    original text NOT NULL,
    master text,
    local text,
    timemodified bigint NOT NULL,
    timecustomized bigint,
    outdated smallint DEFAULT 0,
    modified smallint DEFAULT 0
);


ALTER TABLE mdl_tool_customlang OWNER TO innovaedu;

--
-- Name: TABLE mdl_tool_customlang; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_tool_customlang IS 'Contains the working checkout of all strings and their customization';


--
-- Name: mdl_tool_customlang_components; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tool_customlang_components (
    id bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    version character varying(255)
);


ALTER TABLE mdl_tool_customlang_components OWNER TO innovaedu;

--
-- Name: TABLE mdl_tool_customlang_components; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_tool_customlang_components IS 'Contains the list of all installed plugins that provide their own language pack';


--
-- Name: mdl_tool_customlang_components_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tool_customlang_components_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tool_customlang_components_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tool_customlang_components_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tool_customlang_components_id_seq OWNED BY mdl_tool_customlang_components.id;


--
-- Name: mdl_tool_customlang_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_tool_customlang_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tool_customlang_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tool_customlang_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_tool_customlang_id_seq OWNED BY mdl_tool_customlang.id;


--
-- Name: mdl_upgrade_log; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_upgrade_log (
    id bigint NOT NULL,
    type bigint NOT NULL,
    plugin character varying(100),
    version character varying(100),
    targetversion character varying(100),
    info character varying(255) DEFAULT ''::character varying NOT NULL,
    details text,
    backtrace text,
    userid bigint NOT NULL,
    timemodified bigint NOT NULL
);


ALTER TABLE mdl_upgrade_log OWNER TO innovaedu;

--
-- Name: mdl_upgrade_log_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_upgrade_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_upgrade_log_id_seq OWNER TO innovaedu;

--
-- Name: mdl_upgrade_log_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_upgrade_log_id_seq OWNED BY mdl_upgrade_log.id;


--
-- Name: mdl_url; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_url (
    id bigint NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    externalurl text NOT NULL,
    display smallint DEFAULT 0 NOT NULL,
    displayoptions text,
    parameters text,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_url OWNER TO innovaedu;

--
-- Name: TABLE mdl_url; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_url IS 'each record is one url resource';


--
-- Name: mdl_url_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_url_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_url_id_seq OWNER TO innovaedu;

--
-- Name: mdl_url_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_url_id_seq OWNED BY mdl_url.id;


--
-- Name: mdl_user_enrolments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_enrolments (
    id bigint NOT NULL,
    status bigint DEFAULT 0 NOT NULL,
    enrolid bigint NOT NULL,
    userid bigint NOT NULL,
    timestart bigint DEFAULT 0 NOT NULL,
    timeend bigint DEFAULT 2147483647 NOT NULL,
    modifierid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_user_enrolments OWNER TO innovaedu;

--
-- Name: mdl_user_enrolments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_enrolments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_enrolments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_enrolments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_user_enrolments_id_seq OWNED BY mdl_user_enrolments.id;


--
-- Name: mdl_user_info_category_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_info_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_info_category_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_info_category; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_info_category (
    id bigint DEFAULT nextval('mdl_user_info_category_id_seq'::regclass) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_user_info_category OWNER TO innovaedu;

--
-- Name: TABLE mdl_user_info_category; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user_info_category IS 'Customisable fields categories';


--
-- Name: mdl_user_info_data_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_info_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_info_data_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_info_data; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_info_data (
    id bigint DEFAULT nextval('mdl_user_info_data_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    fieldid bigint DEFAULT 0 NOT NULL,
    data text NOT NULL,
    dataformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_user_info_data OWNER TO innovaedu;

--
-- Name: TABLE mdl_user_info_data; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user_info_data IS 'Data for the customisable user fields';


--
-- Name: mdl_user_info_field_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_info_field_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_info_field_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_info_field; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_info_field (
    id bigint DEFAULT nextval('mdl_user_info_field_id_seq'::regclass) NOT NULL,
    shortname character varying(255) DEFAULT 'shortname'::character varying NOT NULL,
    name text NOT NULL,
    datatype character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    categoryid bigint DEFAULT 0 NOT NULL,
    sortorder bigint DEFAULT 0 NOT NULL,
    required smallint DEFAULT 0 NOT NULL,
    locked smallint DEFAULT 0 NOT NULL,
    visible smallint DEFAULT 0 NOT NULL,
    defaultdata text,
    param1 text,
    param2 text,
    param3 text,
    param4 text,
    param5 text,
    forceunique smallint DEFAULT 0 NOT NULL,
    signup smallint DEFAULT 0 NOT NULL,
    defaultdataformat smallint DEFAULT 0 NOT NULL,
    descriptionformat smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_user_info_field OWNER TO innovaedu;

--
-- Name: TABLE mdl_user_info_field; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user_info_field IS 'Customisable user profile fields';


--
-- Name: mdl_user_preferences_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_preferences_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_preferences_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_preferences; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_preferences (
    id bigint DEFAULT nextval('mdl_user_preferences_id_seq'::regclass) NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value character varying(1333) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE mdl_user_preferences OWNER TO innovaedu;

--
-- Name: TABLE mdl_user_preferences; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_user_preferences IS 'Allows modules to store arbitrary user preferences';


--
-- Name: mdl_user_private_key; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_user_private_key (
    id bigint NOT NULL,
    script character varying(128) DEFAULT ''::character varying NOT NULL,
    value character varying(128) DEFAULT ''::character varying NOT NULL,
    userid bigint NOT NULL,
    instance bigint,
    iprestriction character varying(255),
    validuntil bigint,
    timecreated bigint
);


ALTER TABLE mdl_user_private_key OWNER TO innovaedu;

--
-- Name: mdl_user_private_key_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_user_private_key_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_user_private_key_id_seq OWNER TO innovaedu;

--
-- Name: mdl_user_private_key_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_user_private_key_id_seq OWNED BY mdl_user_private_key.id;


--
-- Name: mdl_webdav_locks; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_webdav_locks (
    id bigint NOT NULL,
    token character varying(255) DEFAULT ''::character varying NOT NULL,
    path character varying(255) DEFAULT ''::character varying NOT NULL,
    expiry bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    recursive smallint DEFAULT 0 NOT NULL,
    exclusivelock smallint DEFAULT 0 NOT NULL,
    created bigint DEFAULT 0 NOT NULL,
    modified bigint DEFAULT 0 NOT NULL,
    owner character varying(255)
);


ALTER TABLE mdl_webdav_locks OWNER TO innovaedu;

--
-- Name: mdl_webdav_locks_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_webdav_locks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_webdav_locks_id_seq OWNER TO innovaedu;

--
-- Name: mdl_webdav_locks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_webdav_locks_id_seq OWNED BY mdl_webdav_locks.id;


--
-- Name: mdl_wiki_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki (
    id bigint DEFAULT nextval('mdl_wiki_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT 'Wiki'::character varying NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    catrec smallint DEFAULT 0 NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    firstpagetitle character varying(255) DEFAULT 'First Page'::character varying NOT NULL,
    wikimode character varying(20) DEFAULT 'collaborative'::character varying NOT NULL,
    defaultformat character varying(20) DEFAULT 'creole'::character varying NOT NULL,
    forceformat smallint DEFAULT 1 NOT NULL,
    editbegin bigint DEFAULT 0 NOT NULL,
    editend bigint DEFAULT 0,
    timecreated bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_wiki OWNER TO innovaedu;

--
-- Name: TABLE mdl_wiki; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_wiki IS 'Main wik table';


--
-- Name: mdl_wiki_entries_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_entries_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_entries_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_links; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_links (
    id bigint NOT NULL,
    subwikiid bigint DEFAULT 0 NOT NULL,
    frompageid bigint DEFAULT 0 NOT NULL,
    topageid bigint DEFAULT 0 NOT NULL,
    tomissingpage character varying(255)
);


ALTER TABLE mdl_wiki_links OWNER TO innovaedu;

--
-- Name: mdl_wiki_links_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_links_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_links_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_links_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_links_id_seq OWNED BY mdl_wiki_links.id;


--
-- Name: mdl_wiki_locks; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_locks (
    id bigint NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    sectionname character varying(255),
    userid bigint DEFAULT 0 NOT NULL,
    lockedat bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_wiki_locks OWNER TO innovaedu;

--
-- Name: mdl_wiki_locks_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_locks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_locks_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_locks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_locks_id_seq OWNED BY mdl_wiki_locks.id;


--
-- Name: mdl_wiki_locks_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_locks_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_locks_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_pages; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_pages (
    id bigint NOT NULL,
    subwikiid bigint DEFAULT 0 NOT NULL,
    title character varying(255) DEFAULT 'title'::character varying NOT NULL,
    cachedcontent text NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    timerendered bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    pageviews bigint DEFAULT 0 NOT NULL,
    readonly smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_wiki_pages OWNER TO innovaedu;

--
-- Name: mdl_wiki_pages_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_pages_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_pages_id_seq OWNED BY mdl_wiki_pages.id;


--
-- Name: mdl_wiki_pages_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_pages_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_pages_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_subwikis; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_subwikis (
    id bigint NOT NULL,
    wikiid bigint DEFAULT 0 NOT NULL,
    groupid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_wiki_subwikis OWNER TO innovaedu;

--
-- Name: mdl_wiki_subwikis_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_subwikis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_subwikis_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_subwikis_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_subwikis_id_seq OWNED BY mdl_wiki_subwikis.id;


--
-- Name: mdl_wiki_synonyms; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_synonyms (
    id bigint NOT NULL,
    subwikiid bigint DEFAULT 0 NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    pagesynonym character varying(255) DEFAULT 'Pagesynonym'::character varying NOT NULL
);


ALTER TABLE mdl_wiki_synonyms OWNER TO innovaedu;

--
-- Name: mdl_wiki_synonyms_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_synonyms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_synonyms_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_synonyms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_synonyms_id_seq OWNED BY mdl_wiki_synonyms.id;


--
-- Name: mdl_wiki_versions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_wiki_versions (
    id bigint NOT NULL,
    pageid bigint DEFAULT 0 NOT NULL,
    content text NOT NULL,
    contentformat character varying(20) DEFAULT 'creole'::character varying NOT NULL,
    version integer DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_wiki_versions OWNER TO innovaedu;

--
-- Name: mdl_wiki_versions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_wiki_versions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_wiki_versions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_wiki_versions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_wiki_versions_id_seq OWNED BY mdl_wiki_versions.id;


--
-- Name: mdl_workshop; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop (
    id bigint NOT NULL,
    course bigint NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    intro text,
    introformat smallint DEFAULT 0 NOT NULL,
    instructauthors text,
    instructauthorsformat smallint DEFAULT 0 NOT NULL,
    instructreviewers text,
    instructreviewersformat smallint DEFAULT 0 NOT NULL,
    timemodified bigint NOT NULL,
    phase smallint DEFAULT 0,
    useexamples smallint DEFAULT 0,
    usepeerassessment smallint DEFAULT 0,
    useselfassessment smallint DEFAULT 0,
    grade numeric(10,5) DEFAULT 80,
    gradinggrade numeric(10,5) DEFAULT 20,
    strategy character varying(30) DEFAULT ''::character varying NOT NULL,
    gradedecimals smallint DEFAULT 0,
    nattachments smallint DEFAULT 0,
    latesubmissions smallint DEFAULT 0,
    maxbytes bigint DEFAULT 100000,
    examplesmode smallint DEFAULT 0,
    submissionstart bigint DEFAULT 0,
    submissionend bigint DEFAULT 0,
    assessmentstart bigint DEFAULT 0,
    assessmentend bigint DEFAULT 0,
    evaluation character varying(30) DEFAULT ''::character varying NOT NULL,
    phaseswitchassessment smallint DEFAULT 0 NOT NULL,
    conclusion text,
    conclusionformat smallint DEFAULT 1 NOT NULL,
    overallfeedbackmode smallint DEFAULT 1,
    overallfeedbackfiles smallint DEFAULT 0,
    overallfeedbackmaxbytes bigint DEFAULT 100000
);


ALTER TABLE mdl_workshop OWNER TO innovaedu;

--
-- Name: mdl_workshop_aggregations; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_aggregations (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    userid bigint NOT NULL,
    gradinggrade numeric(10,5),
    timegraded bigint
);


ALTER TABLE mdl_workshop_aggregations OWNER TO innovaedu;

--
-- Name: mdl_workshop_aggregations_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_aggregations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_aggregations_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_aggregations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshop_aggregations_id_seq OWNED BY mdl_workshop_aggregations.id;


--
-- Name: mdl_workshop_assessments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_assessments (
    id bigint NOT NULL,
    submissionid bigint NOT NULL,
    reviewerid bigint NOT NULL,
    weight bigint DEFAULT 1 NOT NULL,
    timecreated bigint DEFAULT 0,
    timemodified bigint DEFAULT 0,
    grade numeric(10,5),
    gradinggrade numeric(10,5),
    gradinggradeover numeric(10,5),
    gradinggradeoverby bigint,
    feedbackauthor text,
    feedbackauthorformat smallint DEFAULT 0,
    feedbackreviewer text,
    feedbackreviewerformat smallint DEFAULT 0,
    feedbackauthorattachment smallint DEFAULT 0
);


ALTER TABLE mdl_workshop_assessments OWNER TO innovaedu;

--
-- Name: mdl_workshop_assessments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_assessments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_assessments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_assessments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshop_assessments_id_seq OWNED BY mdl_workshop_assessments.id;


--
-- Name: mdl_workshop_assessments_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_assessments_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_assessments_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_assessments_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_assessments_old (
    id bigint DEFAULT nextval('mdl_workshop_assessments_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    submissionid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    timegraded bigint DEFAULT 0 NOT NULL,
    timeagreed bigint DEFAULT 0 NOT NULL,
    grade double precision DEFAULT 0 NOT NULL,
    gradinggrade smallint DEFAULT 0 NOT NULL,
    teachergraded smallint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL,
    resubmission smallint DEFAULT 0 NOT NULL,
    donotuse smallint DEFAULT 0 NOT NULL,
    generalcomment text NOT NULL,
    teachercomment text NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_assessments_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_assessments_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_assessments_old IS 'Info about assessments by teacher and students';


--
-- Name: mdl_workshop_comments_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_comments_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_comments_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_comments_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_comments_old (
    id bigint DEFAULT nextval('mdl_workshop_comments_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    assessmentid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL,
    comments text NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_comments_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_comments_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_comments_old IS 'Defines comments';


--
-- Name: mdl_workshop_elements_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_elements_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_elements_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_elements_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_elements_old (
    id bigint DEFAULT nextval('mdl_workshop_elements_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    elementno smallint DEFAULT 0 NOT NULL,
    description text NOT NULL,
    scale smallint DEFAULT 0 NOT NULL,
    maxscore smallint DEFAULT 1 NOT NULL,
    weight smallint DEFAULT 11 NOT NULL,
    stddev double precision DEFAULT 0 NOT NULL,
    totalassessments bigint DEFAULT 0 NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_elements_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_elements_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_elements_old IS 'Info about marking scheme of assignment';


--
-- Name: mdl_workshop_grades; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_grades (
    id bigint NOT NULL,
    assessmentid bigint NOT NULL,
    strategy character varying(30) DEFAULT ''::character varying NOT NULL,
    dimensionid bigint NOT NULL,
    grade numeric(10,5) NOT NULL,
    peercomment text,
    peercommentformat smallint DEFAULT 0
);


ALTER TABLE mdl_workshop_grades OWNER TO innovaedu;

--
-- Name: mdl_workshop_grades_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_grades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_grades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_grades_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshop_grades_id_seq OWNED BY mdl_workshop_grades.id;


--
-- Name: mdl_workshop_grades_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_grades_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_grades_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_grades_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_grades_old (
    id bigint DEFAULT nextval('mdl_workshop_grades_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    assessmentid bigint DEFAULT 0 NOT NULL,
    elementno bigint DEFAULT 0 NOT NULL,
    feedback text NOT NULL,
    grade smallint DEFAULT 0 NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_grades_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_grades_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_grades_old IS 'Info about individual grades given to each element';


--
-- Name: mdl_workshop_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshop_id_seq OWNED BY mdl_workshop.id;


--
-- Name: mdl_workshop_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_old (
    id bigint DEFAULT nextval('mdl_workshop_old_id_seq'::regclass) NOT NULL,
    course bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text NOT NULL,
    wtype smallint DEFAULT 0 NOT NULL,
    nelements smallint DEFAULT 1 NOT NULL,
    nattachments smallint DEFAULT 0 NOT NULL,
    phase smallint DEFAULT 0 NOT NULL,
    format smallint DEFAULT 0 NOT NULL,
    gradingstrategy smallint DEFAULT 1 NOT NULL,
    resubmit smallint DEFAULT 0 NOT NULL,
    agreeassessments smallint DEFAULT 0 NOT NULL,
    hidegrades smallint DEFAULT 0 NOT NULL,
    anonymous smallint DEFAULT 0 NOT NULL,
    includeself smallint DEFAULT 0 NOT NULL,
    maxbytes bigint DEFAULT 100000 NOT NULL,
    submissionstart bigint DEFAULT 0 NOT NULL,
    assessmentstart bigint DEFAULT 0 NOT NULL,
    submissionend bigint DEFAULT 0 NOT NULL,
    assessmentend bigint DEFAULT 0 NOT NULL,
    releasegrades bigint DEFAULT 0 NOT NULL,
    grade smallint DEFAULT 0 NOT NULL,
    gradinggrade smallint DEFAULT 0 NOT NULL,
    ntassessments smallint DEFAULT 0 NOT NULL,
    assessmentcomps smallint DEFAULT 2 NOT NULL,
    nsassessments smallint DEFAULT 0 NOT NULL,
    overallocation smallint DEFAULT 0 NOT NULL,
    timemodified bigint DEFAULT 0 NOT NULL,
    teacherweight smallint DEFAULT 1 NOT NULL,
    showleaguetable smallint DEFAULT 0 NOT NULL,
    usepassword smallint DEFAULT 0 NOT NULL,
    password character varying(32) DEFAULT ''::character varying NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_old IS 'Defines workshop';


--
-- Name: mdl_workshop_rubrics_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_rubrics_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_rubrics_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_rubrics_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_rubrics_old (
    id bigint DEFAULT nextval('mdl_workshop_rubrics_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    elementno bigint DEFAULT 0 NOT NULL,
    rubricno smallint DEFAULT 0 NOT NULL,
    description text NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_rubrics_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_rubrics_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_rubrics_old IS 'Info about the rubrics marking scheme';


--
-- Name: mdl_workshop_stockcomments_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_stockcomments_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_stockcomments_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_stockcomments_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_stockcomments_old (
    id bigint DEFAULT nextval('mdl_workshop_stockcomments_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    elementno bigint DEFAULT 0 NOT NULL,
    comments text NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_stockcomments_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_stockcomments_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_stockcomments_old IS 'Info about the teacher comment bank';


--
-- Name: mdl_workshop_submissions; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_submissions (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    example smallint DEFAULT 0,
    authorid bigint NOT NULL,
    timecreated bigint NOT NULL,
    timemodified bigint NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    content text,
    contentformat smallint DEFAULT 0 NOT NULL,
    contenttrust smallint DEFAULT 0 NOT NULL,
    attachment smallint DEFAULT 0,
    grade numeric(10,5),
    gradeover numeric(10,5),
    gradeoverby bigint,
    feedbackauthor text,
    feedbackauthorformat smallint DEFAULT 0,
    timegraded bigint,
    published smallint DEFAULT 0,
    late smallint DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_workshop_submissions OWNER TO innovaedu;

--
-- Name: mdl_workshop_submissions_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_submissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_submissions_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_submissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshop_submissions_id_seq OWNED BY mdl_workshop_submissions.id;


--
-- Name: mdl_workshop_submissions_old_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshop_submissions_old_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshop_submissions_old_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshop_submissions_old; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshop_submissions_old (
    id bigint DEFAULT nextval('mdl_workshop_submissions_old_id_seq'::regclass) NOT NULL,
    workshopid bigint DEFAULT 0 NOT NULL,
    userid bigint DEFAULT 0 NOT NULL,
    title character varying(100) DEFAULT ''::character varying NOT NULL,
    timecreated bigint DEFAULT 0 NOT NULL,
    mailed smallint DEFAULT 0 NOT NULL,
    description text NOT NULL,
    gradinggrade smallint DEFAULT 0 NOT NULL,
    finalgrade smallint DEFAULT 0 NOT NULL,
    late smallint DEFAULT 0 NOT NULL,
    nassessments bigint DEFAULT 0 NOT NULL,
    newplugin character varying(28),
    newid bigint
);


ALTER TABLE mdl_workshop_submissions_old OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshop_submissions_old; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshop_submissions_old IS 'Info about submitted work from teacher and students';


--
-- Name: mdl_workshopallocation_scheduled; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopallocation_scheduled (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    enabled smallint DEFAULT 0 NOT NULL,
    submissionend bigint NOT NULL,
    timeallocated bigint,
    settings text,
    resultstatus bigint,
    resultmessage character varying(1333),
    resultlog text
);


ALTER TABLE mdl_workshopallocation_scheduled OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopallocation_scheduled; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopallocation_scheduled IS 'Stores the allocation settings for the scheduled allocator';


--
-- Name: mdl_workshopallocation_scheduled_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopallocation_scheduled_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopallocation_scheduled_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopallocation_scheduled_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopallocation_scheduled_id_seq OWNED BY mdl_workshopallocation_scheduled.id;


--
-- Name: mdl_workshopeval_best_settings; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopeval_best_settings (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    comparison smallint DEFAULT 5
);


ALTER TABLE mdl_workshopeval_best_settings OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopeval_best_settings; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopeval_best_settings IS 'Settings for the grading evaluation subplugin Comparison with the best assessment.';


--
-- Name: mdl_workshopeval_best_settings_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopeval_best_settings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopeval_best_settings_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopeval_best_settings_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopeval_best_settings_id_seq OWNED BY mdl_workshopeval_best_settings.id;


--
-- Name: mdl_workshopform_accumulative; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_accumulative (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    sort bigint DEFAULT 0,
    description text,
    descriptionformat smallint DEFAULT 0,
    grade bigint NOT NULL,
    weight integer DEFAULT 1
);


ALTER TABLE mdl_workshopform_accumulative OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_accumulative; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_accumulative IS 'The assessment dimensions definitions of Accumulative grading strategy forms';


--
-- Name: mdl_workshopform_accumulative_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_accumulative_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_accumulative_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_accumulative_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_accumulative_id_seq OWNED BY mdl_workshopform_accumulative.id;


--
-- Name: mdl_workshopform_comments; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_comments (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    sort bigint DEFAULT 0,
    description text,
    descriptionformat smallint DEFAULT 0
);


ALTER TABLE mdl_workshopform_comments OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_comments; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_comments IS 'The assessment dimensions definitions of Comments strategy forms';


--
-- Name: mdl_workshopform_comments_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_comments_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_comments_id_seq OWNED BY mdl_workshopform_comments.id;


--
-- Name: mdl_workshopform_numerrors; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_numerrors (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    sort bigint DEFAULT 0,
    description text,
    descriptionformat smallint DEFAULT 0,
    descriptiontrust bigint,
    grade0 character varying(50),
    grade1 character varying(50),
    weight integer DEFAULT 1
);


ALTER TABLE mdl_workshopform_numerrors OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_numerrors; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_numerrors IS 'The assessment dimensions definitions of Number of errors grading strategy forms';


--
-- Name: mdl_workshopform_numerrors_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_numerrors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_numerrors_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_numerrors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_numerrors_id_seq OWNED BY mdl_workshopform_numerrors.id;


--
-- Name: mdl_workshopform_numerrors_map; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_numerrors_map (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    nonegative bigint NOT NULL,
    grade numeric(10,5) NOT NULL
);


ALTER TABLE mdl_workshopform_numerrors_map OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_numerrors_map; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_numerrors_map IS 'This maps the number of errors to a percentual grade for submission';


--
-- Name: mdl_workshopform_numerrors_map_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_numerrors_map_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_numerrors_map_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_numerrors_map_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_numerrors_map_id_seq OWNED BY mdl_workshopform_numerrors_map.id;


--
-- Name: mdl_workshopform_rubric; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_rubric (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    sort bigint DEFAULT 0,
    description text,
    descriptionformat smallint DEFAULT 0
);


ALTER TABLE mdl_workshopform_rubric OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_rubric; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_rubric IS 'The assessment dimensions definitions of Rubric grading strategy forms';


--
-- Name: mdl_workshopform_rubric_config; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_rubric_config (
    id bigint NOT NULL,
    workshopid bigint NOT NULL,
    layout character varying(30) DEFAULT 'list'::character varying
);


ALTER TABLE mdl_workshopform_rubric_config OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_rubric_config; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_rubric_config IS 'Configuration table for the Rubric grading strategy';


--
-- Name: mdl_workshopform_rubric_config_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_rubric_config_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_rubric_config_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_rubric_config_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_rubric_config_id_seq OWNED BY mdl_workshopform_rubric_config.id;


--
-- Name: mdl_workshopform_rubric_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_rubric_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_rubric_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_rubric_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_rubric_id_seq OWNED BY mdl_workshopform_rubric.id;


--
-- Name: mdl_workshopform_rubric_levels; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_workshopform_rubric_levels (
    id bigint NOT NULL,
    dimensionid bigint NOT NULL,
    grade numeric(10,5) NOT NULL,
    definition text,
    definitionformat smallint DEFAULT 0
);


ALTER TABLE mdl_workshopform_rubric_levels OWNER TO innovaedu;

--
-- Name: TABLE mdl_workshopform_rubric_levels; Type: COMMENT; Schema: public; Owner: innovaedu
--

COMMENT ON TABLE mdl_workshopform_rubric_levels IS 'The definition of rubric rating scales';


--
-- Name: mdl_workshopform_rubric_levels_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE mdl_workshopform_rubric_levels_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_workshopform_rubric_levels_id_seq OWNER TO innovaedu;

--
-- Name: mdl_workshopform_rubric_levels_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE mdl_workshopform_rubric_levels_id_seq OWNED BY mdl_workshopform_rubric_levels.id;


--
-- Name: nom_catdeptodel; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE nom_catdeptodel (
    clvdepto character varying(5),
    nomdepto character varying(100),
    id integer NOT NULL
);


ALTER TABLE nom_catdeptodel OWNER TO innovaedu;

--
-- Name: nom_catdeptodel_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE nom_catdeptodel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nom_catdeptodel_id_seq OWNER TO innovaedu;

--
-- Name: nom_catdeptodel_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE nom_catdeptodel_id_seq OWNED BY nom_catdeptodel.id;


--
-- Name: nom_clvdepartemento2; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE nom_clvdepartemento2 (
    clvdepto character varying(30),
    complemento character varying(100),
    id integer NOT NULL,
    completa character varying(100)
);


ALTER TABLE nom_clvdepartemento2 OWNER TO innovaedu;

--
-- Name: nom_clvdepartemento2_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE nom_clvdepartemento2_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nom_clvdepartemento2_id_seq OWNER TO innovaedu;

--
-- Name: nom_clvdepartemento2_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE nom_clvdepartemento2_id_seq OWNED BY nom_clvdepartemento2.id;


--
-- Name: nom_clvdepartementoplus; Type: TABLE; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE TABLE nom_clvdepartementoplus (
    clvcat character varying(30),
    nomcat character varying(100),
    clvdepto character varying(30),
    nomdepto character varying(100),
    localdepto character varying(100),
    id integer NOT NULL,
    ncat character varying(100) DEFAULT 0 NOT NULL,
    nads character varying(100) DEFAULT 0 NOT NULL,
    ndepto character varying(100) DEFAULT 0 NOT NULL
);


ALTER TABLE nom_clvdepartementoplus OWNER TO innovaedu;

--
-- Name: nom_clvdepartementoplus_id_seq; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE nom_clvdepartementoplus_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE nom_clvdepartementoplus_id_seq OWNER TO innovaedu;

--
-- Name: nom_clvdepartementoplus_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: innovaedu
--

ALTER SEQUENCE nom_clvdepartementoplus_id_seq OWNED BY nom_clvdepartementoplus.id;


--
-- Name: sied_ssd_sq_unidad_atencion; Type: SEQUENCE; Schema: public; Owner: innovaedu
--

CREATE SEQUENCE sied_ssd_sq_unidad_atencion
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE sied_ssd_sq_unidad_atencion OWNER TO innovaedu;

SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_cargo; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cargo (
    id integer DEFAULT nextval('public.mdl_cargo_id_seq'::regclass) NOT NULL,
    descripcion character varying(40) NOT NULL,
    responsable character varying(20) NOT NULL,
    fchact timestamp with time zone NOT NULL
);


ALTER TABLE mdl_cargo OWNER TO innovaedu;

--
-- Name: TABLE mdl_cargo; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_cargo IS 'Cargos medicos';


--
-- Name: mdl_carreras; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_carreras (
    id integer NOT NULL,
    idestudio integer DEFAULT 0 NOT NULL,
    nombre character varying(50) DEFAULT 0 NOT NULL,
    abrev character varying(10) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone,
    responsable character varying(20) DEFAULT 0 NOT NULL,
    idrama integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_carreras OWNER TO innovaedu;

--
-- Name: TABLE mdl_carreras; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_carreras IS 'carreras por grado';


--
-- Name: mdl_carreras_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_carreras_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_carreras_id_seq OWNER TO innovaedu;

--
-- Name: mdl_carreras_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_carreras_id_seq OWNED BY mdl_carreras.id;


--
-- Name: mdl_cateva; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_cateva (
    id integer NOT NULL,
    ideva integer DEFAULT 0 NOT NULL,
    idcateva integer DEFAULT 0 NOT NULL,
    evaarri character varying(100) NOT NULL,
    evaarrv character varying(100) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_cateva OWNER TO innovaedu;

--
-- Name: mdl_cateva_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_cateva_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_cateva_id_seq OWNER TO innovaedu;

--
-- Name: mdl_cateva_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_cateva_id_seq OWNED BY mdl_cateva.id;


--
-- Name: mdl_detusertutor; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_detusertutor (
    id integer DEFAULT nextval('public.mdl_detusertutor_id_seq'::regclass) NOT NULL,
    iduser integer DEFAULT 0 NOT NULL,
    sede integer DEFAULT 0 NOT NULL,
    idform integer DEFAULT 0 NOT NULL,
    responsable character varying(25) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL
);


ALTER TABLE mdl_detusertutor OWNER TO innovaedu;

--
-- Name: TABLE mdl_detusertutor; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_detusertutor IS 'Detalla de tutor referencias docentes';


--
-- Name: mdl_especialidades; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_especialidades (
    id integer NOT NULL,
    idcarrera integer DEFAULT 0 NOT NULL,
    nombre character varying(50) DEFAULT 0 NOT NULL,
    abrev character varying(20) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(20) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_especialidades OWNER TO innovaedu;

--
-- Name: TABLE mdl_especialidades; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_especialidades IS 'especialidades por carrera';


--
-- Name: mdl_especialidades_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_especialidades_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_especialidades_id_seq OWNER TO innovaedu;

--
-- Name: mdl_especialidades_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_especialidades_id_seq OWNED BY mdl_especialidades.id;


--
-- Name: mdl_estudios; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_estudios (
    id integer NOT NULL,
    nombre character varying(100) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(20) NOT NULL
);


ALTER TABLE mdl_estudios OWNER TO innovaedu;

--
-- Name: TABLE mdl_estudios; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_estudios IS 'Maximo grados de estudio';


--
-- Name: mdl_estudios_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_estudios_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_estudios_id_seq OWNER TO innovaedu;

--
-- Name: mdl_estudios_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_estudios_id_seq OWNED BY mdl_estudios.id;


--
-- Name: mdl_evaluar; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_evaluar (
    cve_evaluador bigint,
    cve_evaluado bigint,
    cve_excepcion bigint,
    id integer NOT NULL,
    cve_instrumento bigint
);


ALTER TABLE mdl_evaluar OWNER TO innovaedu;

--
-- Name: mdl_evaluar_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_evaluar_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_evaluar_id_seq OWNER TO innovaedu;

--
-- Name: mdl_evaluar_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_evaluar_id_seq OWNED BY mdl_evaluar.id;


--
-- Name: mdl_evatutor; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_evatutor (
    id integer DEFAULT nextval('public.mdl_evatutor_id_seq'::regclass) NOT NULL,
    iduser integer NOT NULL,
    iduserexp integer NOT NULL,
    valor5 integer NOT NULL,
    valor4 integer NOT NULL,
    valor3 integer NOT NULL,
    valor2 integer NOT NULL,
    valor1 integer NOT NULL,
    total integer NOT NULL,
    responsable character varying NOT NULL,
    fchact character varying NOT NULL,
    tipo integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_evatutor OWNER TO innovaedu;

--
-- Name: TABLE mdl_evatutor; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_evatutor IS 'evaluacion de tutores';


--
-- Name: mdl_formacion; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_formacion (
    id integer DEFAULT nextval('public.mdl_formacion_id_seq'::regclass) NOT NULL,
    id_form integer DEFAULT 0 NOT NULL,
    nom_form character varying(100) DEFAULT 0 NOT NULL,
    anio character varying(5) DEFAULT 0 NOT NULL,
    nomcur character varying(200) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying(25) DEFAULT 0 NOT NULL,
    tipo integer DEFAULT 0 NOT NULL,
    idcurform integer DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_formacion OWNER TO innovaedu;

--
-- Name: TABLE mdl_formacion; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_formacion IS 'formacion docente';


--
-- Name: COLUMN mdl_formacion.tipo; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON COLUMN mdl_formacion.tipo IS '0 no especificado, 1 formacion regional, 2 formacion de asesores,3 formacion de tutores';


--
-- Name: mdl_instrumento; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_instrumento (
    id integer NOT NULL,
    nom_descripcion text,
    nom_corto character(32),
    "Orden" numeric[]
);


ALTER TABLE mdl_instrumento OWNER TO innovaedu;

--
-- Name: mdl_instrumento_habilidad; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_instrumento_habilidad (
    inst_id integer NOT NULL,
    tipe_id integer NOT NULL
);


ALTER TABLE mdl_instrumento_habilidad OWNER TO innovaedu;

--
-- Name: mdl_instrumento_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_instrumento_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_instrumento_id_seq OWNER TO innovaedu;

--
-- Name: mdl_instrumento_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_instrumento_id_seq OWNED BY mdl_instrumento.id;


--
-- Name: mdl_preguntas; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_preguntas (
    id integer NOT NULL,
    cve_instrumento bigint NOT NULL,
    nom_pregunta text,
    cve_historico bigint,
    tipo_eva bigint,
    ind_visible integer
);


ALTER TABLE mdl_preguntas OWNER TO innovaedu;

--
-- Name: mdl_preguntas_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_preguntas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_preguntas_id_seq OWNER TO innovaedu;

--
-- Name: mdl_preguntas_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_preguntas_id_seq OWNED BY mdl_preguntas.id;


--
-- Name: mdl_profesion; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_profesion (
    id integer DEFAULT nextval('public.mdl_profesion_id_seq'::regclass) NOT NULL,
    descripcion character varying(60) NOT NULL,
    responsable character varying(20) NOT NULL,
    fchact timestamp with time zone NOT NULL
);


ALTER TABLE mdl_profesion OWNER TO innovaedu;

--
-- Name: TABLE mdl_profesion; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_profesion IS 'Profesiones medicas';


--
-- Name: mdl_propuesta; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_propuesta (
    id integer DEFAULT nextval('public.mdl_propuesta_id_seq'::regclass) NOT NULL,
    iduser integer DEFAULT 0 NOT NULL,
    idcurdiplo integer DEFAULT 0 NOT NULL,
    fchprop timestamp with time zone NOT NULL,
    responsable character varying(20) DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_propuesta OWNER TO innovaedu;

--
-- Name: TABLE mdl_propuesta; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_propuesta IS 'Se guarda las propuestas tutoriales';


--
-- Name: mdl_residentes; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_residentes (
    curp character varying(100) NOT NULL,
    paterno character varying(100),
    materno character varying(100),
    nombre character varying(100),
    cat character varying(100),
    usuario character varying(20)
);


ALTER TABLE mdl_residentes OWNER TO innovaedu;

--
-- Name: mdl_respuestas; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_respuestas (
    id integer NOT NULL,
    cve_pregunta bigint,
    desc_respuesta text,
    ind_valor integer
);


ALTER TABLE mdl_respuestas OWNER TO innovaedu;

--
-- Name: mdl_respuestas_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_respuestas_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_respuestas_id_seq OWNER TO innovaedu;

--
-- Name: mdl_respuestas_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_respuestas_id_seq OWNED BY mdl_respuestas.id;


--
-- Name: mdl_tipoeva; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE mdl_tipoeva (
    id integer NOT NULL,
    clave character varying(6) DEFAULT 0 NOT NULL,
    nombre character varying(100) DEFAULT 0 NOT NULL,
    fchact timestamp with time zone NOT NULL,
    responsable character varying DEFAULT 0 NOT NULL
);


ALTER TABLE mdl_tipoeva OWNER TO innovaedu;

--
-- Name: TABLE mdl_tipoeva; Type: COMMENT; Schema: tutorias; Owner: innovaedu
--

COMMENT ON TABLE mdl_tipoeva IS 'Catalogo de categorias de evaluacion';


--
-- Name: mdl_tipoeva_id_seq; Type: SEQUENCE; Schema: tutorias; Owner: innovaedu
--

CREATE SEQUENCE mdl_tipoeva_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE mdl_tipoeva_id_seq OWNER TO innovaedu;

--
-- Name: mdl_tipoeva_id_seq; Type: SEQUENCE OWNED BY; Schema: tutorias; Owner: innovaedu
--

ALTER SEQUENCE mdl_tipoeva_id_seq OWNED BY mdl_tipoeva.id;


--
-- Name: v_cursos_admin; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_cursos_admin AS
SELECT c.id, c.fullname, c.shortname, cc.startdatepre, cc.lastdatepre, cc.cuotacurso, cc.preact, cc.achsel, c.category, c.startdate, cc.formdocente FROM (public.mdl_course c LEFT JOIN public.mdl_course_config cc ON ((cc.course = c.id))) ORDER BY c.fullname;


ALTER TABLE v_cursos_admin OWNER TO innovaedu;

--
-- Name: v_listado_tutores; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_listado_tutores AS
SELECT DISTINCT a.iduser, a.sede, b.nom, b.pat, b.mat, c.emaillab, c.aniostutor AS anostutor, c.aniosdoc AS anosdocencia, c.desemp, c.grado, c.licenciatura AS idlic, d.descripcion AS desclicencia, c.esp FROM (((mdl_detusertutor a JOIN public.mdl_user b ON ((b.id = a.iduser))) JOIN mdl_usertutor c ON ((c.iduser = b.id))) JOIN mdl_profesion d ON ((d.id = c.licenciatura))) WHERE (((b.nom)::text <> ''::text) AND ((b.nom)::text <> '0'::text)) ORDER BY b.nom, a.iduser;


ALTER TABLE v_listado_tutores OWNER TO innovaedu;

--
-- Name: v_rpt_accesos; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_accesos AS
SELECT a.username, a.nom, a.pat, a.mat, a.numred, a.cve_departamental, a.cat, c.nom_nombre, a.del, d.nom_delegacion, b.timeaccess, b.courseid, a.id FROM (((public.mdl_user a JOIN public.mdl_user_lastaccess b ON ((a.id = b.userid))) JOIN nomina.ssn_categoria c ON ((a.cat = c.cve_categoria))) JOIN departments.ssd_cat_delegacion d ON ((a.del = (d.cve_delegacion)::integer))) ORDER BY a.del;


ALTER TABLE v_rpt_accesos OWNER TO innovaedu;

--
-- Name: v_rpt_alumnos_insc_act; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_alumnos_insc_act AS
SELECT "left"((u.cve_departamental)::text, 2) AS cve_ciudad, c.id AS cve_curso, max((c.shortname)::text) AS desc_curso, u.id AS cve_usuario, u.username AS cve_matricula, max((u.nom)::text) AS desc_nombre, max((u.pat)::text) AS desc_paterno, max((u.mat)::text) AS desc_materno, max((u.email)::text) AS desc_email, g.id AS cve_grupo, max((g.name)::text) AS grupo_nombre, max((r.name)::text) AS rol_nombre, count(DISTINCT al.userid) AS num_ingresos, sum(CASE WHEN CASE WHEN (c.tipocur = '0'::bpchar) THEN ((to_timestamp((la.timeaccess)::double precision) + '5 days'::interval) >= now()) WHEN (c.tipocur = '1'::bpchar) THEN ((to_timestamp((la.timeaccess)::double precision) + '15 days'::interval) >= now()) ELSE NULL::boolean END THEN 1 ELSE 0 END) AS num_activos FROM ((((((((public.mdl_role_assignments ra LEFT JOIN public.mdl_role r ON ((r.id = ra.roleid))) LEFT JOIN public.mdl_user u ON ((ra.userid = u.id))) LEFT JOIN public.mdl_context ct ON ((ct.id = ra.contextid))) LEFT JOIN public.mdl_course c ON ((c.id = ct.instanceid))) LEFT JOIN public.mdl_groups g ON ((g.courseid = c.id))) LEFT JOIN public.mdl_groups_members gm ON (((gm.userid = u.id) AND (gm.groupid = g.id)))) LEFT JOIN public.mdl_groups_members al ON ((al.groupid = g.id))) LEFT JOIN public.mdl_user_lastaccess la ON (((la.userid = al.userid) AND (c.id = la.courseid)))) WHERE (NOT (ra.roleid = 5)) GROUP BY "left"((u.cve_departamental)::text, 2), c.id, u.id, u.username, g.id ORDER BY "left"((u.cve_departamental)::text, 2);


ALTER TABLE v_rpt_alumnos_insc_act OWNER TO innovaedu;

--
-- Name: v_rpt_count_alumnos; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_count_alumnos AS
SELECT sum(r.n_alumnos) AS n_alumnos, r.username, r.userid, r.tutor, sum(r.diplomados) AS diplomados, sum(r.cursos) AS cursos, sum(r.horascur) AS horas FROM ((SELECT (0)::bigint AS n_alumnos, b.username, a.userid, pg_catalog.concat(b.nom, ' ', b.pat, ' ', b.mat) AS tutor, a.cursoid, CASE d.tipocur WHEN (1)::numeric THEN 1 ELSE 0 END AS diplomados, CASE d.tipocur WHEN (0)::numeric THEN 1 ELSE 0 END AS cursos, COALESCE(d.horascur, (0)::numeric) AS horascur FROM ((((mdl_userexp a JOIN public.mdl_user b ON ((b.id = a.userid))) LEFT JOIN public.mdl_course c ON (((c.id = a.cursoid) AND (c.visible = 1)))) LEFT JOIN public.mdl_course_config d ON ((d.course = c.id))) JOIN parametrizacion.ssp_tipo_roles e ON (((e.cve_role = a.role) AND (e.ind_tipo = 2)))) WHERE (a.ind_status = (1)::numeric) GROUP BY b.username, a.userid, pg_catalog.concat(b.nom, ' ', b.pat, ' ', b.mat), d.tipocur, a.cursoid, d.horascur) r JOIN (SELECT r.iduser, r.desempeno FROM (SELECT b.iduser, sum(COALESCE(b.desempeno, (0)::numeric)) AS desempeno FROM mdl_usertutor b WHERE (b.id IN (SELECT mdl_usertutor.id FROM mdl_usertutor WHERE (mdl_usertutor.iduser = b.iduser) ORDER BY mdl_usertutor.fch_pre_registro DESC LIMIT 3)) GROUP BY b.iduser) r WHERE (r.desempeno > (0)::numeric)) s ON ((s.iduser = r.userid))) GROUP BY r.username, r.userid, r.tutor;


ALTER TABLE v_rpt_count_alumnos OWNER TO innovaedu;

--
-- Name: v_rpt_curso_enroles; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_curso_enroles AS
SELECT c.id AS cve_curso, c.shortname AS clave_curso, c.fullname AS desc_curso, u.id AS cve_usuario, u.username AS nom_nombre, u.firstname AS nom, u.lastname AS pat, ' ' AS mat, g.id AS cve_grupo, c.startdate, g.name AS grupo_nombre, r.id AS cve_rol, r.name AS rol_nombre, u.cve_departamental, cc.formdocente, cat.path, c.visible, cc.horascur, cc.tipocur, cc.lastdate, u.email, ue.status AS suspendido FROM ((((((((((public.mdl_user u JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN public.mdl_context ct ON ((ct.id = ra.contextid))) JOIN public.mdl_course c ON ((c.id = ct.instanceid))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_course_categories cat ON ((cat.id = c.category))) JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON (((gm.userid = u.id) AND (gm.groupid = g.id)))) JOIN public.mdl_enrol en ON ((en.courseid = c.id))) JOIN public.mdl_user_enrolments ue ON (((ue.enrolid = en.id) AND (ue.userid = u.id))));


ALTER TABLE v_rpt_curso_enroles OWNER TO innovaedu;

--
-- Name: v_rpt_curso_enroles_norm; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_curso_enroles_norm AS
SELECT c.id AS cve_curso, c.shortname AS clave_curso, c.fullname AS desc_curso, u.id AS cve_usuario, u.username AS nom_nombre, u.firstname AS nom, u.lastname AS pat, ' '::character varying AS mat, g.id AS cve_grupo, c.startdate, g.name AS grupo_nombre, r.id AS cve_rol, r.name AS rol_nombre, u.cve_departamental, cc.formdocente, cat.path, c.visible, cc.horascur, cc.tipocur, cc.lastdate, u.email, ue.status AS suspendido FROM ((((((((((public.mdl_user u JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN public.mdl_context ct ON ((ct.id = ra.contextid))) JOIN public.mdl_course c ON ((c.id = ct.instanceid))) JOIN public.mdl_role r ON ((r.id = ra.roleid))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_course_categories cat ON ((cat.id = c.category))) JOIN public.mdl_groups g ON ((g.courseid = c.id))) JOIN public.mdl_groups_members gm ON (((gm.userid = u.id) AND (gm.groupid = g.id)))) JOIN public.mdl_enrol en ON ((en.courseid = c.id))) JOIN public.mdl_user_enrolments ue ON (((ue.enrolid = en.id) AND (ue.userid = u.id)))) UNION SELECT c.id AS cve_curso, c.shortname AS clave_curso, c.fullname AS desc_curso, u.id AS cve_usuario, u.username AS nom_nombre, u.nom, u.pat, u.mat, 0 AS cve_grupo, c.startdate, ''::character varying AS grupo_nombre, r.id AS cve_rol, r.name AS rol_nombre, u.cve_departamental, cc.formdocente, cat.path, c.visible, cc.horascur, cc.tipocur, cc.lastdate, u.email, ue.status AS suspendido FROM ((((((((public.mdl_user u LEFT JOIN public.mdl_role_assignments ra ON ((ra.userid = u.id))) JOIN public.mdl_context ct ON ((ct.id = ra.contextid))) JOIN public.mdl_course c ON ((c.id = ct.instanceid))) JOIN public.mdl_role r ON (((r.id = ra.roleid) AND (r.id = 30)))) JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_course_categories cat ON ((cat.id = c.category))) JOIN public.mdl_enrol en ON ((en.courseid = c.id))) JOIN public.mdl_user_enrolments ue ON (((ue.enrolid = en.id) AND (ue.userid = u.id))));


ALTER TABLE v_rpt_curso_enroles_norm OWNER TO innovaedu;

--
-- Name: v_rpt_cursos; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_cursos AS
SELECT DISTINCT u.id AS iduser, u.username, u.firstname, u.lastname, c.id AS id_curso, c.fullname, c.shortname AS curso, tr.ind_tipo FROM (((((((public.mdl_course c LEFT JOIN public.mdl_course_config cc ON ((cc.course = c.id))) LEFT JOIN public.mdl_context co ON ((co.instanceid = c.id))) LEFT JOIN public.mdl_role_assignments r ON ((r.contextid = co.id))) LEFT JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = r.roleid))) LEFT JOIN public.mdl_user u ON ((u.id = r.userid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (tab.nom_usuario)::text) AND (pre.cve_curso = c.id))));


ALTER TABLE v_rpt_cursos OWNER TO innovaedu;

--
-- Name: v_rpt_cursos_tutores; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_cursos_tutores AS
SELECT DISTINCT u.id AS iduser, u.username, u.firstname, u.lastname, c.id AS id_curso, c.category, c.fullname, c.shortname AS curso, tr.ind_tipo FROM ((((((((public.mdl_course c JOIN public.mdl_course_config cc ON ((cc.course = c.id))) JOIN public.mdl_course_categories cat ON (((c.category = cat.id) AND (NOT (((pg_catalog.concat('/', cat.path, '/') ~~ '%/1/%'::text) OR (pg_catalog.concat('/', cat.path, '/') ~~ '%/81/%'::text)) OR (pg_catalog.concat('/', cat.path, '/') ~~ '%/738/%'::text)))))) JOIN public.mdl_context co ON ((co.instanceid = c.id))) JOIN public.mdl_role_assignments r ON ((r.contextid = co.id))) JOIN parametrizacion.ssp_tipo_roles tr ON ((tr.cve_role = r.roleid))) JOIN public.mdl_user u ON ((u.id = r.userid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN gestion.sgp_tab_preregistro_al pre ON ((((pre.nom_usuario)::text = (tab.nom_usuario)::text) AND (pre.cve_curso = c.id)))) WHERE (NOT (r.roleid = 5));


ALTER TABLE v_rpt_cursos_tutores OWNER TO innovaedu;

--
-- Name: v_rpt_docentes; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE v_rpt_docentes (
    id bigint,
    userid integer,
    username character varying(100),
    nombre text
);


ALTER TABLE v_rpt_docentes OWNER TO innovaedu;

--
-- Name: v_rpt_estadisticas_alumnos; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_estadisticas_alumnos AS
SELECT v_rpt_estadisticas_alumnos_p.userid, v_rpt_estadisticas_alumnos_p.matricula, v_rpt_estadisticas_alumnos_p.alumno, v_rpt_estadisticas_alumnos_p.multi_rol, v_rpt_estadisticas_alumnos_p.correo_electronico, v_rpt_estadisticas_alumnos_p.cve_delegacion, v_rpt_estadisticas_alumnos_p.delegacion, v_rpt_estadisticas_alumnos_p.cve_nivel_atencion, v_rpt_estadisticas_alumnos_p.nivel_de_atencion, v_rpt_estadisticas_alumnos_p.tipo_unidad, v_rpt_estadisticas_alumnos_p.unidad_medica, v_rpt_estadisticas_alumnos_p.cve_unidad_atencion, v_rpt_estadisticas_alumnos_p.id, v_rpt_estadisticas_alumnos_p.curso, v_rpt_estadisticas_alumnos_p.groupid, v_rpt_estadisticas_alumnos_p.grupo, v_rpt_estadisticas_alumnos_p.adscripcion, v_rpt_estadisticas_alumnos_p.cve_depto_adscripcion, v_rpt_estadisticas_alumnos_p.id_categoria, v_rpt_estadisticas_alumnos_p.clave_cat, v_rpt_estadisticas_alumnos_p.categoria, v_rpt_estadisticas_alumnos_p.categoria_concat, v_rpt_estadisticas_alumnos_p.cve_tipo_categoria, v_rpt_estadisticas_alumnos_p.tipo_categoria, v_rpt_estadisticas_alumnos_p.sexo FROM v_rpt_estadisticas_alumnos_p() v_rpt_estadisticas_alumnos_p(userid, matricula, alumno, multi_rol, correo_electronico, cve_delegacion, delegacion, cve_nivel_atencion, nivel_de_atencion, tipo_unidad, unidad_medica, cve_unidad_atencion, id, curso, groupid, grupo, adscripcion, cve_depto_adscripcion, id_categoria, clave_cat, categoria, categoria_concat, cve_tipo_categoria, tipo_categoria, sexo);


ALTER TABLE v_rpt_estadisticas_alumnos OWNER TO innovaedu;

--
-- Name: v_rpt_estadisticas_docentes; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_estadisticas_docentes AS
SELECT DISTINCT u.id AS userid, u.username AS matricula, pg_catalog.concat(u.lastname, ' ', u.firstname) AS alumno, array_to_string(ARRAY(SELECT DISTINCT r1.name FROM ((mdl_userexp exp2 JOIN public.mdl_course c1 ON ((c1.id = exp2.cursoid))) JOIN public.mdl_role r1 ON ((r1.id = exp2.role))) WHERE (((exp.userid = exp2.userid) AND (c1.id = c.id)) AND (exp2.grupoid = g.id)) ORDER BY r1.name DESC), ' / '::text) AS multi_rol, u.email AS correo_electronico, del.cve_delegacion, COALESCE(del.nom_delegacion, 'SIN DELEGACIÓN'::character varying) AS delegacion, niv.cve_nivel_atencion, niv.des_nivel_atencion AS nivel_de_atencion, atn.ind_medica AS tipo_unidad, atn.des_unidad_atencion AS unidad_medica, atn.cve_unidad_atencion, c.id, c.shortname AS curso, g.id AS groupid, g.name AS grupo, CASE WHEN (tut.cve_departamento IS NOT NULL) THEN CASE WHEN (ads.nom_depto_adscripcion IS NOT NULL) THEN pg_catalog.concat(ads.nom_depto_adscripcion, ' - ', dep.nom_dependencia, ' (', tut.cve_departamento, ')') ELSE ''::text END ELSE ''::text END AS adscripcion, COALESCE(tut.cve_departamento, (''::bpchar)::character varying) AS cve_depto_adscripcion, tut.cve_departamento, cat.cve_tipo_categoria AS id_categoria, COALESCE(cat.des_clave, 'SIN CATEGORIA'::character varying) AS clave_cat, cat.nom_nombre AS categoria, CASE WHEN (cat.nom_nombre IS NOT NULL) THEN pg_catalog.concat(cat.nom_nombre, '(', cat.des_clave, ')') ELSE ' SIN CATEGORIA'::text END AS categoria_concat, tc.cve_tipo_categoria, tc.nom_nombre AS tipo_categoria, CASE WHEN (tab.desc_sexo = 'F'::bpchar) THEN 'Femenino'::text WHEN (tab.desc_sexo = 'M'::bpchar) THEN 'Masculino'::text ELSE NULL::text END AS sexo FROM ((((((((((((((((public.mdl_course c LEFT JOIN mdl_userexp exp ON ((c.id = exp.cursoid))) LEFT JOIN mdl_usertutor tut ON (((tut.iduser = exp.userid) AND (tut.id_curso = c.id)))) LEFT JOIN public.mdl_user u ON ((u.id = exp.userid))) LEFT JOIN gestion.sgp_tab_usuario tab ON (((tab.nom_usuario)::text = (u.username)::text))) LEFT JOIN public.mdl_groups g ON ((exp.grupoid = g.id))) LEFT JOIN public.mdl_role r ON ((r.id = exp.role))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = r.id) AND (tr.ind_tipo = 2)))) LEFT JOIN departments.ssd_cat_depto_adscripcion ads ON (((tut.cve_departamento)::bpchar = ads.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_dependencia dep ON ((ads.cve_depto_adscripcion = dep.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_delegacion del ON ((dep.cve_delegacion = del.cve_delegacion))) LEFT JOIN departments.ssd_cat_nivel_atencion niv ON ((dep.cve_nivel_atencion = niv.cve_nivel_atencion))) LEFT JOIN nomina.ssn_categoria cat ON ((tut.cve_categoria = cat.cve_categoria))) LEFT JOIN nomina.ssn_tipo_catgoria tc ON ((tc.cve_tipo_categoria = cat.cve_tipo_categoria))) LEFT JOIN departments.ssd_cat_normativa nor ON (((nor.cve_organo_control = dep.cve_organo_control) AND (nor.cve_departamento = dep.cve_departamento)))) LEFT JOIN departments.ssd_cat_organo_control cont ON ((cont.cve_organo_control = nor.cve_organo_control))) LEFT JOIN departments.ssd_cat_unidad_atencion atn ON ((atn.cve_unidad_atencion = cont.cve_unidad_atencion))) ORDER BY u.username;


ALTER TABLE v_rpt_estadisticas_docentes OWNER TO innovaedu;

--
-- Name: v_rpt_roles_masivo; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_roles_masivo AS
SELECT DISTINCT a.id, a.username AS matricula, a.pat, a.mat, a.nom, a.email, a.cat, ((((b.nom_nombre)::text || '('::text) || (b.des_clave)::text) || ')'::text) AS nom_categoria, a.cve_departamental, c.nom_depto_adscripcion, a.del, d.nom_delegacion, a.phone1, a.phone2, a.numred, i.caltot, i.idcurso, h.fullname, h.shortname, CASE WHEN (i.caltot < 5.0) THEN 'NO APROBADO'::text ELSE 'APROBADO'::text END AS aprobado, k.cve_nivel_atencion, k.des_nivel_atencion, e.roleid, l.name AS nombrerol, m.name AS nomgrupo FROM ((((((((((((public.mdl_user a LEFT JOIN nomina.ssn_categoria b ON ((a.cat = b.cve_categoria))) LEFT JOIN departments.ssd_cat_depto_adscripcion c ON ((a.cve_departamental = c.cve_depto_adscripcion))) JOIN departments.ssd_cat_delegacion d ON ((a.del = (d.cve_delegacion)::integer))) JOIN public.mdl_role_assignments e ON ((e.userid = a.id))) JOIN public.mdl_context f ON ((f.id = e.contextid))) LEFT JOIN public.mdl_groups_members g ON ((g.userid = a.id))) JOIN calificaciones.mdl_caltotalgral i ON ((a.id = i.userid))) LEFT JOIN public.mdl_course h ON ((h.id = i.idcurso))) JOIN departments.ssd_cat_dependencia j ON ((a.cve_departamental = j.cve_depto_adscripcion))) LEFT JOIN departments.ssd_cat_nivel_atencion k ON ((j.cve_nivel_atencion = k.cve_nivel_atencion))) LEFT JOIN public.mdl_role l ON ((l.id = e.roleid))) LEFT JOIN public.mdl_groups m ON ((h.id = m.id))) WHERE ((f.contextlevel = 50) AND (i.tipo = 'T'::bpchar)) ORDER BY a.username;


ALTER TABLE v_rpt_roles_masivo OWNER TO innovaedu;

--
-- Name: v_rpt_user_cargo; Type: TABLE; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE TABLE v_rpt_user_cargo (
    idp integer,
    iduser bigint,
    id_curso bigint,
    nom_usuario character varying(100),
    username character varying(100),
    nombre character varying(50),
    nom_paterno character varying(50),
    nom_materno character varying(50),
    nom_curp character varying(20),
    desc_rfc character varying(20),
    tmsp_fecha_nac date,
    tmsp_ing_imss date,
    num_ant_anio numeric(2,0),
    num_ant_quincena numeric(4,0),
    num_ant_dias double precision,
    cargo text,
    nom_depto_adscripcion character varying(50),
    cve_departamento character varying(20),
    des_clave character varying(15),
    passtutor character varying(20),
    grado integer,
    idrama integer,
    licenciatura integer,
    esp integer,
    fullname character varying(254),
    shortname character varying(255),
    aniosdoc integer,
    aniostutor integer,
    email character varying(100),
    emaillab character varying(50),
    emailpart character varying(50),
    phone1 character varying(40),
    phone2 character varying(40),
    numred character varying(20),
    desemp integer,
    desempeno numeric,
    des_sede character varying(120),
    nomcat character varying(60),
    sexo character(1)
);


ALTER TABLE v_rpt_user_cargo OWNER TO innovaedu;

--
-- Name: v_rpt_user_propuesta; Type: VIEW; Schema: tutorias; Owner: innovaedu
--

CREATE VIEW v_rpt_user_propuesta AS
SELECT u.id AS iduser, u.username AS nom_usuario, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre FROM public.mdl_user u WHERE (NOT (u.id IN (SELECT DISTINCT mdl_usertutor.iduser FROM mdl_usertutor))) UNION SELECT DISTINCT ut.iduser, ut.nom_usuario, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre FROM (mdl_usertutor ut LEFT JOIN public.mdl_user u ON ((ut.iduser = u.id))) WHERE ((SELECT f_aux_limit_pre_registro.f_aux_limit_pre_registro FROM f_aux_limit_pre_registro(ut.iduser) f_aux_limit_pre_registro(f_aux_limit_pre_registro)) > (0)::numeric);


ALTER TABLE v_rpt_user_propuesta OWNER TO innovaedu;

SET search_path = calificaciones, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_califgenerales ALTER COLUMN id SET DEFAULT nextval('mdl_califgenerales_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_calificaciones ALTER COLUMN id SET DEFAULT nextval('mdl_calificaciones_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_caltotalgral ALTER COLUMN id SET DEFAULT nextval('mdl_caltotalgral_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_elementoscal ALTER COLUMN id SET DEFAULT nextval('mdl_elementoscal_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_modexterno ALTER COLUMN id SET DEFAULT nextval('mdl_modexterno_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_moduni ALTER COLUMN id SET DEFAULT nextval('mdl_moduni_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_unidades ALTER COLUMN id SET DEFAULT nextval('mdl_unidades_id_seq'::regclass);


SET search_path = cert, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY mdl_certificate_cargo ALTER COLUMN id SET DEFAULT nextval('mdl_certificate_cargo_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY mdl_certificate_tutores ALTER COLUMN id SET DEFAULT nextval('mdl_certificate_tutores_id_seq'::regclass);


SET search_path = departments, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_tipo_adscripcion ALTER COLUMN id SET DEFAULT nextval('ssd_cat_tipo_adscripcion_id_seq'::regclass);


SET search_path = encuestas, pg_catalog;

--
-- Name: encuesta_curso_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_encuesta_curso ALTER COLUMN encuesta_curso_cve SET DEFAULT nextval('sse_encuesta_curso_encuesta_curso_cve_seq'::regclass);


--
-- Name: encuesta_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_encuestas ALTER COLUMN encuesta_cve SET DEFAULT nextval('sse_encuestas_encuesta_cve_seq'::regclass);


--
-- Name: evaluacion_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_evaluacion ALTER COLUMN evaluacion_cve SET DEFAULT nextval('sse_evaluacion_evaluacion_cve_seq'::regclass);


--
-- Name: indicador_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_indicador ALTER COLUMN indicador_cve SET DEFAULT nextval('sse_indicador_indicador_cve_seq'::regclass);


--
-- Name: preguntas_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas ALTER COLUMN preguntas_cve SET DEFAULT nextval('sse_preguntas_preguntas_cve_seq'::regclass);


--
-- Name: reglas_evaluacion_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_reglas_evaluacion ALTER COLUMN reglas_evaluacion_cve SET DEFAULT nextval('sse_reglas_evaluacion_reglas_evaluacion_cve_seq'::regclass);


--
-- Name: reactivos_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_respuestas ALTER COLUMN reactivos_cve SET DEFAULT nextval('sse_respuestas_reactivos_cve_seq'::regclass);


--
-- Name: evaluacion_resul_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_result_evaluacion_encuesta_curso ALTER COLUMN evaluacion_resul_cve SET DEFAULT nextval('sse_result_evaluacion_evaluacion_resul_cve_seq'::regclass);


--
-- Name: seccion_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_seccion ALTER COLUMN seccion_cve SET DEFAULT nextval('sse_seccion_seccion_cve_seq'::regclass);


--
-- Name: tipo_pregunta_cve; Type: DEFAULT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_tipo_pregunta ALTER COLUMN tipo_pregunta_cve SET DEFAULT nextval('sse_tipo_pregunta_tipo_pregunta_cve_seq'::regclass);


SET search_path = externo, pg_catalog;

--
-- Name: id_acceso_del; Type: DEFAULT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_acceso_del ALTER COLUMN id_acceso_del SET DEFAULT nextval('ssx_acceso_del_id_acceso_del_seq'::regclass);


--
-- Name: cve_acceso_modulo; Type: DEFAULT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_acceso_modulo ALTER COLUMN cve_acceso_modulo SET DEFAULT nextval('ssx_acceso_modulo_cve_acceso_modulo_seq'::regclass);


--
-- Name: cve_modulo; Type: DEFAULT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_modulo ALTER COLUMN cve_modulo SET DEFAULT nextval('ssx_modulo_cve_modulo_seq'::regclass);


--
-- Name: cve_msg_user; Type: DEFAULT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_msg_user ALTER COLUMN cve_msg_user SET DEFAULT nextval('ssx_msg_user_cve_msg_user_seq'::regclass);


--
-- Name: cve_usuario; Type: DEFAULT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_usuario ALTER COLUMN cve_usuario SET DEFAULT nextval('ssx_usuario_cve_usuario_seq'::regclass);


SET search_path = gestion, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY mdl_accion ALTER COLUMN id SET DEFAULT nextval('mdl_accion_id_seq'::regclass);


SET search_path = nomina, pg_catalog;

--
-- Name: cve_categoria; Type: DEFAULT; Schema: nomina; Owner: innovaedu
--

ALTER TABLE ONLY ssn_categoria ALTER COLUMN cve_categoria SET DEFAULT nextval('ssn_categoria_cve_categoria_seq'::regclass);


--
-- Name: cve_tipo_categoria; Type: DEFAULT; Schema: nomina; Owner: innovaedu
--

ALTER TABLE ONLY ssn_tipo_catgoria ALTER COLUMN cve_tipo_categoria SET DEFAULT nextval('ssn_tipo_catgoria_cve_tipo_categoria_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY folder ALTER COLUMN id SET DEFAULT nextval('mdl_folder_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY imscp ALTER COLUMN id SET DEFAULT nextval('mdl_imscp_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_accion ALTER COLUMN id SET DEFAULT nextval('mdl_accion_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign ALTER COLUMN id SET DEFAULT nextval('mdl_assign_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign_grades ALTER COLUMN id SET DEFAULT nextval('mdl_assign_grades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign_plugin_config ALTER COLUMN id SET DEFAULT nextval('mdl_assign_plugin_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign_submission ALTER COLUMN id SET DEFAULT nextval('mdl_assign_submission_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign_user_flags ALTER COLUMN id SET DEFAULT nextval('mdl_assign_user_flags_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assign_user_mapping ALTER COLUMN id SET DEFAULT nextval('mdl_assign_user_mapping_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assignfeedback_comments ALTER COLUMN id SET DEFAULT nextval('mdl_assignfeedback_comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assignfeedback_file ALTER COLUMN id SET DEFAULT nextval('mdl_assignfeedback_file_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assignsubmission_file ALTER COLUMN id SET DEFAULT nextval('mdl_assignsubmission_file_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_assignsubmission_onlinetext ALTER COLUMN id SET DEFAULT nextval('mdl_assignsubmission_onlinetext_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_backup_controllers ALTER COLUMN id SET DEFAULT nextval('mdl_backup_controllers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_backup_files_template ALTER COLUMN id SET DEFAULT nextval('mdl_backup_files_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_backup_ids_template ALTER COLUMN id SET DEFAULT nextval('mdl_backup_ids_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_backup_logs ALTER COLUMN id SET DEFAULT nextval('mdl_backup_logs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge ALTER COLUMN id SET DEFAULT nextval('mdl_badge_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_backpack ALTER COLUMN id SET DEFAULT nextval('mdl_badge_backpack_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_criteria ALTER COLUMN id SET DEFAULT nextval('mdl_badge_criteria_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_criteria_met ALTER COLUMN id SET DEFAULT nextval('mdl_badge_criteria_met_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_criteria_param ALTER COLUMN id SET DEFAULT nextval('mdl_badge_criteria_param_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_external ALTER COLUMN id SET DEFAULT nextval('mdl_badge_external_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_issued ALTER COLUMN id SET DEFAULT nextval('mdl_badge_issued_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_badge_manual_award ALTER COLUMN id SET DEFAULT nextval('mdl_badge_manual_award_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_bigbluebuttonbn ALTER COLUMN id SET DEFAULT nextval('mdl_bigbluebuttonbn_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_bigbluebuttonbn_log ALTER COLUMN id SET DEFAULT nextval('mdl_bigbluebuttonbn_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_block_community ALTER COLUMN id SET DEFAULT nextval('mdl_block_community_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_block_positions ALTER COLUMN id SET DEFAULT nextval('mdl_block_positions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_blog_association ALTER COLUMN id SET DEFAULT nextval('mdl_blog_association_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_blog_external ALTER COLUMN id SET DEFAULT nextval('mdl_blog_external_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_book ALTER COLUMN id SET DEFAULT nextval('mdl_book_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_book_chapters ALTER COLUMN id SET DEFAULT nextval('mdl_book_chapters_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_cache_flags ALTER COLUMN id SET DEFAULT nextval('mdl_cache_flags_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_certificate_firmas ALTER COLUMN id SET DEFAULT nextval('mdl_certificate_firmas_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_chat_messages_current ALTER COLUMN id SET DEFAULT nextval('mdl_chat_messages_current_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_cohort ALTER COLUMN id SET DEFAULT nextval('mdl_cohort_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_cohort_members ALTER COLUMN id SET DEFAULT nextval('mdl_cohort_members_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_comments ALTER COLUMN id SET DEFAULT nextval('mdl_comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_config_log ALTER COLUMN id SET DEFAULT nextval('mdl_config_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_completion_aggr_methd ALTER COLUMN id SET DEFAULT nextval('mdl_course_completion_aggr_methd_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_completion_crit_compl ALTER COLUMN id SET DEFAULT nextval('mdl_course_completion_crit_compl_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_completion_criteria ALTER COLUMN id SET DEFAULT nextval('mdl_course_completion_criteria_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_completions ALTER COLUMN id SET DEFAULT nextval('mdl_course_completions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_format_options ALTER COLUMN id SET DEFAULT nextval('mdl_course_format_options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_modules_avail_fields ALTER COLUMN id SET DEFAULT nextval('mdl_course_modules_avail_fields_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_modules_availability ALTER COLUMN id SET DEFAULT nextval('mdl_course_modules_availability_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_modules_completion ALTER COLUMN id SET DEFAULT nextval('mdl_course_modules_completion_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_published ALTER COLUMN id SET DEFAULT nextval('mdl_course_published_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_sections_avail_fields ALTER COLUMN id SET DEFAULT nextval('mdl_course_sections_avail_fields_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_sections_availability ALTER COLUMN id SET DEFAULT nextval('mdl_course_sections_availability_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_enrol ALTER COLUMN id SET DEFAULT nextval('mdl_enrol_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_enrol_flatfile ALTER COLUMN id SET DEFAULT nextval('mdl_enrol_flatfile_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_entidades ALTER COLUMN id SET DEFAULT nextval('mdl_entidades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_event_subscriptions ALTER COLUMN id SET DEFAULT nextval('mdl_event_subscriptions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_events_handlers ALTER COLUMN id SET DEFAULT nextval('mdl_events_handlers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_events_queue ALTER COLUMN id SET DEFAULT nextval('mdl_events_queue_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_events_queue_handlers ALTER COLUMN id SET DEFAULT nextval('mdl_events_queue_handlers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_external_functions ALTER COLUMN id SET DEFAULT nextval('mdl_external_functions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_external_services ALTER COLUMN id SET DEFAULT nextval('mdl_external_services_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_external_services_functions ALTER COLUMN id SET DEFAULT nextval('mdl_external_services_functions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_external_services_users ALTER COLUMN id SET DEFAULT nextval('mdl_external_services_users_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_external_tokens ALTER COLUMN id SET DEFAULT nextval('mdl_external_tokens_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_completed ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_completed_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_completedtmp ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_completedtmp_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_item ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_item_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_sitecourse_map ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_sitecourse_map_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_template ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_tracking ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_tracking_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_value ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_value_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_feedback_valuetmp ALTER COLUMN id SET DEFAULT nextval('mdl_feedback_valuetmp_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_files ALTER COLUMN id SET DEFAULT nextval('mdl_files_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_files_reference ALTER COLUMN id SET DEFAULT nextval('mdl_files_reference_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_filter_active ALTER COLUMN id SET DEFAULT nextval('mdl_filter_active_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_filter_config ALTER COLUMN id SET DEFAULT nextval('mdl_filter_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_folder ALTER COLUMN id SET DEFAULT nextval('mdl_folder_id_seq1'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_categories ALTER COLUMN id SET DEFAULT nextval('mdl_grade_categories_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_categories_history ALTER COLUMN id SET DEFAULT nextval('mdl_grade_categories_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_grades ALTER COLUMN id SET DEFAULT nextval('mdl_grade_grades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_grades_history ALTER COLUMN id SET DEFAULT nextval('mdl_grade_grades_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_import_newitem ALTER COLUMN id SET DEFAULT nextval('mdl_grade_import_newitem_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_import_values ALTER COLUMN id SET DEFAULT nextval('mdl_grade_import_values_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_items ALTER COLUMN id SET DEFAULT nextval('mdl_grade_items_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_items_history ALTER COLUMN id SET DEFAULT nextval('mdl_grade_items_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_outcomes ALTER COLUMN id SET DEFAULT nextval('mdl_grade_outcomes_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_outcomes_courses ALTER COLUMN id SET DEFAULT nextval('mdl_grade_outcomes_courses_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_outcomes_history ALTER COLUMN id SET DEFAULT nextval('mdl_grade_outcomes_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grade_settings ALTER COLUMN id SET DEFAULT nextval('mdl_grade_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grading_areas ALTER COLUMN id SET DEFAULT nextval('mdl_grading_areas_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grading_definitions ALTER COLUMN id SET DEFAULT nextval('mdl_grading_definitions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_grading_instances ALTER COLUMN id SET DEFAULT nextval('mdl_grading_instances_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_guide_comments ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_guide_comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_guide_criteria ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_guide_criteria_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_guide_fillings ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_guide_fillings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_rubric_criteria ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_rubric_criteria_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_rubric_fillings ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_rubric_fillings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_gradingform_rubric_levels ALTER COLUMN id SET DEFAULT nextval('mdl_gradingform_rubric_levels_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_imscp ALTER COLUMN id SET DEFAULT nextval('mdl_imscp_id_seq1'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_license ALTER COLUMN id SET DEFAULT nextval('mdl_license_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_log_queries ALTER COLUMN id SET DEFAULT nextval('mdl_log_queries_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_lti ALTER COLUMN id SET DEFAULT nextval('mdl_lti_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_lti_submission ALTER COLUMN id SET DEFAULT nextval('mdl_lti_submission_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_lti_types ALTER COLUMN id SET DEFAULT nextval('mdl_lti_types_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_lti_types_config ALTER COLUMN id SET DEFAULT nextval('mdl_lti_types_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_message_processors ALTER COLUMN id SET DEFAULT nextval('mdl_message_processors_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_message_providers ALTER COLUMN id SET DEFAULT nextval('mdl_message_providers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_message_working ALTER COLUMN id SET DEFAULT nextval('mdl_message_working_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_mnet_application ALTER COLUMN id SET DEFAULT nextval('mdl_mnet_application_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_mnet_remote_rpc ALTER COLUMN id SET DEFAULT nextval('mdl_mnet_remote_rpc_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_mnet_remote_service2rpc ALTER COLUMN id SET DEFAULT nextval('mdl_mnet_remote_service2rpc_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_mnetservice_enrol_courses ALTER COLUMN id SET DEFAULT nextval('mdl_mnetservice_enrol_courses_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_mnetservice_enrol_enrolments ALTER COLUMN id SET DEFAULT nextval('mdl_mnetservice_enrol_enrolments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_my_pages ALTER COLUMN id SET DEFAULT nextval('mdl_my_pages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_page ALTER COLUMN id SET DEFAULT nextval('mdl_page_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_instance ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_instance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_instance_config ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_instance_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_instance_user ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_instance_user_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_log ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_mahara_queue ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_mahara_queue_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_portfolio_tempdata ALTER COLUMN id SET DEFAULT nextval('mdl_portfolio_tempdata_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_profiling ALTER COLUMN id SET DEFAULT nextval('mdl_profiling_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_qtype_essay_options ALTER COLUMN id SET DEFAULT nextval('mdl_qtype_essay_options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_attempt_step_data ALTER COLUMN id SET DEFAULT nextval('mdl_question_attempt_step_data_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_attempt_steps ALTER COLUMN id SET DEFAULT nextval('mdl_question_attempt_steps_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_attempts ALTER COLUMN id SET DEFAULT nextval('mdl_question_attempts_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_calculated_options ALTER COLUMN id SET DEFAULT nextval('mdl_question_calculated_options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_hints ALTER COLUMN id SET DEFAULT nextval('mdl_question_hints_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_question_numerical_options ALTER COLUMN id SET DEFAULT nextval('mdl_question_numerical_options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_overrides ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_overrides_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_overview_regrades ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_overview_regrades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_question_response_stats ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_question_response_stats_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_question_statistics ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_question_statistics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_reports ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_reports_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_quiz_statistics ALTER COLUMN id SET DEFAULT nextval('mdl_quiz_statistics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_rating ALTER COLUMN id SET DEFAULT nextval('mdl_rating_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_registration_hubs ALTER COLUMN id SET DEFAULT nextval('mdl_registration_hubs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_reportinventario ALTER COLUMN id SET DEFAULT nextval('mdl_reportinventario_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_repository ALTER COLUMN id SET DEFAULT nextval('mdl_repository_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_repository_instance_config ALTER COLUMN id SET DEFAULT nextval('mdl_repository_instance_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_repository_instances ALTER COLUMN id SET DEFAULT nextval('mdl_repository_instances_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_resource_old ALTER COLUMN id SET DEFAULT nextval('mdl_resource_old_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_role_allow_switch ALTER COLUMN id SET DEFAULT nextval('mdl_role_allow_switch_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_role_context_levels ALTER COLUMN id SET DEFAULT nextval('mdl_role_context_levels_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_role_sortorder ALTER COLUMN id SET DEFAULT nextval('mdl_role_sortorder_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_scale_history ALTER COLUMN id SET DEFAULT nextval('mdl_scale_history_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_scorm_aicc_session ALTER COLUMN id SET DEFAULT nextval('mdl_scorm_aicc_session_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_sessions ALTER COLUMN id SET DEFAULT nextval('mdl_sessions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tag ALTER COLUMN id SET DEFAULT nextval('mdl_tag_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tag_correlation ALTER COLUMN id SET DEFAULT nextval('mdl_tag_correlation_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tag_instance ALTER COLUMN id SET DEFAULT nextval('mdl_tag_instance_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_temp_enroled_template ALTER COLUMN id SET DEFAULT nextval('mdl_temp_enroled_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_temp_log_template ALTER COLUMN id SET DEFAULT nextval('mdl_temp_log_template_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tmpaero ALTER COLUMN id SET DEFAULT nextval('mdl_tmpaero_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tool_customlang ALTER COLUMN id SET DEFAULT nextval('mdl_tool_customlang_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tool_customlang_components ALTER COLUMN id SET DEFAULT nextval('mdl_tool_customlang_components_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_upgrade_log ALTER COLUMN id SET DEFAULT nextval('mdl_upgrade_log_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_url ALTER COLUMN id SET DEFAULT nextval('mdl_url_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_user_enrolments ALTER COLUMN id SET DEFAULT nextval('mdl_user_enrolments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_user_private_key ALTER COLUMN id SET DEFAULT nextval('mdl_user_private_key_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_webdav_locks ALTER COLUMN id SET DEFAULT nextval('mdl_webdav_locks_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_links ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_links_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_locks ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_locks_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_pages ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_pages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_subwikis ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_subwikis_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_synonyms ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_synonyms_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_wiki_versions ALTER COLUMN id SET DEFAULT nextval('mdl_wiki_versions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshop ALTER COLUMN id SET DEFAULT nextval('mdl_workshop_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshop_aggregations ALTER COLUMN id SET DEFAULT nextval('mdl_workshop_aggregations_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshop_assessments ALTER COLUMN id SET DEFAULT nextval('mdl_workshop_assessments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshop_grades ALTER COLUMN id SET DEFAULT nextval('mdl_workshop_grades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshop_submissions ALTER COLUMN id SET DEFAULT nextval('mdl_workshop_submissions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopallocation_scheduled ALTER COLUMN id SET DEFAULT nextval('mdl_workshopallocation_scheduled_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopeval_best_settings ALTER COLUMN id SET DEFAULT nextval('mdl_workshopeval_best_settings_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_accumulative ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_accumulative_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_comments ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_numerrors ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_numerrors_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_numerrors_map ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_numerrors_map_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_rubric ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_rubric_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_rubric_config ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_rubric_config_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_workshopform_rubric_levels ALTER COLUMN id SET DEFAULT nextval('mdl_workshopform_rubric_levels_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY nom_catdeptodel ALTER COLUMN id SET DEFAULT nextval('nom_catdeptodel_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY nom_clvdepartemento ALTER COLUMN id SET DEFAULT nextval('clvdepartemento_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY nom_clvdepartemento2 ALTER COLUMN id SET DEFAULT nextval('nom_clvdepartemento2_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY nom_clvdepartementoplus ALTER COLUMN id SET DEFAULT nextval('nom_clvdepartementoplus_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY nom_delncat ALTER COLUMN id SET DEFAULT nextval('delncat_id_seq'::regclass);


SET search_path = tutorias, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_carreras ALTER COLUMN id SET DEFAULT nextval('mdl_carreras_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_cateva ALTER COLUMN id SET DEFAULT nextval('mdl_cateva_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_especialidades ALTER COLUMN id SET DEFAULT nextval('mdl_especialidades_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_estudios ALTER COLUMN id SET DEFAULT nextval('mdl_estudios_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_evaluar ALTER COLUMN id SET DEFAULT nextval('mdl_evaluar_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_instrumento ALTER COLUMN id SET DEFAULT nextval('mdl_instrumento_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_preguntas ALTER COLUMN id SET DEFAULT nextval('mdl_preguntas_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_respuestas ALTER COLUMN id SET DEFAULT nextval('mdl_respuestas_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_tipoeva ALTER COLUMN id SET DEFAULT nextval('mdl_tipoeva_id_seq'::regclass);


SET search_path = calificaciones, pg_catalog;

--
-- Name: mdl_califgenerales_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_califgenerales
    ADD CONSTRAINT mdl_califgenerales_pkey PRIMARY KEY (id);


--
-- Name: mdl_calificaciones_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_calificaciones
    ADD CONSTRAINT mdl_calificaciones_pkey PRIMARY KEY (id);


--
-- Name: mdl_caltotalgral_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_caltotalgral
    ADD CONSTRAINT mdl_caltotalgral_pkey PRIMARY KEY (id);


--
-- Name: mdl_elementoscal_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_elementoscal
    ADD CONSTRAINT mdl_elementoscal_pkey PRIMARY KEY (id);


--
-- Name: mdl_modexterno_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_modexterno
    ADD CONSTRAINT mdl_modexterno_pkey PRIMARY KEY (id);


--
-- Name: mdl_moduni_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_moduni
    ADD CONSTRAINT mdl_moduni_pkey PRIMARY KEY (id);


--
-- Name: mdl_unidades_pkey; Type: CONSTRAINT; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_unidades
    ADD CONSTRAINT mdl_unidades_pkey PRIMARY KEY (id);


SET search_path = cert, pg_catalog;

--
-- Name: mdl_certificate_cargo_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_cargo
    ADD CONSTRAINT mdl_certificate_cargo_pkey PRIMARY KEY (id);


--
-- Name: mdl_certificate_firmas_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_firmas
    ADD CONSTRAINT mdl_certificate_firmas_pkey PRIMARY KEY (id);


--
-- Name: mdl_certificate_id_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cert_certificate_parrafos
    ADD CONSTRAINT mdl_certificate_id_pkey PRIMARY KEY (id);


--
-- Name: mdl_certificate_issues_tut_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_issues_tut
    ADD CONSTRAINT mdl_certificate_issues_tut_pkey PRIMARY KEY (id);


--
-- Name: ssc_cat_cargo_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cat_cargo
    ADD CONSTRAINT ssc_cat_cargo_pkey PRIMARY KEY (cve_cargo);


--
-- Name: ssc_cat_firma_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cat_firma
    ADD CONSTRAINT ssc_cat_firma_pkey PRIMARY KEY (cve_firma);


--
-- Name: ssc_cat_formato_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cat_formato
    ADD CONSTRAINT ssc_cat_formato_pkey PRIMARY KEY (cve_formato);


--
-- Name: ssc_cat_tipo_elemento_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cat_tipo_elemento
    ADD CONSTRAINT ssc_cat_tipo_elemento_pkey PRIMARY KEY (cve_tipo_elemento);


--
-- Name: ssc_cert_certificate_parrafos_pky; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cert_certificate_cve
    ADD CONSTRAINT ssc_cert_certificate_parrafos_pky PRIMARY KEY (cve_cert_config, idrol, id_parrafos);


--
-- Name: ssc_cert_issues_bitacora_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_cert_issues_bitacora
    ADD CONSTRAINT ssc_cert_issues_bitacora_pkey PRIMARY KEY (cve_issues_bitacora);


--
-- Name: ssc_tab_cert_firmas_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_tab_cert_firmas
    ADD CONSTRAINT ssc_tab_cert_firmas_pkey PRIMARY KEY (cve_cert_config, cve_firma);


--
-- Name: ssc_tab_cert_issues_conf_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_tab_cert_issues_conf
    ADD CONSTRAINT ssc_tab_cert_issues_conf_pkey PRIMARY KEY (cert_issues_id);


--
-- Name: ssc_tab_certificate_config_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_tab_certificate_config
    ADD CONSTRAINT ssc_tab_certificate_config_pkey PRIMARY KEY (cve_cert_config);


--
-- Name: ssc_tab_format_elem_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_tab_format_elem
    ADD CONSTRAINT ssc_tab_format_elem_pkey PRIMARY KEY (cve_format_elem);


--
-- Name: ssc_tab_liberacion_pkey; Type: CONSTRAINT; Schema: cert; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssc_tab_liberacion
    ADD CONSTRAINT ssc_tab_liberacion_pkey PRIMARY KEY (cve_cert_liberacion);


SET search_path = departments, pg_catalog;

--
-- Name: sdcns_pk_dead_deptoadscripcionprimary; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_depto_adscripcion
    ADD CONSTRAINT sdcns_pk_dead_deptoadscripcionprimary PRIMARY KEY (cve_depto_adscripcion);


--
-- Name: sdcns_pk_dele_delegacion; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_delegacion
    ADD CONSTRAINT sdcns_pk_dele_delegacion PRIMARY KEY (cve_delegacion);


--
-- Name: sdcns_pk_depe_dependencia; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_dependencia
    ADD CONSTRAINT sdcns_pk_depe_dependencia PRIMARY KEY (cve_depto_adscripcion);


--
-- Name: sdcns_pk_niat_nivelatencion; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_nivel_atencion
    ADD CONSTRAINT sdcns_pk_niat_nivelatencion PRIMARY KEY (cve_nivel_atencion);


--
-- Name: sdcns_pk_norm_cvenorm; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_normativa
    ADD CONSTRAINT sdcns_pk_norm_cvenorm PRIMARY KEY (cve_organo_control, cve_departamento);


--
-- Name: sdcns_pk_orco_orgcontrol; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_organo_control
    ADD CONSTRAINT sdcns_pk_orco_orgcontrol PRIMARY KEY (cve_organo_control);


--
-- Name: sdcns_pk_unat_unidadatencion; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_unidad_atencion
    ADD CONSTRAINT sdcns_pk_unat_unidadatencion PRIMARY KEY (cve_unidad_atencion);


--
-- Name: ssd_region_pkey; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_regiones
    ADD CONSTRAINT ssd_region_pkey PRIMARY KEY (cve_regiones);


--
-- Name: ssd_tipo_pk; Type: CONSTRAINT; Schema: departments; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssd_cat_tipo_adscripcion
    ADD CONSTRAINT ssd_tipo_pk PRIMARY KEY (id);


SET search_path = encuestas, pg_catalog;

--
-- Name: pk_evaluacion; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_evaluacion
    ADD CONSTRAINT pk_evaluacion PRIMARY KEY (evaluacion_cve);


--
-- Name: pk_preguntas; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT pk_preguntas PRIMARY KEY (preguntas_cve, encuesta_cve);


--
-- Name: pk_respuestas; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_respuestas
    ADD CONSTRAINT pk_respuestas PRIMARY KEY (encuesta_cve, preguntas_cve, reactivos_cve);


--
-- Name: sse_curso_bloque_grupopkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_curso_bloque_grupo
    ADD CONSTRAINT sse_curso_bloque_grupopkey PRIMARY KEY (course_cve, mdl_groups_cve, bloque);


--
-- Name: sse_encuesta_curso_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_encuesta_curso
    ADD CONSTRAINT sse_encuesta_curso_pkey PRIMARY KEY (encuesta_curso_cve);


--
-- Name: sse_encuestas_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_encuestas
    ADD CONSTRAINT sse_encuestas_pkey PRIMARY KEY (encuesta_cve);


--
-- Name: sse_indicador_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_indicador
    ADD CONSTRAINT sse_indicador_pkey PRIMARY KEY (indicador_cve);


--
-- Name: sse_reglas_evaluacion_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_reglas_evaluacion
    ADD CONSTRAINT sse_reglas_evaluacion_pkey PRIMARY KEY (reglas_evaluacion_cve);


--
-- Name: sse_result_evaluacion_encuesta_cursopkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_result_evaluacion_encuesta_curso
    ADD CONSTRAINT sse_result_evaluacion_encuesta_cursopkey PRIMARY KEY (evaluacion_resul_cve);


--
-- Name: sse_seccion_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_seccion
    ADD CONSTRAINT sse_seccion_pkey PRIMARY KEY (seccion_cve);


--
-- Name: sse_tipo_pregunta_pkey; Type: CONSTRAINT; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sse_tipo_pregunta
    ADD CONSTRAINT sse_tipo_pregunta_pkey PRIMARY KEY (tipo_pregunta_cve);


SET search_path = externo, pg_catalog;

--
-- Name: pk_msg_usuario; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_msg_user
    ADD CONSTRAINT pk_msg_usuario PRIMARY KEY (cve_msg_user);


--
-- Name: ssx_acceso_del_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_acceso_del
    ADD CONSTRAINT ssx_acceso_del_pkey PRIMARY KEY (id_acceso_del);


--
-- Name: ssx_acceso_modulo_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_acceso_modulo
    ADD CONSTRAINT ssx_acceso_modulo_pkey PRIMARY KEY (cve_acceso_modulo, cve_usuario, cve_modulo);


--
-- Name: ssx_modulo_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_modulo
    ADD CONSTRAINT ssx_modulo_pkey PRIMARY KEY (cve_modulo);


--
-- Name: ssx_rol_admin_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_rol_admin
    ADD CONSTRAINT ssx_rol_admin_pkey PRIMARY KEY (cve_rol_admin);


--
-- Name: ssx_tipo_medico_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_tipo_medico
    ADD CONSTRAINT ssx_tipo_medico_pkey PRIMARY KEY (cve_tipo_medico);


--
-- Name: ssx_usuario_pkey; Type: CONSTRAINT; Schema: externo; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssx_usuario
    ADD CONSTRAINT ssx_usuario_pkey PRIMARY KEY (cve_usuario);


SET search_path = gestion, pg_catalog;

--
-- Name: pky; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sgp_tab_temp_usuario
    ADD CONSTRAINT pky PRIMARY KEY (matricula);


--
-- Name: sdcns_pk_acci_id; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_accion
    ADD CONSTRAINT sdcns_pk_acci_id PRIMARY KEY (id);


--
-- Name: sdcns_pk_losi_id; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_log_sied
    ADD CONSTRAINT sdcns_pk_losi_id PRIMARY KEY (id);


--
-- Name: sgp_cat_medio_entero_pkey; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sgp_cat_medio_entero
    ADD CONSTRAINT sgp_cat_medio_entero_pkey PRIMARY KEY (cve_medio);


--
-- Name: sgp_tab_cuodel_pkey; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sgp_tab_cuodel_pkey PRIMARY KEY (cve_id);


--
-- Name: sgp_tab_preregistro_al_pkey; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sgp_tab_preregistro_al
    ADD CONSTRAINT sgp_tab_preregistro_al_pkey PRIMARY KEY (cve_preregistro, nom_usuario);


--
-- Name: sgp_tab_usuario_pkey; Type: CONSTRAINT; Schema: gestion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY sgp_tab_usuario
    ADD CONSTRAINT sgp_tab_usuario_pkey PRIMARY KEY (nom_usuario);


SET search_path = mesa_ayuda, pg_catalog;

--
-- Name: cat_medio_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_medio
    ADD CONSTRAINT cat_medio_pkey PRIMARY KEY (id);


--
-- Name: cat_tipoincidencia_esp_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_tipoincidencia_esp
    ADD CONSTRAINT cat_tipoincidencia_esp_pkey PRIMARY KEY (id);


--
-- Name: estatus_incidencia_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY estatus
    ADD CONSTRAINT estatus_incidencia_pkey PRIMARY KEY (id);


--
-- Name: incidencias_esp_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY incidencias_can
    ADD CONSTRAINT incidencias_esp_pkey PRIMARY KEY (id);


--
-- Name: incidencias_pkey1; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY incidencias
    ADD CONSTRAINT incidencias_pkey1 PRIMARY KEY (id);


--
-- Name: incidencias_resp_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY incidencias_resp
    ADD CONSTRAINT incidencias_resp_pkey PRIMARY KEY (id);


--
-- Name: log_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY log
    ADD CONSTRAINT log_pkey PRIMARY KEY (id);


--
-- Name: navegador_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_navegador
    ADD CONSTRAINT navegador_pkey PRIMARY KEY (id);


--
-- Name: prioridad_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_prioridad
    ADD CONSTRAINT prioridad_pkey PRIMARY KEY (id);


--
-- Name: tipo_incidencia_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_tipoincidencia
    ADD CONSTRAINT tipo_incidencia_pkey PRIMARY KEY (id);

ALTER TABLE cat_tipoincidencia CLUSTER ON tipo_incidencia_pkey;


--
-- Name: tipo_resp_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY tipo_resp
    ADD CONSTRAINT tipo_resp_pkey PRIMARY KEY (id);


--
-- Name: usuarios_can_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY cat_usuariocan
    ADD CONSTRAINT usuarios_can_pkey PRIMARY KEY (id);


--
-- Name: usuarios_esp_pkey; Type: CONSTRAINT; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY usuarios_esp
    ADD CONSTRAINT usuarios_esp_pkey PRIMARY KEY (id);


SET search_path = nomina, pg_catalog;

--
-- Name: ssn_categoria_des_clave; Type: CONSTRAINT; Schema: nomina; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssn_categoria
    ADD CONSTRAINT ssn_categoria_des_clave UNIQUE (des_clave);


--
-- Name: ssn_categoria_pkey; Type: CONSTRAINT; Schema: nomina; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssn_categoria
    ADD CONSTRAINT ssn_categoria_pkey PRIMARY KEY (cve_categoria);


--
-- Name: ssn_tipo_catgoria_pkey; Type: CONSTRAINT; Schema: nomina; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssn_tipo_catgoria
    ADD CONSTRAINT ssn_tipo_catgoria_pkey PRIMARY KEY (cve_tipo_categoria);


SET search_path = parametrizacion, pg_catalog;

--
-- Name: spcns_pk_menu_menu; Type: CONSTRAINT; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssp_cat_menu
    ADD CONSTRAINT spcns_pk_menu_menu PRIMARY KEY (cve_menu);


--
-- Name: spcns_pk_usme_cveusme; Type: CONSTRAINT; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssp_tab_usuario_menu
    ADD CONSTRAINT spcns_pk_usme_cveusme PRIMARY KEY (cve_usuario, cve_rol, cve_menu);


--
-- Name: ssp_id_pky; Type: CONSTRAINT; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssp_cat_perfil_nombre
    ADD CONSTRAINT ssp_id_pky PRIMARY KEY (id_tipo);


--
-- Name: ssp_tipo_roles_pkey; Type: CONSTRAINT; Schema: parametrizacion; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY ssp_tipo_roles
    ADD CONSTRAINT ssp_tipo_roles_pkey PRIMARY KEY (cve_role);


SET search_path = public, pg_catalog;

--
-- Name: clvdepartemento_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY nom_clvdepartemento
    ADD CONSTRAINT clvdepartemento_pkey PRIMARY KEY (id);


--
-- Name: mdl_adodlogs_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY adodb_logsql
    ADD CONSTRAINT mdl_adodlogs_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assi_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign
    ADD CONSTRAINT mdl_assi_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_assi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignment
    ADD CONSTRAINT mdl_assi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assicomm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignfeedback_comments
    ADD CONSTRAINT mdl_assicomm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assifile_id3_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignfeedback_file
    ADD CONSTRAINT mdl_assifile_id3_pk PRIMARY KEY (id);


--
-- Name: mdl_assifile_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignsubmission_file
    ADD CONSTRAINT mdl_assifile_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assigrad_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign_grades
    ADD CONSTRAINT mdl_assigrad_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assionli_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignsubmission_onlinetext
    ADD CONSTRAINT mdl_assionli_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assiplugconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign_plugin_config
    ADD CONSTRAINT mdl_assiplugconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assisubm_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign_submission
    ADD CONSTRAINT mdl_assisubm_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_assisubm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assignment_submissions
    ADD CONSTRAINT mdl_assisubm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assiuserflag_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign_user_flags
    ADD CONSTRAINT mdl_assiuserflag_id_pk PRIMARY KEY (id);


--
-- Name: mdl_assiusermapp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_assign_user_mapping
    ADD CONSTRAINT mdl_assiusermapp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_backcont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_backup_controllers
    ADD CONSTRAINT mdl_backcont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_backcour_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_backup_courses
    ADD CONSTRAINT mdl_backcour_id_pk PRIMARY KEY (id);


--
-- Name: mdl_backfiletemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_backup_files_template
    ADD CONSTRAINT mdl_backfiletemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_backidstemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_backup_ids_template
    ADD CONSTRAINT mdl_backidstemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_backlogs_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_backup_logs
    ADD CONSTRAINT mdl_backlogs_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badg_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge
    ADD CONSTRAINT mdl_badg_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgback_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_backpack
    ADD CONSTRAINT mdl_badgback_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgcrit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_criteria
    ADD CONSTRAINT mdl_badgcrit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgcritmet_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_criteria_met
    ADD CONSTRAINT mdl_badgcritmet_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgcritpara_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_criteria_param
    ADD CONSTRAINT mdl_badgcritpara_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgexte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_external
    ADD CONSTRAINT mdl_badgexte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgissu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_issued
    ADD CONSTRAINT mdl_badgissu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_badgmanuawar_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_badge_manual_award
    ADD CONSTRAINT mdl_badgmanuawar_id_pk PRIMARY KEY (id);


--
-- Name: mdl_bigb_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_bigbluebuttonbn
    ADD CONSTRAINT mdl_bigb_id_pk PRIMARY KEY (id);


--
-- Name: mdl_bigblog_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_bigbluebuttonbn_log
    ADD CONSTRAINT mdl_bigblog_id_pk PRIMARY KEY (id);


--
-- Name: mdl_bloc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_block
    ADD CONSTRAINT mdl_bloc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_bloccomm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_block_community
    ADD CONSTRAINT mdl_bloccomm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_blocinst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_block_instances
    ADD CONSTRAINT mdl_blocinst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_blocposi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_block_positions
    ADD CONSTRAINT mdl_blocposi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_blocrssclie_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_block_rss_client
    ADD CONSTRAINT mdl_blocrssclie_id_pk PRIMARY KEY (id);


--
-- Name: mdl_blogasso_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_blog_association
    ADD CONSTRAINT mdl_blogasso_id_pk PRIMARY KEY (id);


--
-- Name: mdl_blogexte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_blog_external
    ADD CONSTRAINT mdl_blogexte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_book_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_book
    ADD CONSTRAINT mdl_book_id_pk PRIMARY KEY (id);


--
-- Name: mdl_bookchap_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_book_chapters
    ADD CONSTRAINT mdl_bookchap_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cachfilt_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cache_filters
    ADD CONSTRAINT mdl_cachfilt_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cachflag_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cache_flags
    ADD CONSTRAINT mdl_cachflag_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cachtext_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cache_text
    ADD CONSTRAINT mdl_cachtext_id_pk PRIMARY KEY (id);


--
-- Name: mdl_calendary_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_calendary
    ADD CONSTRAINT mdl_calendary_pkey PRIMARY KEY (id);


--
-- Name: mdl_capa_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_capabilities
    ADD CONSTRAINT mdl_capa_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cert_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate
    ADD CONSTRAINT mdl_cert_id_pk PRIMARY KEY (id);


--
-- Name: mdl_certconf_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_conf
    ADD CONSTRAINT mdl_certconf_pk PRIMARY KEY (issuesid);


--
-- Name: mdl_certificate_firmas_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_firmas
    ADD CONSTRAINT mdl_certificate_firmas_pkey PRIMARY KEY (id);


--
-- Name: mdl_certissu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_issues
    ADD CONSTRAINT mdl_certissu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_chat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_chat
    ADD CONSTRAINT mdl_chat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_chatmess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_chat_messages
    ADD CONSTRAINT mdl_chatmess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_chatmesscurr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_chat_messages_current
    ADD CONSTRAINT mdl_chatmesscurr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_chatuser_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_chat_users
    ADD CONSTRAINT mdl_chatuser_id_pk PRIMARY KEY (id);


--
-- Name: mdl_choi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_choice
    ADD CONSTRAINT mdl_choi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_choiansw_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_choice_answers
    ADD CONSTRAINT mdl_choiansw_id_pk PRIMARY KEY (id);


--
-- Name: mdl_choiopti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_choice_options
    ADD CONSTRAINT mdl_choiopti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_coho_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cohort
    ADD CONSTRAINT mdl_coho_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cohomemb_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cohort_members
    ADD CONSTRAINT mdl_cohomemb_id_pk PRIMARY KEY (id);


--
-- Name: mdl_comm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_comments
    ADD CONSTRAINT mdl_comm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_conf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_config
    ADD CONSTRAINT mdl_conf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_conflog_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_config_log
    ADD CONSTRAINT mdl_conflog_id_pk PRIMARY KEY (id);


--
-- Name: mdl_confplug_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_config_plugins
    ADD CONSTRAINT mdl_confplug_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_context
    ADD CONSTRAINT mdl_cont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_conttemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_context_temp
    ADD CONSTRAINT mdl_conttemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_cour_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course
    ADD CONSTRAINT mdl_cour_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courcate_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_categories
    ADD CONSTRAINT mdl_courcate_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courcomp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_completions
    ADD CONSTRAINT mdl_courcomp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courcompaggrmeth_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_completion_aggr_methd
    ADD CONSTRAINT mdl_courcompaggrmeth_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courcompcrit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_completion_criteria
    ADD CONSTRAINT mdl_courcompcrit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courcompcritcomp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_completion_crit_compl
    ADD CONSTRAINT mdl_courcompcritcomp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courformopti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_format_options
    ADD CONSTRAINT mdl_courformopti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courmodu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_modules
    ADD CONSTRAINT mdl_courmodu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courmoduavai_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_modules_availability
    ADD CONSTRAINT mdl_courmoduavai_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courmoduavaifiel_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_modules_avail_fields
    ADD CONSTRAINT mdl_courmoduavaifiel_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courmoducomp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_modules_completion
    ADD CONSTRAINT mdl_courmoducomp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courpubl_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_published
    ADD CONSTRAINT mdl_courpubl_id_pk PRIMARY KEY (id);


--
-- Name: mdl_courrequ_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_request
    ADD CONSTRAINT mdl_courrequ_id_pk PRIMARY KEY (id);


--
-- Name: mdl_coursect_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_sections
    ADD CONSTRAINT mdl_coursect_id_pk PRIMARY KEY (id);


--
-- Name: mdl_coursectavai_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_sections_availability
    ADD CONSTRAINT mdl_coursectavai_id_pk PRIMARY KEY (id);


--
-- Name: mdl_coursectavaifiel_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_sections_avail_fields
    ADD CONSTRAINT mdl_coursectavaifiel_id_pk PRIMARY KEY (id);


--
-- Name: mdl_data_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_data
    ADD CONSTRAINT mdl_data_id_pk PRIMARY KEY (id);


--
-- Name: mdl_datacont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_data_content
    ADD CONSTRAINT mdl_datacont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_datafiel_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_data_fields
    ADD CONSTRAINT mdl_datafiel_id_pk PRIMARY KEY (id);


--
-- Name: mdl_datareco_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_data_records
    ADD CONSTRAINT mdl_datareco_id_pk PRIMARY KEY (id);


--
-- Name: mdl_dimd_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_dimdim
    ADD CONSTRAINT mdl_dimd_id_pk PRIMARY KEY (id);


--
-- Name: mdl_enro_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_enrol
    ADD CONSTRAINT mdl_enro_id_pk PRIMARY KEY (id);


--
-- Name: mdl_enroauth_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_enrol_authorize
    ADD CONSTRAINT mdl_enroauth_id_pk PRIMARY KEY (id);


--
-- Name: mdl_enroauthrefu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_enrol_authorize_refunds
    ADD CONSTRAINT mdl_enroauthrefu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_enroflat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_enrol_flatfile
    ADD CONSTRAINT mdl_enroflat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_enropayp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_enrol_paypal
    ADD CONSTRAINT mdl_enropayp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_entidades_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_entidades
    ADD CONSTRAINT mdl_entidades_pkey PRIMARY KEY (id);


--
-- Name: mdl_even_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_event
    ADD CONSTRAINT mdl_even_id_pk PRIMARY KEY (id);


--
-- Name: mdl_evenhand_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_events_handlers
    ADD CONSTRAINT mdl_evenhand_id_pk PRIMARY KEY (id);


--
-- Name: mdl_evenqueu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_events_queue
    ADD CONSTRAINT mdl_evenqueu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_evenqueuhand_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_events_queue_handlers
    ADD CONSTRAINT mdl_evenqueuhand_id_pk PRIMARY KEY (id);


--
-- Name: mdl_evensubs_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_event_subscriptions
    ADD CONSTRAINT mdl_evensubs_id_pk PRIMARY KEY (id);


--
-- Name: mdl_extefunc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_external_functions
    ADD CONSTRAINT mdl_extefunc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_exteserv_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_external_services
    ADD CONSTRAINT mdl_exteserv_id_pk PRIMARY KEY (id);


--
-- Name: mdl_exteservfunc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_external_services_functions
    ADD CONSTRAINT mdl_exteservfunc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_exteservuser_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_external_services_users
    ADD CONSTRAINT mdl_exteservuser_id_pk PRIMARY KEY (id);


--
-- Name: mdl_extetoke_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_external_tokens
    ADD CONSTRAINT mdl_extetoke_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feed_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback
    ADD CONSTRAINT mdl_feed_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feedcomp_id3_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_completedtmp
    ADD CONSTRAINT mdl_feedcomp_id3_pk PRIMARY KEY (id);


--
-- Name: mdl_feedcomp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_completed
    ADD CONSTRAINT mdl_feedcomp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feeditem_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_item
    ADD CONSTRAINT mdl_feeditem_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feedsitemap_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_sitecourse_map
    ADD CONSTRAINT mdl_feedsitemap_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feedtemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_template
    ADD CONSTRAINT mdl_feedtemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feedtrac_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_tracking
    ADD CONSTRAINT mdl_feedtrac_id_pk PRIMARY KEY (id);


--
-- Name: mdl_feedvalu_id3_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_valuetmp
    ADD CONSTRAINT mdl_feedvalu_id3_pk PRIMARY KEY (id);


--
-- Name: mdl_feedvalu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_feedback_value
    ADD CONSTRAINT mdl_feedvalu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_file_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_files
    ADD CONSTRAINT mdl_file_id_pk PRIMARY KEY (id);


--
-- Name: mdl_filerefe_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_files_reference
    ADD CONSTRAINT mdl_filerefe_id_pk PRIMARY KEY (id);


--
-- Name: mdl_filtacti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_filter_active
    ADD CONSTRAINT mdl_filtacti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_filtconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_filter_config
    ADD CONSTRAINT mdl_filtconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_fold_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_folder
    ADD CONSTRAINT mdl_fold_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_fold_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY folder
    ADD CONSTRAINT mdl_fold_id_pk PRIMARY KEY (id);


--
-- Name: mdl_foru_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum
    ADD CONSTRAINT mdl_foru_id_pk PRIMARY KEY (id);


--
-- Name: mdl_forudisc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_discussions
    ADD CONSTRAINT mdl_forudisc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_forupost_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_posts
    ADD CONSTRAINT mdl_forupost_id_pk PRIMARY KEY (id);


--
-- Name: mdl_foruqueu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_queue
    ADD CONSTRAINT mdl_foruqueu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_foruread_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_read
    ADD CONSTRAINT mdl_foruread_id_pk PRIMARY KEY (id);


--
-- Name: mdl_forusubs_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_subscriptions
    ADD CONSTRAINT mdl_forusubs_id_pk PRIMARY KEY (id);


--
-- Name: mdl_forutracpref_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_forum_track_prefs
    ADD CONSTRAINT mdl_forutracpref_id_pk PRIMARY KEY (id);


--
-- Name: mdl_glos_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary
    ADD CONSTRAINT mdl_glos_id_pk PRIMARY KEY (id);


--
-- Name: mdl_glosalia_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary_alias
    ADD CONSTRAINT mdl_glosalia_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gloscate_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary_categories
    ADD CONSTRAINT mdl_gloscate_id_pk PRIMARY KEY (id);


--
-- Name: mdl_glosentr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary_entries
    ADD CONSTRAINT mdl_glosentr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_glosentrcate_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary_entries_categories
    ADD CONSTRAINT mdl_glosentrcate_id_pk PRIMARY KEY (id);


--
-- Name: mdl_glosform_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_glossary_formats
    ADD CONSTRAINT mdl_glosform_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradarea_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grading_areas
    ADD CONSTRAINT mdl_gradarea_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradcate_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_categories
    ADD CONSTRAINT mdl_gradcate_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_gradcatehist_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_categories_history
    ADD CONSTRAINT mdl_gradcatehist_id_pk PRIMARY KEY (id);


--
-- Name: mdl_graddefi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grading_definitions
    ADD CONSTRAINT mdl_graddefi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradgrad_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_grades
    ADD CONSTRAINT mdl_gradgrad_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradgradhist_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_grades_history
    ADD CONSTRAINT mdl_gradgradhist_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradguidcomm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_guide_comments
    ADD CONSTRAINT mdl_gradguidcomm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradguidcrit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_guide_criteria
    ADD CONSTRAINT mdl_gradguidcrit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradguidfill_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_guide_fillings
    ADD CONSTRAINT mdl_gradguidfill_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradimponewi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_import_newitem
    ADD CONSTRAINT mdl_gradimponewi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradimpovalu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_import_values
    ADD CONSTRAINT mdl_gradimpovalu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradinst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grading_instances
    ADD CONSTRAINT mdl_gradinst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_graditem_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_items
    ADD CONSTRAINT mdl_graditem_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_graditemhist_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_items_history
    ADD CONSTRAINT mdl_graditemhist_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradlett_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_letters
    ADD CONSTRAINT mdl_gradlett_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradoutc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_outcomes
    ADD CONSTRAINT mdl_gradoutc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradoutccour_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_outcomes_courses
    ADD CONSTRAINT mdl_gradoutccour_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradoutchist_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_outcomes_history
    ADD CONSTRAINT mdl_gradoutchist_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradrubrcrit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_rubric_criteria
    ADD CONSTRAINT mdl_gradrubrcrit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradrubrfill_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_rubric_fillings
    ADD CONSTRAINT mdl_gradrubrfill_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradrubrleve_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_gradingform_rubric_levels
    ADD CONSTRAINT mdl_gradrubrleve_id_pk PRIMARY KEY (id);


--
-- Name: mdl_gradsett_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_grade_settings
    ADD CONSTRAINT mdl_gradsett_id_pk PRIMARY KEY (id);


--
-- Name: mdl_grou_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_groups
    ADD CONSTRAINT mdl_grou_id_pk PRIMARY KEY (id);


--
-- Name: mdl_grougrou_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_groupings
    ADD CONSTRAINT mdl_grougrou_id_pk PRIMARY KEY (id);


--
-- Name: mdl_grougrougrou_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_groupings_groups
    ADD CONSTRAINT mdl_grougrougrou_id_pk PRIMARY KEY (id);


--
-- Name: mdl_groumemb_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_groups_members
    ADD CONSTRAINT mdl_groumemb_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot
    ADD CONSTRAINT mdl_hotp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotpatte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot_attempts
    ADD CONSTRAINT mdl_hotpatte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotpdeta_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot_details
    ADD CONSTRAINT mdl_hotpdeta_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotpques_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot_questions
    ADD CONSTRAINT mdl_hotpques_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotpresp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot_responses
    ADD CONSTRAINT mdl_hotpresp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_hotpstri_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_hotpot_strings
    ADD CONSTRAINT mdl_hotpstri_id_pk PRIMARY KEY (id);


--
-- Name: mdl_imsc_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_imscp
    ADD CONSTRAINT mdl_imsc_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_imsc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY imscp
    ADD CONSTRAINT mdl_imsc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_labe_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_label
    ADD CONSTRAINT mdl_labe_id_pk PRIMARY KEY (id);


--
-- Name: mdl_less_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson
    ADD CONSTRAINT mdl_less_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lessansw_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_answers
    ADD CONSTRAINT mdl_lessansw_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lessatte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_attempts
    ADD CONSTRAINT mdl_lessatte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lessbran_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_branch
    ADD CONSTRAINT mdl_lessbran_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lessgrad_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_grades
    ADD CONSTRAINT mdl_lessgrad_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lesshighscor_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_high_scores
    ADD CONSTRAINT mdl_lesshighscor_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lesspage_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_pages
    ADD CONSTRAINT mdl_lesspage_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lesstime_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lesson_timer
    ADD CONSTRAINT mdl_lesstime_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lice_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_license
    ADD CONSTRAINT mdl_lice_id_pk PRIMARY KEY (id);


--
-- Name: mdl_log_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_log
    ADD CONSTRAINT mdl_log_id_pk PRIMARY KEY (id);


--
-- Name: mdl_logdisp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_log_display
    ADD CONSTRAINT mdl_logdisp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_logquer_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_log_queries
    ADD CONSTRAINT mdl_logquer_id_pk PRIMARY KEY (id);


--
-- Name: mdl_lti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lti
    ADD CONSTRAINT mdl_lti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_ltisubm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lti_submission
    ADD CONSTRAINT mdl_ltisubm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_ltitype_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lti_types
    ADD CONSTRAINT mdl_ltitype_id_pk PRIMARY KEY (id);


--
-- Name: mdl_ltitypeconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_lti_types_config
    ADD CONSTRAINT mdl_ltitypeconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message
    ADD CONSTRAINT mdl_mess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_messcont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message_contacts
    ADD CONSTRAINT mdl_messcont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_messproc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message_processors
    ADD CONSTRAINT mdl_messproc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_messprov_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message_providers
    ADD CONSTRAINT mdl_messprov_id_pk PRIMARY KEY (id);


--
-- Name: mdl_messread_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message_read
    ADD CONSTRAINT mdl_messread_id_pk PRIMARY KEY (id);


--
-- Name: mdl_messwork_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_message_working
    ADD CONSTRAINT mdl_messwork_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetappl_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_application
    ADD CONSTRAINT mdl_mnetappl_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetenrocour_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnetservice_enrol_courses
    ADD CONSTRAINT mdl_mnetenrocour_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetenroenro_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnetservice_enrol_enrolments
    ADD CONSTRAINT mdl_mnetenroenro_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnethost_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_host2service
    ADD CONSTRAINT mdl_mnethost_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_mnethost_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_host
    ADD CONSTRAINT mdl_mnethost_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetlog_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_log
    ADD CONSTRAINT mdl_mnetlog_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetremorpc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_remote_rpc
    ADD CONSTRAINT mdl_mnetremorpc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetremoserv_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_remote_service2rpc
    ADD CONSTRAINT mdl_mnetremoserv_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetrpc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_rpc
    ADD CONSTRAINT mdl_mnetrpc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetserv_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_service2rpc
    ADD CONSTRAINT mdl_mnetserv_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetserv_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_service
    ADD CONSTRAINT mdl_mnetserv_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetsess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_session
    ADD CONSTRAINT mdl_mnetsess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mnetssoaccecont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_mnet_sso_access_control
    ADD CONSTRAINT mdl_mnetssoaccecont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_modu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_modules
    ADD CONSTRAINT mdl_modu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_mypage_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_my_pages
    ADD CONSTRAINT mdl_mypage_id_pk PRIMARY KEY (id);


--
-- Name: mdl_page_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_page
    ADD CONSTRAINT mdl_page_id_pk PRIMARY KEY (id);


--
-- Name: mdl_portinst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_instance
    ADD CONSTRAINT mdl_portinst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_portinstconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_instance_config
    ADD CONSTRAINT mdl_portinstconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_portinstuser_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_instance_user
    ADD CONSTRAINT mdl_portinstuser_id_pk PRIMARY KEY (id);


--
-- Name: mdl_portlog_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_log
    ADD CONSTRAINT mdl_portlog_id_pk PRIMARY KEY (id);


--
-- Name: mdl_portmahaqueu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_mahara_queue
    ADD CONSTRAINT mdl_portmahaqueu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_porttemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_portfolio_tempdata
    ADD CONSTRAINT mdl_porttemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_post_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_post
    ADD CONSTRAINT mdl_post_id_pk PRIMARY KEY (id);


--
-- Name: mdl_prof_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_profiling
    ADD CONSTRAINT mdl_prof_id_pk PRIMARY KEY (id);


--
-- Name: mdl_qtypessaopti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_qtype_essay_options
    ADD CONSTRAINT mdl_qtypessaopti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_ques_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question
    ADD CONSTRAINT mdl_ques_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesansw_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_answers
    ADD CONSTRAINT mdl_quesansw_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesatte_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_attempts
    ADD CONSTRAINT mdl_quesatte_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_quesatte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_usages
    ADD CONSTRAINT mdl_quesatte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesattestep_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_attempt_steps
    ADD CONSTRAINT mdl_quesattestep_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesattestepdata_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_attempt_step_data
    ADD CONSTRAINT mdl_quesattestepdata_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quescalc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_calculated
    ADD CONSTRAINT mdl_quescalc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quescalcopti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_calculated_options
    ADD CONSTRAINT mdl_quescalcopti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quescate_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_categories
    ADD CONSTRAINT mdl_quescate_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesdata_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_datasets
    ADD CONSTRAINT mdl_quesdata_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesdatadefi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_dataset_definitions
    ADD CONSTRAINT mdl_quesdatadefi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesdataitem_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_dataset_items
    ADD CONSTRAINT mdl_quesdataitem_id_pk PRIMARY KEY (id);


--
-- Name: mdl_queshint_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_hints
    ADD CONSTRAINT mdl_queshint_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesmatc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_qtype_match_options
    ADD CONSTRAINT mdl_quesmatc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesmatcsub_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_qtype_match_subquestions
    ADD CONSTRAINT mdl_quesmatcsub_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesmult_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_multichoice
    ADD CONSTRAINT mdl_quesmult_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_quesmult_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_multianswer
    ADD CONSTRAINT mdl_quesmult_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesnume_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_numerical
    ADD CONSTRAINT mdl_quesnume_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesnumeopti_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_numerical_options
    ADD CONSTRAINT mdl_quesnumeopti_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesnumeunit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_numerical_units
    ADD CONSTRAINT mdl_quesnumeunit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesrand_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_randomsamatch
    ADD CONSTRAINT mdl_quesrand_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quessess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_sessions
    ADD CONSTRAINT mdl_quessess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesshor_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_qtype_shortanswer_options
    ADD CONSTRAINT mdl_quesshor_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quesstat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_states
    ADD CONSTRAINT mdl_quesstat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_questrue_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_question_truefalse
    ADD CONSTRAINT mdl_questrue_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quiz_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz
    ADD CONSTRAINT mdl_quiz_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizatte_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_attempts
    ADD CONSTRAINT mdl_quizatte_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizfeed_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_feedback
    ADD CONSTRAINT mdl_quizfeed_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizgrad_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_grades
    ADD CONSTRAINT mdl_quizgrad_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizover_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_overrides
    ADD CONSTRAINT mdl_quizover_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizoverregr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_overview_regrades
    ADD CONSTRAINT mdl_quizoverregr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizquesinst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_question_instances
    ADD CONSTRAINT mdl_quizquesinst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizquesrespstat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_question_response_stats
    ADD CONSTRAINT mdl_quizquesrespstat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizquesstat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_question_statistics
    ADD CONSTRAINT mdl_quizquesstat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizrepo_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_reports
    ADD CONSTRAINT mdl_quizrepo_id_pk PRIMARY KEY (id);


--
-- Name: mdl_quizstat_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_quiz_statistics
    ADD CONSTRAINT mdl_quizstat_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rati_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_rating
    ADD CONSTRAINT mdl_rati_id_pk PRIMARY KEY (id);


--
-- Name: mdl_regihubs_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_registration_hubs
    ADD CONSTRAINT mdl_regihubs_id_pk PRIMARY KEY (id);


--
-- Name: mdl_repo_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_repository
    ADD CONSTRAINT mdl_repo_id_pk PRIMARY KEY (id);


--
-- Name: mdl_repoinst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_repository_instances
    ADD CONSTRAINT mdl_repoinst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_repoinstconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_repository_instance_config
    ADD CONSTRAINT mdl_repoinstconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_reportinventario_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_reportinventario
    ADD CONSTRAINT mdl_reportinventario_pkey PRIMARY KEY (id);


--
-- Name: mdl_reso_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_resource
    ADD CONSTRAINT mdl_reso_id_pk PRIMARY KEY (id);


--
-- Name: mdl_resoold_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_resource_old
    ADD CONSTRAINT mdl_resoold_id_pk PRIMARY KEY (id);


--
-- Name: mdl_role_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role
    ADD CONSTRAINT mdl_role_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolealloassi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_allow_assign
    ADD CONSTRAINT mdl_rolealloassi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolealloover_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_allow_override
    ADD CONSTRAINT mdl_rolealloover_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolealloswit_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_allow_switch
    ADD CONSTRAINT mdl_rolealloswit_id_pk PRIMARY KEY (id);


--
-- Name: mdl_roleassi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_assignments
    ADD CONSTRAINT mdl_roleassi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolecapa_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_capabilities
    ADD CONSTRAINT mdl_rolecapa_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolecontleve_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_context_levels
    ADD CONSTRAINT mdl_rolecontleve_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolename_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_names
    ADD CONSTRAINT mdl_rolename_id_pk PRIMARY KEY (id);


--
-- Name: mdl_rolesort_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_role_sortorder
    ADD CONSTRAINT mdl_rolesort_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scal_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scale
    ADD CONSTRAINT mdl_scal_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scalhist_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scale_history
    ADD CONSTRAINT mdl_scalhist_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scor_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm
    ADD CONSTRAINT mdl_scor_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scoraiccsess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_aicc_session
    ADD CONSTRAINT mdl_scoraiccsess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorscoe_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_scoes
    ADD CONSTRAINT mdl_scorscoe_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorscoedata_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_scoes_data
    ADD CONSTRAINT mdl_scorscoedata_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorscoetrac_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_scoes_track
    ADD CONSTRAINT mdl_scorscoetrac_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqmapi_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_mapinfo
    ADD CONSTRAINT mdl_scorseqmapi_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqobje_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_objective
    ADD CONSTRAINT mdl_scorseqobje_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqroll_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_rolluprulecond
    ADD CONSTRAINT mdl_scorseqroll_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqroll_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_rolluprule
    ADD CONSTRAINT mdl_scorseqroll_id_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqrule_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_rulecond
    ADD CONSTRAINT mdl_scorseqrule_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_scorseqrule_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_scorm_seq_ruleconds
    ADD CONSTRAINT mdl_scorseqrule_id_pk PRIMARY KEY (id);


--
-- Name: mdl_sess_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_sessions
    ADD CONSTRAINT mdl_sess_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statdail_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_daily
    ADD CONSTRAINT mdl_statdail_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statmont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_monthly
    ADD CONSTRAINT mdl_statmont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statuserdail_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_user_daily
    ADD CONSTRAINT mdl_statuserdail_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statusermont_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_user_monthly
    ADD CONSTRAINT mdl_statusermont_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statuserweek_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_user_weekly
    ADD CONSTRAINT mdl_statuserweek_id_pk PRIMARY KEY (id);


--
-- Name: mdl_statweek_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_stats_weekly
    ADD CONSTRAINT mdl_statweek_id_pk PRIMARY KEY (id);


--
-- Name: mdl_surv_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_survey
    ADD CONSTRAINT mdl_surv_id_pk PRIMARY KEY (id);


--
-- Name: mdl_survanal_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_survey_analysis
    ADD CONSTRAINT mdl_survanal_id_pk PRIMARY KEY (id);


--
-- Name: mdl_survansw_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_survey_answers
    ADD CONSTRAINT mdl_survansw_id_pk PRIMARY KEY (id);


--
-- Name: mdl_survques_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_survey_questions
    ADD CONSTRAINT mdl_survques_id_pk PRIMARY KEY (id);


--
-- Name: mdl_tag_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tag
    ADD CONSTRAINT mdl_tag_id_pk PRIMARY KEY (id);


--
-- Name: mdl_tagcorr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tag_correlation
    ADD CONSTRAINT mdl_tagcorr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_taginst_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tag_instance
    ADD CONSTRAINT mdl_taginst_id_pk PRIMARY KEY (id);


--
-- Name: mdl_tempenrotemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_temp_enroled_template
    ADD CONSTRAINT mdl_tempenrotemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_templogtemp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_temp_log_template
    ADD CONSTRAINT mdl_templogtemp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_time_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_timezone
    ADD CONSTRAINT mdl_time_id_pk PRIMARY KEY (id);


--
-- Name: mdl_tmpaero_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tmpaero
    ADD CONSTRAINT mdl_tmpaero_pkey PRIMARY KEY (id);


--
-- Name: mdl_toolcust_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tool_customlang
    ADD CONSTRAINT mdl_toolcust_id_pk PRIMARY KEY (id);


--
-- Name: mdl_toolcustcomp_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tool_customlang_components
    ADD CONSTRAINT mdl_toolcustcomp_id_pk PRIMARY KEY (id);


--
-- Name: mdl_upgrlog_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_upgrade_log
    ADD CONSTRAINT mdl_upgrlog_id_pk PRIMARY KEY (id);


--
-- Name: mdl_url_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_url
    ADD CONSTRAINT mdl_url_id_pk PRIMARY KEY (id);


--
-- Name: mdl_user_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user
    ADD CONSTRAINT mdl_user_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userenro_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_enrolments
    ADD CONSTRAINT mdl_userenro_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userinfocate_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_info_category
    ADD CONSTRAINT mdl_userinfocate_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userinfodata_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_info_data
    ADD CONSTRAINT mdl_userinfodata_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userinfofiel_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_info_field
    ADD CONSTRAINT mdl_userinfofiel_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userlast_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_lastaccess
    ADD CONSTRAINT mdl_userlast_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userpref_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_preferences
    ADD CONSTRAINT mdl_userpref_id_pk PRIMARY KEY (id);


--
-- Name: mdl_userprivkey_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_user_private_key
    ADD CONSTRAINT mdl_userprivkey_id_pk PRIMARY KEY (id);


--
-- Name: mdl_webdlock_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_webdav_locks
    ADD CONSTRAINT mdl_webdlock_id_pk PRIMARY KEY (id);


--
-- Name: mdl_wiki_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki
    ADD CONSTRAINT mdl_wiki_id_pk PRIMARY KEY (id);


--
-- Name: mdl_wikilink_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_links
    ADD CONSTRAINT mdl_wikilink_id_pk PRIMARY KEY (id);


--
-- Name: mdl_wikilock_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_locks
    ADD CONSTRAINT mdl_wikilock_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_wikipage_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_pages
    ADD CONSTRAINT mdl_wikipage_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_wikisubw_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_subwikis
    ADD CONSTRAINT mdl_wikisubw_id_pk PRIMARY KEY (id);


--
-- Name: mdl_wikisyno_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_synonyms
    ADD CONSTRAINT mdl_wikisyno_id_pk PRIMARY KEY (id);


--
-- Name: mdl_wikivers_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_wiki_versions
    ADD CONSTRAINT mdl_wikivers_id_pk PRIMARY KEY (id);


--
-- Name: mdl_work_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop
    ADD CONSTRAINT mdl_work_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_work_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_old
    ADD CONSTRAINT mdl_work_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workaccu_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_accumulative
    ADD CONSTRAINT mdl_workaccu_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workaggr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_aggregations
    ADD CONSTRAINT mdl_workaggr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workasse_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_assessments
    ADD CONSTRAINT mdl_workasse_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_workasse_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_assessments_old
    ADD CONSTRAINT mdl_workasse_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workbestsett_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopeval_best_settings
    ADD CONSTRAINT mdl_workbestsett_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workcomm_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_comments
    ADD CONSTRAINT mdl_workcomm_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_workcomm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_comments_old
    ADD CONSTRAINT mdl_workcomm_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workelem_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_elements_old
    ADD CONSTRAINT mdl_workelem_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workgrad_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_grades
    ADD CONSTRAINT mdl_workgrad_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_workgrad_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_grades_old
    ADD CONSTRAINT mdl_workgrad_id_pk PRIMARY KEY (id);


--
-- Name: mdl_worknume_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_numerrors
    ADD CONSTRAINT mdl_worknume_id_pk PRIMARY KEY (id);


--
-- Name: mdl_worknumemap_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_numerrors_map
    ADD CONSTRAINT mdl_worknumemap_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workrubr_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_rubric
    ADD CONSTRAINT mdl_workrubr_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_workrubr_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_rubrics_old
    ADD CONSTRAINT mdl_workrubr_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workrubrconf_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_rubric_config
    ADD CONSTRAINT mdl_workrubrconf_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workrubrleve_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopform_rubric_levels
    ADD CONSTRAINT mdl_workrubrleve_id_pk PRIMARY KEY (id);


--
-- Name: mdl_worksche_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshopallocation_scheduled
    ADD CONSTRAINT mdl_worksche_id_pk PRIMARY KEY (id);


--
-- Name: mdl_workstoc_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_stockcomments_old
    ADD CONSTRAINT mdl_workstoc_id_pk PRIMARY KEY (id);


--
-- Name: mdl_worksubm_id2_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_submissions
    ADD CONSTRAINT mdl_worksubm_id2_pk PRIMARY KEY (id);


--
-- Name: mdl_worksubm_id_pk; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_workshop_submissions_old
    ADD CONSTRAINT mdl_worksubm_id_pk PRIMARY KEY (id);


--
-- Name: nom_catdeptodel_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY nom_catdeptodel
    ADD CONSTRAINT nom_catdeptodel_pkey PRIMARY KEY (id);


--
-- Name: nom_clvdepartemento2_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY nom_clvdepartemento2
    ADD CONSTRAINT nom_clvdepartemento2_pkey PRIMARY KEY (id);


--
-- Name: nom_clvdepartementoplus_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY nom_clvdepartementoplus
    ADD CONSTRAINT nom_clvdepartementoplus_pkey PRIMARY KEY (id);


--
-- Name: nom_delncat_pkey; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY nom_delncat
    ADD CONSTRAINT nom_delncat_pkey PRIMARY KEY (id);


--
-- Name: sdcns_pk_acci_id; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_accion
    ADD CONSTRAINT sdcns_pk_acci_id PRIMARY KEY (id);


--
-- Name: sdcns_pk_couracces_course; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_acces_close
    ADD CONSTRAINT sdcns_pk_couracces_course PRIMARY KEY (course, rol);


--
-- Name: sdcns_pk_courconf_course; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_course_config
    ADD CONSTRAINT sdcns_pk_courconf_course PRIMARY KEY (course);


--
-- Name: sdcns_pk_losi_id; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_log_sied
    ADD CONSTRAINT sdcns_pk_losi_id PRIMARY KEY (id);


--
-- Name: sdcns_pk_mod_id; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_modalidad
    ADD CONSTRAINT sdcns_pk_mod_id PRIMARY KEY (id);


--
-- Name: uk_cert; Type: CONSTRAINT; Schema: public; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_certificate_conf
    ADD CONSTRAINT uk_cert UNIQUE (userid, roleid, certificateid);


SET search_path = tutorias, pg_catalog;

--
-- Name: id_pk; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_evaluar
    ADD CONSTRAINT id_pk PRIMARY KEY (id);


--
-- Name: mdl_cargo_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cargo
    ADD CONSTRAINT mdl_cargo_pkey PRIMARY KEY (id);


--
-- Name: mdl_carreras_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_carreras
    ADD CONSTRAINT mdl_carreras_pkey PRIMARY KEY (id);


--
-- Name: mdl_cateva_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_cateva
    ADD CONSTRAINT mdl_cateva_pkey PRIMARY KEY (id);


--
-- Name: mdl_detusertutor_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_detusertutor
    ADD CONSTRAINT mdl_detusertutor_pkey PRIMARY KEY (id);


--
-- Name: mdl_especialidades_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_especialidades
    ADD CONSTRAINT mdl_especialidades_pkey PRIMARY KEY (id);


--
-- Name: mdl_estudios_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_estudios
    ADD CONSTRAINT mdl_estudios_pkey PRIMARY KEY (id);


--
-- Name: mdl_evatutor_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_evatutor
    ADD CONSTRAINT mdl_evatutor_pkey PRIMARY KEY (id);


--
-- Name: mdl_formacion_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_formacion
    ADD CONSTRAINT mdl_formacion_pkey PRIMARY KEY (id);


--
-- Name: mdl_instrumento_habilidad_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_instrumento_habilidad
    ADD CONSTRAINT mdl_instrumento_habilidad_pkey PRIMARY KEY (inst_id, tipe_id);


--
-- Name: mdl_profesion_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_profesion
    ADD CONSTRAINT mdl_profesion_pkey PRIMARY KEY (id);


--
-- Name: mdl_propuesta_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_propuesta
    ADD CONSTRAINT mdl_propuesta_pkey PRIMARY KEY (id);


--
-- Name: mdl_residentes_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_residentes
    ADD CONSTRAINT mdl_residentes_pkey PRIMARY KEY (curp);


--
-- Name: mdl_tipoeva_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_tipoeva
    ADD CONSTRAINT mdl_tipoeva_pkey PRIMARY KEY (id);


--
-- Name: mdl_userexp_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_userexp
    ADD CONSTRAINT mdl_userexp_pkey PRIMARY KEY (id);


--
-- Name: mdl_usertutor_pkey; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_usertutor
    ADD CONSTRAINT mdl_usertutor_pkey PRIMARY KEY (id);


--
-- Name: pk_instrumento; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_instrumento
    ADD CONSTRAINT pk_instrumento PRIMARY KEY (id);


--
-- Name: pk_preguntas; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_preguntas
    ADD CONSTRAINT pk_preguntas PRIMARY KEY (cve_instrumento, id);


--
-- Name: pk_respuestas; Type: CONSTRAINT; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

ALTER TABLE ONLY mdl_respuestas
    ADD CONSTRAINT pk_respuestas PRIMARY KEY (id);


SET search_path = calificaciones, pg_catalog;

--
-- Name: mdl_caltotalgral_ix; Type: INDEX; Schema: calificaciones; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_caltotalgral_ix ON mdl_caltotalgral USING btree (userid, idcurso);


SET search_path = encuestas, pg_catalog;

--
-- Name: xif1sse_preguntas; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif1sse_preguntas ON sse_preguntas USING btree (tipo_pregunta_cve);


--
-- Name: xif1sse_reglas_evaluacion; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif1sse_reglas_evaluacion ON sse_reglas_evaluacion USING btree (rol_evaluador_cve);


--
-- Name: xif2sse_encuesta_curso; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif2sse_encuesta_curso ON sse_encuesta_curso USING btree (alcance_curso_cve);


--
-- Name: xif2sse_encuesta_reglas_evaluacion; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif2sse_encuesta_reglas_evaluacion ON sse_encuestas USING btree (reglas_evaluacion_cve);


--
-- Name: xif2sse_preguntas; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif2sse_preguntas ON sse_preguntas USING btree (encuesta_cve);


--
-- Name: xif2sse_reglas_evaluacion; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif2sse_reglas_evaluacion ON sse_reglas_evaluacion USING btree (rol_evaluado_cve);


--
-- Name: xif2sse_respuestas; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif2sse_respuestas ON sse_respuestas USING btree (preguntas_cve);


--
-- Name: xif3sse_encuesta_curso; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif3sse_encuesta_curso ON sse_encuesta_curso USING btree (encuesta_cve);


--
-- Name: xif3sse_preguntas; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif3sse_preguntas ON sse_preguntas USING btree (seccion_cve);


--
-- Name: xif4sse_encuesta_curso; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif4sse_encuesta_curso ON sse_encuesta_curso USING btree (course_cve);


--
-- Name: xif6sse_encuesta_curso; Type: INDEX; Schema: encuestas; Owner: innovaedu; Tablespace: 
--

CREATE INDEX xif6sse_encuesta_curso ON sse_encuesta_curso USING btree (mdl_groups_cve);


SET search_path = gestion, pg_catalog;

--
-- Name: indx_sgp_tab_usuario_nom_uusuario; Type: INDEX; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE INDEX indx_sgp_tab_usuario_nom_uusuario ON sgp_tab_usuario USING btree (nom_usuario);


--
-- Name: sgp_pre_ads_indesx; Type: INDEX; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE INDEX sgp_pre_ads_indesx ON sgp_tab_preregistro_al USING btree (cve_departamental);


--
-- Name: sgp_pre_index; Type: INDEX; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE INDEX sgp_pre_index ON sgp_tab_preregistro_al USING btree (cve_cat);


--
-- Name: sgp_tab_usuario_inx; Type: INDEX; Schema: gestion; Owner: innovaedu; Tablespace: 
--

CREATE INDEX sgp_tab_usuario_inx ON sgp_tab_usuario USING btree (desc_sexo);


SET search_path = mesa_ayuda, pg_catalog;

--
-- Name: id; Type: INDEX; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX id ON cat_medio USING btree (id);


--
-- Name: id_pkey; Type: INDEX; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX id_pkey ON tipo_resp USING btree (id);


--
-- Name: incidencias_pkey; Type: INDEX; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX incidencias_pkey ON incidencias USING btree (id);


--
-- Name: ind; Type: INDEX; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX ind ON usuarios_esp USING btree (id);


--
-- Name: index; Type: INDEX; Schema: mesa_ayuda; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX index ON cat_tipoincidencia_esp USING btree (id);


SET search_path = public, pg_catalog;

--
-- Name: ind_mdl_tmp_user; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX ind_mdl_tmp_user ON mdl_tmp_user USING btree (usuario);


--
-- Name: ind_tm_user; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX ind_tm_user ON mdl_tmp_user USING btree (usuario);


--
-- Name: mdl_assi_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assi_cou2_ix ON mdl_assign USING btree (course);


--
-- Name: mdl_assi_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assi_cou_ix ON mdl_assignment USING btree (course);


--
-- Name: mdl_assi_tea_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assi_tea_ix ON mdl_assign USING btree (teamsubmissiongroupingid);


--
-- Name: mdl_assicomm_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assicomm_ass_ix ON mdl_assignfeedback_comments USING btree (assignment);


--
-- Name: mdl_assicomm_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assicomm_gra_ix ON mdl_assignfeedback_comments USING btree (grade);


--
-- Name: mdl_assifile_ass2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assifile_ass2_ix ON mdl_assignfeedback_file USING btree (assignment);


--
-- Name: mdl_assifile_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assifile_ass_ix ON mdl_assignsubmission_file USING btree (assignment);


--
-- Name: mdl_assifile_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assifile_gra_ix ON mdl_assignfeedback_file USING btree (grade);


--
-- Name: mdl_assifile_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assifile_sub_ix ON mdl_assignsubmission_file USING btree (submission);


--
-- Name: mdl_assigrad_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assigrad_ass_ix ON mdl_assign_grades USING btree (assignment);


--
-- Name: mdl_assigrad_assuseatt_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_assigrad_assuseatt_uix ON mdl_assign_grades USING btree (assignment, userid, attemptnumber);


--
-- Name: mdl_assigrad_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assigrad_att_ix ON mdl_assign_grades USING btree (attemptnumber);


--
-- Name: mdl_assigrad_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assigrad_use_ix ON mdl_assign_grades USING btree (userid);


--
-- Name: mdl_assionli_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assionli_ass_ix ON mdl_assignsubmission_onlinetext USING btree (assignment);


--
-- Name: mdl_assionli_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assionli_sub_ix ON mdl_assignsubmission_onlinetext USING btree (submission);


--
-- Name: mdl_assiplugconf_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiplugconf_ass_ix ON mdl_assign_plugin_config USING btree (assignment);


--
-- Name: mdl_assiplugconf_nam_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiplugconf_nam_ix ON mdl_assign_plugin_config USING btree (name);


--
-- Name: mdl_assiplugconf_plu_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiplugconf_plu_ix ON mdl_assign_plugin_config USING btree (plugin);


--
-- Name: mdl_assiplugconf_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiplugconf_sub_ix ON mdl_assign_plugin_config USING btree (subtype);


--
-- Name: mdl_assisubm_ass2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_ass2_ix ON mdl_assign_submission USING btree (assignment);


--
-- Name: mdl_assisubm_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_ass_ix ON mdl_assignment_submissions USING btree (assignment);


--
-- Name: mdl_assisubm_assusegroatt_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_assisubm_assusegroatt_uix ON mdl_assign_submission USING btree (assignment, userid, groupid, attemptnumber);


--
-- Name: mdl_assisubm_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_att_ix ON mdl_assign_submission USING btree (attemptnumber);


--
-- Name: mdl_assisubm_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_mai_ix ON mdl_assignment_submissions USING btree (mailed);


--
-- Name: mdl_assisubm_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_tim_ix ON mdl_assignment_submissions USING btree (timemarked);


--
-- Name: mdl_assisubm_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_use2_ix ON mdl_assign_submission USING btree (userid);


--
-- Name: mdl_assisubm_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assisubm_use_ix ON mdl_assignment_submissions USING btree (userid);


--
-- Name: mdl_assiuserflag_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiuserflag_ass_ix ON mdl_assign_user_flags USING btree (assignment);


--
-- Name: mdl_assiuserflag_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiuserflag_mai_ix ON mdl_assign_user_flags USING btree (mailed);


--
-- Name: mdl_assiuserflag_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiuserflag_use_ix ON mdl_assign_user_flags USING btree (userid);


--
-- Name: mdl_assiusermapp_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiusermapp_ass_ix ON mdl_assign_user_mapping USING btree (assignment);


--
-- Name: mdl_assiusermapp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_assiusermapp_use_ix ON mdl_assign_user_mapping USING btree (userid);


--
-- Name: mdl_backcont_bac_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_backcont_bac_uix ON mdl_backup_controllers USING btree (backupid);


--
-- Name: mdl_backcont_typite2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backcont_typite2_ix ON mdl_backup_controllers USING btree (type, itemid);


--
-- Name: mdl_backcont_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backcont_use_ix ON mdl_backup_controllers USING btree (userid);


--
-- Name: mdl_backcour_cou_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_backcour_cou_uix ON mdl_backup_courses USING btree (courseid);


--
-- Name: mdl_backfiletemp_bacconcomf_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backfiletemp_bacconcomf_ix ON mdl_backup_files_template USING btree (backupid, contextid, component, filearea, itemid);


--
-- Name: mdl_backidstemp_baciteite2_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_backidstemp_baciteite2_uix ON mdl_backup_ids_template USING btree (backupid, itemname, itemid);


--
-- Name: mdl_backidstemp_bacitenew_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backidstemp_bacitenew_ix ON mdl_backup_ids_template USING btree (backupid, itemname, newitemid);


--
-- Name: mdl_backidstemp_bacitepar2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backidstemp_bacitepar2_ix ON mdl_backup_ids_template USING btree (backupid, itemname, parentitemid);


--
-- Name: mdl_backlogs_bac_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_backlogs_bac_ix ON mdl_backup_logs USING btree (backupid);


--
-- Name: mdl_backlogs_bacid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_backlogs_bacid_uix ON mdl_backup_logs USING btree (backupid, id);


--
-- Name: mdl_badg_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badg_cou_ix ON mdl_badge USING btree (courseid);


--
-- Name: mdl_badg_typ_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badg_typ_ix ON mdl_badge USING btree (type);


--
-- Name: mdl_badg_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badg_use2_ix ON mdl_badge USING btree (usercreated);


--
-- Name: mdl_badg_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badg_use_ix ON mdl_badge USING btree (usermodified);


--
-- Name: mdl_badgback_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgback_use_ix ON mdl_badge_backpack USING btree (userid);


--
-- Name: mdl_badgcrit_bad_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcrit_bad_ix ON mdl_badge_criteria USING btree (badgeid);


--
-- Name: mdl_badgcrit_badcri_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_badgcrit_badcri_uix ON mdl_badge_criteria USING btree (badgeid, criteriatype);


--
-- Name: mdl_badgcrit_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcrit_cri_ix ON mdl_badge_criteria USING btree (criteriatype);


--
-- Name: mdl_badgcritmet_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcritmet_cri_ix ON mdl_badge_criteria_met USING btree (critid);


--
-- Name: mdl_badgcritmet_iss_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcritmet_iss_ix ON mdl_badge_criteria_met USING btree (issuedid);


--
-- Name: mdl_badgcritmet_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcritmet_use_ix ON mdl_badge_criteria_met USING btree (userid);


--
-- Name: mdl_badgcritpara_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgcritpara_cri_ix ON mdl_badge_criteria_param USING btree (critid);


--
-- Name: mdl_badgexte_bac_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgexte_bac_ix ON mdl_badge_external USING btree (backpackid);


--
-- Name: mdl_badgissu_bad_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgissu_bad_ix ON mdl_badge_issued USING btree (badgeid);


--
-- Name: mdl_badgissu_baduse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_badgissu_baduse_uix ON mdl_badge_issued USING btree (badgeid, userid);


--
-- Name: mdl_badgissu_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgissu_use_ix ON mdl_badge_issued USING btree (userid);


--
-- Name: mdl_badgmanuawar_bad_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgmanuawar_bad_ix ON mdl_badge_manual_award USING btree (badgeid);


--
-- Name: mdl_badgmanuawar_iss2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgmanuawar_iss2_ix ON mdl_badge_manual_award USING btree (issuerrole);


--
-- Name: mdl_badgmanuawar_iss_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgmanuawar_iss_ix ON mdl_badge_manual_award USING btree (issuerid);


--
-- Name: mdl_badgmanuawar_rec_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_badgmanuawar_rec_ix ON mdl_badge_manual_award USING btree (recipientid);


--
-- Name: mdl_bloc_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_bloc_nam_uix ON mdl_block USING btree (name);


--
-- Name: mdl_blocinst_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blocinst_par_ix ON mdl_block_instances USING btree (parentcontextid);


--
-- Name: mdl_blocinst_parshopagsub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blocinst_parshopagsub_ix ON mdl_block_instances USING btree (parentcontextid, showinsubcontexts, pagetypepattern, subpagepattern);


--
-- Name: mdl_blocposi_blo_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blocposi_blo_ix ON mdl_block_positions USING btree (blockinstanceid);


--
-- Name: mdl_blocposi_bloconpagsub_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_blocposi_bloconpagsub_uix ON mdl_block_positions USING btree (blockinstanceid, contextid, pagetype, subpage);


--
-- Name: mdl_blocposi_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blocposi_con_ix ON mdl_block_positions USING btree (contextid);


--
-- Name: mdl_blogasso_blo_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blogasso_blo_ix ON mdl_blog_association USING btree (blogid);


--
-- Name: mdl_blogasso_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blogasso_con_ix ON mdl_blog_association USING btree (contextid);


--
-- Name: mdl_blogexte_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_blogexte_use_ix ON mdl_blog_external USING btree (userid);


--
-- Name: mdl_cachfilt_filmd5_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cachfilt_filmd5_ix ON mdl_cache_filters USING btree (filter, md5key);


--
-- Name: mdl_cachflag_fla_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cachflag_fla_ix ON mdl_cache_flags USING btree (flagtype);


--
-- Name: mdl_cachflag_nam_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cachflag_nam_ix ON mdl_cache_flags USING btree (name);


--
-- Name: mdl_cachtext_md5_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cachtext_md5_ix ON mdl_cache_text USING btree (md5key);


--
-- Name: mdl_cachtext_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cachtext_tim_ix ON mdl_cache_text USING btree (timemodified);


--
-- Name: mdl_capa_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_capa_nam_uix ON mdl_capabilities USING btree (name);


--
-- Name: mdl_chat_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chat_cou_ix ON mdl_chat USING btree (course);


--
-- Name: mdl_chatmess_cha_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmess_cha_ix ON mdl_chat_messages USING btree (chatid);


--
-- Name: mdl_chatmess_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmess_gro_ix ON mdl_chat_messages USING btree (groupid);


--
-- Name: mdl_chatmess_timcha_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmess_timcha_ix ON mdl_chat_messages USING btree ("timestamp", chatid);


--
-- Name: mdl_chatmess_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmess_use_ix ON mdl_chat_messages USING btree (userid);


--
-- Name: mdl_chatmesscurr_cha_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmesscurr_cha_ix ON mdl_chat_messages_current USING btree (chatid);


--
-- Name: mdl_chatmesscurr_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmesscurr_gro_ix ON mdl_chat_messages_current USING btree (groupid);


--
-- Name: mdl_chatmesscurr_timcha_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmesscurr_timcha_ix ON mdl_chat_messages_current USING btree ("timestamp", chatid);


--
-- Name: mdl_chatmesscurr_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatmesscurr_use_ix ON mdl_chat_messages_current USING btree (userid);


--
-- Name: mdl_chatuser_cha_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatuser_cha_ix ON mdl_chat_users USING btree (chatid);


--
-- Name: mdl_chatuser_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatuser_gro_ix ON mdl_chat_users USING btree (groupid);


--
-- Name: mdl_chatuser_las_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatuser_las_ix ON mdl_chat_users USING btree (lastping);


--
-- Name: mdl_chatuser_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_chatuser_use_ix ON mdl_chat_users USING btree (userid);


--
-- Name: mdl_choi_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_choi_cou_ix ON mdl_choice USING btree (course);


--
-- Name: mdl_choiansw_cho_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_choiansw_cho_ix ON mdl_choice_answers USING btree (choiceid);


--
-- Name: mdl_choiansw_opt_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_choiansw_opt_ix ON mdl_choice_answers USING btree (optionid);


--
-- Name: mdl_choiansw_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_choiansw_use_ix ON mdl_choice_answers USING btree (userid);


--
-- Name: mdl_choiopti_cho_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_choiopti_cho_ix ON mdl_choice_options USING btree (choiceid);


--
-- Name: mdl_coho_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_coho_con_ix ON mdl_cohort USING btree (contextid);


--
-- Name: mdl_cohomemb_coh_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cohomemb_coh_ix ON mdl_cohort_members USING btree (cohortid);


--
-- Name: mdl_cohomemb_cohuse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_cohomemb_cohuse_uix ON mdl_cohort_members USING btree (cohortid, userid);


--
-- Name: mdl_cohomemb_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cohomemb_use_ix ON mdl_cohort_members USING btree (userid);


--
-- Name: mdl_conf_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_conf_nam_uix ON mdl_config USING btree (name);


--
-- Name: mdl_conflog_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_conflog_tim_ix ON mdl_config_log USING btree (timemodified);


--
-- Name: mdl_conflog_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_conflog_use_ix ON mdl_config_log USING btree (userid);


--
-- Name: mdl_confplug_plunam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_confplug_plunam_uix ON mdl_config_plugins USING btree (plugin, name);


--
-- Name: mdl_cont_conins_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_cont_conins_uix ON mdl_context USING btree (contextlevel, instanceid);


--
-- Name: mdl_cont_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cont_ins_ix ON mdl_context USING btree (instanceid);


--
-- Name: mdl_cont_pat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cont_pat_ix ON mdl_context USING btree (path);


--
-- Name: mdl_cont_pat_ix_pattern; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cont_pat_ix_pattern ON mdl_context USING btree (path varchar_pattern_ops);


--
-- Name: mdl_cour_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cour_cat_ix ON mdl_course USING btree (category);


--
-- Name: mdl_cour_idn_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cour_idn_ix ON mdl_course USING btree (idnumber);


--
-- Name: mdl_cour_sho_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cour_sho_ix ON mdl_course USING btree (shortname);


--
-- Name: mdl_cour_sor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_cour_sor_ix ON mdl_course USING btree (sortorder);


--
-- Name: mdl_courcate_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcate_par_ix ON mdl_course_categories USING btree (parent);


--
-- Name: mdl_courcomp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcomp_cou_ix ON mdl_course_completions USING btree (course);


--
-- Name: mdl_courcomp_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcomp_tim_ix ON mdl_course_completions USING btree (timecompleted);


--
-- Name: mdl_courcomp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcomp_use_ix ON mdl_course_completions USING btree (userid);


--
-- Name: mdl_courcomp_usecou_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_courcomp_usecou_uix ON mdl_course_completions USING btree (userid, course);


--
-- Name: mdl_courcompaggrmeth_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompaggrmeth_cou_ix ON mdl_course_completion_aggr_methd USING btree (course);


--
-- Name: mdl_courcompaggrmeth_coucr_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_courcompaggrmeth_coucr_uix ON mdl_course_completion_aggr_methd USING btree (course, criteriatype);


--
-- Name: mdl_courcompaggrmeth_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompaggrmeth_cri_ix ON mdl_course_completion_aggr_methd USING btree (criteriatype);


--
-- Name: mdl_courcompcrit_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompcrit_cou_ix ON mdl_course_completion_criteria USING btree (course);


--
-- Name: mdl_courcompcritcomp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompcritcomp_cou_ix ON mdl_course_completion_crit_compl USING btree (course);


--
-- Name: mdl_courcompcritcomp_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompcritcomp_cri_ix ON mdl_course_completion_crit_compl USING btree (criteriaid);


--
-- Name: mdl_courcompcritcomp_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompcritcomp_tim_ix ON mdl_course_completion_crit_compl USING btree (timecompleted);


--
-- Name: mdl_courcompcritcomp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courcompcritcomp_use_ix ON mdl_course_completion_crit_compl USING btree (userid);


--
-- Name: mdl_courcompcritcomp_useco_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_courcompcritcomp_useco_uix ON mdl_course_completion_crit_compl USING btree (userid, course, criteriaid);


--
-- Name: mdl_courformopti_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courformopti_cou_ix ON mdl_course_format_options USING btree (courseid);


--
-- Name: mdl_courformopti_couforsec_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_courformopti_couforsec_uix ON mdl_course_format_options USING btree (courseid, format, sectionid, name);


--
-- Name: mdl_courmodu_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_cou_ix ON mdl_course_modules USING btree (course);


--
-- Name: mdl_courmodu_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_gro_ix ON mdl_course_modules USING btree (groupingid);


--
-- Name: mdl_courmodu_idncou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_idncou_ix ON mdl_course_modules USING btree (idnumber, course);


--
-- Name: mdl_courmodu_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_ins_ix ON mdl_course_modules USING btree (instance);


--
-- Name: mdl_courmodu_mod_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_mod_ix ON mdl_course_modules USING btree (module);


--
-- Name: mdl_courmodu_vis_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmodu_vis_ix ON mdl_course_modules USING btree (visible);


--
-- Name: mdl_courmoduavai_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmoduavai_cou_ix ON mdl_course_modules_availability USING btree (coursemoduleid);


--
-- Name: mdl_courmoduavai_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmoduavai_gra_ix ON mdl_course_modules_availability USING btree (gradeitemid);


--
-- Name: mdl_courmoduavai_sou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmoduavai_sou_ix ON mdl_course_modules_availability USING btree (sourcecmid);


--
-- Name: mdl_courmoduavaifiel_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmoduavaifiel_cou_ix ON mdl_course_modules_avail_fields USING btree (coursemoduleid);


--
-- Name: mdl_courmoducomp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courmoducomp_cou_ix ON mdl_course_modules_completion USING btree (coursemoduleid);


--
-- Name: mdl_courmoducomp_usecou_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_courmoducomp_usecou_uix ON mdl_course_modules_completion USING btree (userid, coursemoduleid);


--
-- Name: mdl_courrequ_sho_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_courrequ_sho_ix ON mdl_course_request USING btree (shortname);


--
-- Name: mdl_coursect_cousec_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_coursect_cousec_uix ON mdl_course_sections USING btree (course, section);


--
-- Name: mdl_coursectavai_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_coursectavai_cou_ix ON mdl_course_sections_availability USING btree (coursesectionid);


--
-- Name: mdl_coursectavai_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_coursectavai_gra_ix ON mdl_course_sections_availability USING btree (gradeitemid);


--
-- Name: mdl_coursectavai_sou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_coursectavai_sou_ix ON mdl_course_sections_availability USING btree (sourcecmid);


--
-- Name: mdl_coursectavaifiel_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_coursectavaifiel_cou_ix ON mdl_course_sections_avail_fields USING btree (coursesectionid);


--
-- Name: mdl_data_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_data_cou_ix ON mdl_data USING btree (course);


--
-- Name: mdl_datacont_fie_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_datacont_fie_ix ON mdl_data_content USING btree (fieldid);


--
-- Name: mdl_datacont_rec_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_datacont_rec_ix ON mdl_data_content USING btree (recordid);


--
-- Name: mdl_datafiel_dat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_datafiel_dat_ix ON mdl_data_fields USING btree (dataid);


--
-- Name: mdl_datafiel_typdat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_datafiel_typdat_ix ON mdl_data_fields USING btree (type, dataid);


--
-- Name: mdl_datareco_dat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_datareco_dat_ix ON mdl_data_records USING btree (dataid);


--
-- Name: mdl_dimd_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_dimd_cou_ix ON mdl_dimdim USING btree (course);


--
-- Name: mdl_enro_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enro_cou_ix ON mdl_enrol USING btree (courseid);


--
-- Name: mdl_enro_enr_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enro_enr_ix ON mdl_enrol USING btree (enrol);


--
-- Name: mdl_enroauth_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauth_cou_ix ON mdl_enrol_authorize USING btree (courseid);


--
-- Name: mdl_enroauth_sta_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauth_sta_ix ON mdl_enrol_authorize USING btree (status);


--
-- Name: mdl_enroauth_tra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauth_tra_ix ON mdl_enrol_authorize USING btree (transid);


--
-- Name: mdl_enroauth_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauth_use_ix ON mdl_enrol_authorize USING btree (userid);


--
-- Name: mdl_enroauthrefu_ord_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauthrefu_ord_ix ON mdl_enrol_authorize_refunds USING btree (orderid);


--
-- Name: mdl_enroauthrefu_tra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroauthrefu_tra_ix ON mdl_enrol_authorize_refunds USING btree (transid);


--
-- Name: mdl_enroflat_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroflat_cou_ix ON mdl_enrol_flatfile USING btree (courseid);


--
-- Name: mdl_enroflat_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroflat_rol_ix ON mdl_enrol_flatfile USING btree (roleid);


--
-- Name: mdl_enroflat_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_enroflat_use_ix ON mdl_enrol_flatfile USING btree (userid);


--
-- Name: mdl_even_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_even_cou_ix ON mdl_event USING btree (courseid);


--
-- Name: mdl_even_grocouvisuse_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_even_grocouvisuse_ix ON mdl_event USING btree (groupid, courseid, visible, userid);


--
-- Name: mdl_even_tim2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_even_tim2_ix ON mdl_event USING btree (timeduration);


--
-- Name: mdl_even_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_even_tim_ix ON mdl_event USING btree (timestart);


--
-- Name: mdl_even_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_even_use_ix ON mdl_event USING btree (userid);


--
-- Name: mdl_evenhand_evecom_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_evenhand_evecom_uix ON mdl_events_handlers USING btree (eventname, component);


--
-- Name: mdl_evenqueu_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_evenqueu_use_ix ON mdl_events_queue USING btree (userid);


--
-- Name: mdl_evenqueuhand_han_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_evenqueuhand_han_ix ON mdl_events_queue_handlers USING btree (handlerid);


--
-- Name: mdl_evenqueuhand_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_evenqueuhand_que_ix ON mdl_events_queue_handlers USING btree (queuedeventid);


--
-- Name: mdl_extefunc_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_extefunc_nam_uix ON mdl_external_functions USING btree (name);


--
-- Name: mdl_exteserv_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_exteserv_nam_uix ON mdl_external_services USING btree (name);


--
-- Name: mdl_exteservfunc_ext_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_exteservfunc_ext_ix ON mdl_external_services_functions USING btree (externalserviceid);


--
-- Name: mdl_exteservuser_ext_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_exteservuser_ext_ix ON mdl_external_services_users USING btree (externalserviceid);


--
-- Name: mdl_exteservuser_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_exteservuser_use_ix ON mdl_external_services_users USING btree (userid);


--
-- Name: mdl_extetoke_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_extetoke_con_ix ON mdl_external_tokens USING btree (contextid);


--
-- Name: mdl_extetoke_cre_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_extetoke_cre_ix ON mdl_external_tokens USING btree (creatorid);


--
-- Name: mdl_extetoke_ext_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_extetoke_ext_ix ON mdl_external_tokens USING btree (externalserviceid);


--
-- Name: mdl_extetoke_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_extetoke_use_ix ON mdl_external_tokens USING btree (userid);


--
-- Name: mdl_feed_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feed_cou_ix ON mdl_feedback USING btree (course);


--
-- Name: mdl_feedcomp_fee2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedcomp_fee2_ix ON mdl_feedback_completedtmp USING btree (feedback);


--
-- Name: mdl_feedcomp_fee_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedcomp_fee_ix ON mdl_feedback_completed USING btree (feedback);


--
-- Name: mdl_feedcomp_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedcomp_use2_ix ON mdl_feedback_completedtmp USING btree (userid);


--
-- Name: mdl_feedcomp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedcomp_use_ix ON mdl_feedback_completed USING btree (userid);


--
-- Name: mdl_feeditem_fee_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feeditem_fee_ix ON mdl_feedback_item USING btree (feedback);


--
-- Name: mdl_feeditem_tem_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feeditem_tem_ix ON mdl_feedback_item USING btree (template);


--
-- Name: mdl_feedsitemap_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedsitemap_cou_ix ON mdl_feedback_sitecourse_map USING btree (courseid);


--
-- Name: mdl_feedsitemap_fee_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedsitemap_fee_ix ON mdl_feedback_sitecourse_map USING btree (feedbackid);


--
-- Name: mdl_feedtemp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedtemp_cou_ix ON mdl_feedback_template USING btree (course);


--
-- Name: mdl_feedtrac_com_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedtrac_com_ix ON mdl_feedback_tracking USING btree (completed);


--
-- Name: mdl_feedtrac_fee_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedtrac_fee_ix ON mdl_feedback_tracking USING btree (feedback);


--
-- Name: mdl_feedtrac_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedtrac_use_ix ON mdl_feedback_tracking USING btree (userid);


--
-- Name: mdl_feedvalu_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedvalu_cou2_ix ON mdl_feedback_valuetmp USING btree (course_id);


--
-- Name: mdl_feedvalu_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedvalu_cou_ix ON mdl_feedback_value USING btree (course_id);


--
-- Name: mdl_feedvalu_ite2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedvalu_ite2_ix ON mdl_feedback_valuetmp USING btree (item);


--
-- Name: mdl_feedvalu_ite_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_feedvalu_ite_ix ON mdl_feedback_value USING btree (item);


--
-- Name: mdl_file_comfilconite_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_file_comfilconite_ix ON mdl_files USING btree (component, filearea, contextid, itemid);


--
-- Name: mdl_file_con2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_file_con2_ix ON mdl_files USING btree (contextid);


--
-- Name: mdl_file_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_file_con_ix ON mdl_files USING btree (contenthash);


--
-- Name: mdl_file_pat_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_file_pat_uix ON mdl_files USING btree (pathnamehash);


--
-- Name: mdl_file_ref_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_file_ref_ix ON mdl_files USING btree (referencefileid);


--
-- Name: mdl_file_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_file_use_ix ON mdl_files USING btree (userid);


--
-- Name: mdl_filerefe_rep_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_filerefe_rep_ix ON mdl_files_reference USING btree (repositoryid);


--
-- Name: mdl_filerefe_repref_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_filerefe_repref_uix ON mdl_files_reference USING btree (repositoryid, referencehash);


--
-- Name: mdl_filtacti_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_filtacti_con_ix ON mdl_filter_active USING btree (contextid);


--
-- Name: mdl_filtacti_confil_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_filtacti_confil_uix ON mdl_filter_active USING btree (contextid, filter);


--
-- Name: mdl_filtconf_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_filtconf_con_ix ON mdl_filter_config USING btree (contextid);


--
-- Name: mdl_filtconf_confilnam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_filtconf_confilnam_uix ON mdl_filter_config USING btree (contextid, filter, name);


--
-- Name: mdl_fold_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_fold_cou2_ix ON mdl_folder USING btree (course);


--
-- Name: mdl_fold_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_fold_cou_ix ON folder USING btree (course);


--
-- Name: mdl_foru_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foru_cou_ix ON mdl_forum USING btree (course);


--
-- Name: mdl_forudisc_for_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forudisc_for_ix ON mdl_forum_discussions USING btree (forum);


--
-- Name: mdl_forudisc_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forudisc_use_ix ON mdl_forum_discussions USING btree (userid);


--
-- Name: mdl_forupost_cre_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forupost_cre_ix ON mdl_forum_posts USING btree (created);


--
-- Name: mdl_forupost_dis_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forupost_dis_ix ON mdl_forum_posts USING btree (discussion);


--
-- Name: mdl_forupost_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forupost_mai_ix ON mdl_forum_posts USING btree (mailed);


--
-- Name: mdl_forupost_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forupost_par_ix ON mdl_forum_posts USING btree (parent);


--
-- Name: mdl_forupost_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forupost_use_ix ON mdl_forum_posts USING btree (userid);


--
-- Name: mdl_foruqueu_dis_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruqueu_dis_ix ON mdl_forum_queue USING btree (discussionid);


--
-- Name: mdl_foruqueu_pos_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruqueu_pos_ix ON mdl_forum_queue USING btree (postid);


--
-- Name: mdl_foruqueu_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruqueu_use_ix ON mdl_forum_queue USING btree (userid);


--
-- Name: mdl_foruread_usedis_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruread_usedis_ix ON mdl_forum_read USING btree (userid, discussionid);


--
-- Name: mdl_foruread_usefor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruread_usefor_ix ON mdl_forum_read USING btree (userid, forumid);


--
-- Name: mdl_foruread_usepos_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_foruread_usepos_ix ON mdl_forum_read USING btree (userid, postid);


--
-- Name: mdl_forusubs_for_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forusubs_for_ix ON mdl_forum_subscriptions USING btree (forum);


--
-- Name: mdl_forusubs_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forusubs_use_ix ON mdl_forum_subscriptions USING btree (userid);


--
-- Name: mdl_forutracpref_usefor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_forutracpref_usefor_ix ON mdl_forum_track_prefs USING btree (userid, forumid);


--
-- Name: mdl_glos_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glos_cou_ix ON mdl_glossary USING btree (course);


--
-- Name: mdl_glosalia_ent_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosalia_ent_ix ON mdl_glossary_alias USING btree (entryid);


--
-- Name: mdl_gloscate_glo_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gloscate_glo_ix ON mdl_glossary_categories USING btree (glossaryid);


--
-- Name: mdl_glosentr_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosentr_con_ix ON mdl_glossary_entries USING btree (concept);


--
-- Name: mdl_glosentr_glo_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosentr_glo_ix ON mdl_glossary_entries USING btree (glossaryid);


--
-- Name: mdl_glosentr_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosentr_use_ix ON mdl_glossary_entries USING btree (userid);


--
-- Name: mdl_glosentrcate_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosentrcate_cat_ix ON mdl_glossary_entries_categories USING btree (categoryid);


--
-- Name: mdl_glosentrcate_ent_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_glosentrcate_ent_ix ON mdl_glossary_entries_categories USING btree (entryid);


--
-- Name: mdl_gradarea_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradarea_con_ix ON mdl_grading_areas USING btree (contextid);


--
-- Name: mdl_gradarea_concomare_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradarea_concomare_uix ON mdl_grading_areas USING btree (contextid, component, areaname);


--
-- Name: mdl_gradcate_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcate_cou2_ix ON mdl_grade_categories USING btree (courseid);


--
-- Name: mdl_gradcate_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcate_par_ix ON mdl_grade_categories USING btree (parent);


--
-- Name: mdl_gradcatehist_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcatehist_act_ix ON mdl_grade_categories_history USING btree (action);


--
-- Name: mdl_gradcatehist_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcatehist_cou_ix ON mdl_grade_categories_history USING btree (courseid);


--
-- Name: mdl_gradcatehist_log_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcatehist_log_ix ON mdl_grade_categories_history USING btree (loggeduser);


--
-- Name: mdl_gradcatehist_old_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcatehist_old_ix ON mdl_grade_categories_history USING btree (oldid);


--
-- Name: mdl_gradcatehist_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradcatehist_par_ix ON mdl_grade_categories_history USING btree (parent);


--
-- Name: mdl_graddefi_are_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graddefi_are_ix ON mdl_grading_definitions USING btree (areaid);


--
-- Name: mdl_graddefi_aremet_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_graddefi_aremet_uix ON mdl_grading_definitions USING btree (areaid, method);


--
-- Name: mdl_graddefi_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graddefi_use2_ix ON mdl_grading_definitions USING btree (usercreated);


--
-- Name: mdl_graddefi_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graddefi_use_ix ON mdl_grading_definitions USING btree (usermodified);


--
-- Name: mdl_gradgrad_ite_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgrad_ite_ix ON mdl_grade_grades USING btree (itemid);


--
-- Name: mdl_gradgrad_locloc_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgrad_locloc_ix ON mdl_grade_grades USING btree (locked, locktime);


--
-- Name: mdl_gradgrad_raw_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgrad_raw_ix ON mdl_grade_grades USING btree (rawscaleid);


--
-- Name: mdl_gradgrad_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgrad_use2_ix ON mdl_grade_grades USING btree (usermodified);


--
-- Name: mdl_gradgrad_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgrad_use_ix ON mdl_grade_grades USING btree (userid);


--
-- Name: mdl_gradgrad_useite_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradgrad_useite_uix ON mdl_grade_grades USING btree (userid, itemid);


--
-- Name: mdl_gradgradhist_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_act_ix ON mdl_grade_grades_history USING btree (action);


--
-- Name: mdl_gradgradhist_ite_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_ite_ix ON mdl_grade_grades_history USING btree (itemid);


--
-- Name: mdl_gradgradhist_log_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_log_ix ON mdl_grade_grades_history USING btree (loggeduser);


--
-- Name: mdl_gradgradhist_old_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_old_ix ON mdl_grade_grades_history USING btree (oldid);


--
-- Name: mdl_gradgradhist_raw_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_raw_ix ON mdl_grade_grades_history USING btree (rawscaleid);


--
-- Name: mdl_gradgradhist_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_tim_ix ON mdl_grade_grades_history USING btree (timemodified);


--
-- Name: mdl_gradgradhist_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_use2_ix ON mdl_grade_grades_history USING btree (usermodified);


--
-- Name: mdl_gradgradhist_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradgradhist_use_ix ON mdl_grade_grades_history USING btree (userid);


--
-- Name: mdl_gradguidcomm_def_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradguidcomm_def_ix ON mdl_gradingform_guide_comments USING btree (definitionid);


--
-- Name: mdl_gradguidcrit_def_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradguidcrit_def_ix ON mdl_gradingform_guide_criteria USING btree (definitionid);


--
-- Name: mdl_gradguidfill_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradguidfill_cri_ix ON mdl_gradingform_guide_fillings USING btree (criterionid);


--
-- Name: mdl_gradguidfill_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradguidfill_ins_ix ON mdl_gradingform_guide_fillings USING btree (instanceid);


--
-- Name: mdl_gradguidfill_inscri_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradguidfill_inscri_uix ON mdl_gradingform_guide_fillings USING btree (instanceid, criterionid);


--
-- Name: mdl_gradimponewi_imp_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradimponewi_imp_ix ON mdl_grade_import_newitem USING btree (importer);


--
-- Name: mdl_gradimpovalu_imp_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradimpovalu_imp_ix ON mdl_grade_import_values USING btree (importer);


--
-- Name: mdl_gradimpovalu_ite_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradimpovalu_ite_ix ON mdl_grade_import_values USING btree (itemid);


--
-- Name: mdl_gradimpovalu_new_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradimpovalu_new_ix ON mdl_grade_import_values USING btree (newgradeitem);


--
-- Name: mdl_gradinst_def_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradinst_def_ix ON mdl_grading_instances USING btree (definitionid);


--
-- Name: mdl_gradinst_rat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradinst_rat_ix ON mdl_grading_instances USING btree (raterid);


--
-- Name: mdl_graditem_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_cat_ix ON mdl_grade_items USING btree (categoryid);


--
-- Name: mdl_graditem_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_cou2_ix ON mdl_grade_items USING btree (courseid);


--
-- Name: mdl_graditem_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_gra_ix ON mdl_grade_items USING btree (gradetype);


--
-- Name: mdl_graditem_idncou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_idncou_ix ON mdl_grade_items USING btree (idnumber, courseid);


--
-- Name: mdl_graditem_itenee_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_itenee_ix ON mdl_grade_items USING btree (itemtype, needsupdate);


--
-- Name: mdl_graditem_locloc_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_locloc_ix ON mdl_grade_items USING btree (locked, locktime);


--
-- Name: mdl_graditem_out_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_out_ix ON mdl_grade_items USING btree (outcomeid);


--
-- Name: mdl_graditem_sca_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditem_sca_ix ON mdl_grade_items USING btree (scaleid);


--
-- Name: mdl_graditemhist_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_act_ix ON mdl_grade_items_history USING btree (action);


--
-- Name: mdl_graditemhist_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_cat_ix ON mdl_grade_items_history USING btree (categoryid);


--
-- Name: mdl_graditemhist_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_cou_ix ON mdl_grade_items_history USING btree (courseid);


--
-- Name: mdl_graditemhist_log_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_log_ix ON mdl_grade_items_history USING btree (loggeduser);


--
-- Name: mdl_graditemhist_old_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_old_ix ON mdl_grade_items_history USING btree (oldid);


--
-- Name: mdl_graditemhist_out_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_out_ix ON mdl_grade_items_history USING btree (outcomeid);


--
-- Name: mdl_graditemhist_sca_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_graditemhist_sca_ix ON mdl_grade_items_history USING btree (scaleid);


--
-- Name: mdl_gradlett_conlowlet_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradlett_conlowlet_uix ON mdl_grade_letters USING btree (contextid, lowerboundary, letter);


--
-- Name: mdl_gradoutc_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutc_cou_ix ON mdl_grade_outcomes USING btree (courseid);


--
-- Name: mdl_gradoutc_cousho_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradoutc_cousho_uix ON mdl_grade_outcomes USING btree (courseid, shortname);


--
-- Name: mdl_gradoutc_sca_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutc_sca_ix ON mdl_grade_outcomes USING btree (scaleid);


--
-- Name: mdl_gradoutc_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutc_use_ix ON mdl_grade_outcomes USING btree (usermodified);


--
-- Name: mdl_gradoutccour_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutccour_cou_ix ON mdl_grade_outcomes_courses USING btree (courseid);


--
-- Name: mdl_gradoutccour_couout_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradoutccour_couout_uix ON mdl_grade_outcomes_courses USING btree (courseid, outcomeid);


--
-- Name: mdl_gradoutccour_out_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutccour_out_ix ON mdl_grade_outcomes_courses USING btree (outcomeid);


--
-- Name: mdl_gradoutchist_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutchist_act_ix ON mdl_grade_outcomes_history USING btree (action);


--
-- Name: mdl_gradoutchist_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutchist_cou_ix ON mdl_grade_outcomes_history USING btree (courseid);


--
-- Name: mdl_gradoutchist_log_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutchist_log_ix ON mdl_grade_outcomes_history USING btree (loggeduser);


--
-- Name: mdl_gradoutchist_old_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutchist_old_ix ON mdl_grade_outcomes_history USING btree (oldid);


--
-- Name: mdl_gradoutchist_sca_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradoutchist_sca_ix ON mdl_grade_outcomes_history USING btree (scaleid);


--
-- Name: mdl_gradrubrcrit_def_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradrubrcrit_def_ix ON mdl_gradingform_rubric_criteria USING btree (definitionid);


--
-- Name: mdl_gradrubrfill_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradrubrfill_cri_ix ON mdl_gradingform_rubric_fillings USING btree (criterionid);


--
-- Name: mdl_gradrubrfill_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradrubrfill_ins_ix ON mdl_gradingform_rubric_fillings USING btree (instanceid);


--
-- Name: mdl_gradrubrfill_inscri_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradrubrfill_inscri_uix ON mdl_gradingform_rubric_fillings USING btree (instanceid, criterionid);


--
-- Name: mdl_gradrubrfill_lev_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradrubrfill_lev_ix ON mdl_gradingform_rubric_fillings USING btree (levelid);


--
-- Name: mdl_gradrubrleve_cri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradrubrleve_cri_ix ON mdl_gradingform_rubric_levels USING btree (criterionid);


--
-- Name: mdl_gradsett_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_gradsett_cou_ix ON mdl_grade_settings USING btree (courseid);


--
-- Name: mdl_gradsett_counam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_gradsett_counam_uix ON mdl_grade_settings USING btree (courseid, name);


--
-- Name: mdl_grou_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grou_cou2_ix ON mdl_groups USING btree (courseid);


--
-- Name: mdl_grou_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grou_cou_ix ON mdl_groupings USING btree (courseid);


--
-- Name: mdl_grou_idn2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grou_idn2_ix ON mdl_groupings USING btree (idnumber);


--
-- Name: mdl_grou_idn_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grou_idn_ix ON mdl_groups USING btree (idnumber);


--
-- Name: mdl_grougrou_gro2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grougrou_gro2_ix ON mdl_groupings_groups USING btree (groupid);


--
-- Name: mdl_grougrou_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_grougrou_gro_ix ON mdl_groupings_groups USING btree (groupingid);


--
-- Name: mdl_groumemb_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_groumemb_gro_ix ON mdl_groups_members USING btree (groupid);


--
-- Name: mdl_groumemb_gro_ix_2; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_groumemb_gro_ix_2 ON mdl_groups_members USING btree (groupid, userid);


--
-- Name: mdl_groumemb_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_groumemb_use_ix ON mdl_groups_members USING btree (userid);


--
-- Name: mdl_hotpatte_hot_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpatte_hot_ix ON mdl_hotpot_attempts USING btree (hotpot);


--
-- Name: mdl_hotpatte_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpatte_use_ix ON mdl_hotpot_attempts USING btree (userid);


--
-- Name: mdl_hotpdeta_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpdeta_att_ix ON mdl_hotpot_details USING btree (attempt);


--
-- Name: mdl_hotpques_hot_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpques_hot_ix ON mdl_hotpot_questions USING btree (hotpot);


--
-- Name: mdl_hotpques_md5_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpques_md5_ix ON mdl_hotpot_questions USING btree (md5key);


--
-- Name: mdl_hotpresp_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpresp_att_ix ON mdl_hotpot_responses USING btree (attempt);


--
-- Name: mdl_hotpresp_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpresp_que_ix ON mdl_hotpot_responses USING btree (question);


--
-- Name: mdl_hotpstri_md5_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_hotpstri_md5_ix ON mdl_hotpot_strings USING btree (md5key);


--
-- Name: mdl_imsc_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_imsc_cou2_ix ON mdl_imscp USING btree (course);


--
-- Name: mdl_imsc_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_imsc_cou_ix ON imscp USING btree (course);


--
-- Name: mdl_labe_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_labe_cou_ix ON mdl_label USING btree (course);


--
-- Name: mdl_less_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_less_cou_ix ON mdl_lesson USING btree (course);


--
-- Name: mdl_lessansw_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessansw_les_ix ON mdl_lesson_answers USING btree (lessonid);


--
-- Name: mdl_lessansw_pag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessansw_pag_ix ON mdl_lesson_answers USING btree (pageid);


--
-- Name: mdl_lessatte_ans_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessatte_ans_ix ON mdl_lesson_attempts USING btree (answerid);


--
-- Name: mdl_lessatte_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessatte_les_ix ON mdl_lesson_attempts USING btree (lessonid);


--
-- Name: mdl_lessatte_pag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessatte_pag_ix ON mdl_lesson_attempts USING btree (pageid);


--
-- Name: mdl_lessatte_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessatte_use_ix ON mdl_lesson_attempts USING btree (userid);


--
-- Name: mdl_lessbran_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessbran_les_ix ON mdl_lesson_branch USING btree (lessonid);


--
-- Name: mdl_lessbran_pag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessbran_pag_ix ON mdl_lesson_branch USING btree (pageid);


--
-- Name: mdl_lessbran_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessbran_use_ix ON mdl_lesson_branch USING btree (userid);


--
-- Name: mdl_lessgrad_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessgrad_les_ix ON mdl_lesson_grades USING btree (lessonid);


--
-- Name: mdl_lessgrad_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lessgrad_use_ix ON mdl_lesson_grades USING btree (userid);


--
-- Name: mdl_lesshighscor_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lesshighscor_les_ix ON mdl_lesson_high_scores USING btree (lessonid);


--
-- Name: mdl_lesshighscor_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lesshighscor_use_ix ON mdl_lesson_high_scores USING btree (userid);


--
-- Name: mdl_lesspage_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lesspage_les_ix ON mdl_lesson_pages USING btree (lessonid);


--
-- Name: mdl_lesstime_les_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lesstime_les_ix ON mdl_lesson_timer USING btree (lessonid);


--
-- Name: mdl_lesstime_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lesstime_use_ix ON mdl_lesson_timer USING btree (userid);


--
-- Name: mdl_log_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_log_act_ix ON mdl_log USING btree (action);


--
-- Name: mdl_log_cmi_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_log_cmi_ix ON mdl_log USING btree (cmid);


--
-- Name: mdl_log_coumodact_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_log_coumodact_ix ON mdl_log USING btree (course, module, action);


--
-- Name: mdl_log_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_log_tim_ix ON mdl_log USING btree ("time");


--
-- Name: mdl_log_usecou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_log_usecou_ix ON mdl_log USING btree (userid, course);


--
-- Name: mdl_logdisp_modact_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_logdisp_modact_uix ON mdl_log_display USING btree (module, action);


--
-- Name: mdl_lti_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_lti_cou_ix ON mdl_lti USING btree (course);


--
-- Name: mdl_ltisubm_lti_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ltisubm_lti_ix ON mdl_lti_submission USING btree (ltiid);


--
-- Name: mdl_ltitype_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ltitype_cou_ix ON mdl_lti_types USING btree (course);


--
-- Name: mdl_ltitype_too_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ltitype_too_ix ON mdl_lti_types USING btree (tooldomain);


--
-- Name: mdl_ltitypeconf_typ_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ltitypeconf_typ_ix ON mdl_lti_types_config USING btree (typeid);


--
-- Name: mdl_mess_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mess_use2_ix ON mdl_message USING btree (useridto);


--
-- Name: mdl_mess_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mess_use_ix ON mdl_message USING btree (useridfrom);


--
-- Name: mdl_messcont_usecon_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_messcont_usecon_uix ON mdl_message_contacts USING btree (userid, contactid);


--
-- Name: mdl_messprov_comnam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_messprov_comnam_uix ON mdl_message_providers USING btree (component, name);


--
-- Name: mdl_messread_use2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_messread_use2_ix ON mdl_message_read USING btree (useridto);


--
-- Name: mdl_messread_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_messread_use_ix ON mdl_message_read USING btree (useridfrom);


--
-- Name: mdl_messwork_unr_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_messwork_unr_ix ON mdl_message_working USING btree (unreadmessageid);


--
-- Name: mdl_mnetenrocour_hosrem_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnetenrocour_hosrem_uix ON mdl_mnetservice_enrol_courses USING btree (hostid, remoteid);


--
-- Name: mdl_mnetenroenro_hos_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mnetenroenro_hos_ix ON mdl_mnetservice_enrol_enrolments USING btree (hostid);


--
-- Name: mdl_mnetenroenro_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mnetenroenro_use_ix ON mdl_mnetservice_enrol_enrolments USING btree (userid);


--
-- Name: mdl_mnethost_app_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mnethost_app_ix ON mdl_mnet_host USING btree (applicationid);


--
-- Name: mdl_mnethost_hosser_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnethost_hosser_uix ON mdl_mnet_host2service USING btree (hostid, serviceid);


--
-- Name: mdl_mnetlog_hosusecou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mnetlog_hosusecou_ix ON mdl_mnet_log USING btree (hostid, userid, course);


--
-- Name: mdl_mnetremoserv_rpcser_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnetremoserv_rpcser_uix ON mdl_mnet_remote_service2rpc USING btree (rpcid, serviceid);


--
-- Name: mdl_mnetrpc_enaxml_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mnetrpc_enaxml_ix ON mdl_mnet_rpc USING btree (enabled, xmlrpcpath);


--
-- Name: mdl_mnetserv_rpcser_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnetserv_rpcser_uix ON mdl_mnet_service2rpc USING btree (rpcid, serviceid);


--
-- Name: mdl_mnetsess_tok_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnetsess_tok_uix ON mdl_mnet_session USING btree (token);


--
-- Name: mdl_mnetssoaccecont_mneuse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_mnetssoaccecont_mneuse_uix ON mdl_mnet_sso_access_control USING btree (mnet_host_id, username);


--
-- Name: mdl_modu_nam_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_modu_nam_ix ON mdl_modules USING btree (name);


--
-- Name: mdl_mypage_usepri_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_mypage_usepri_ix ON mdl_my_pages USING btree (userid, private);


--
-- Name: mdl_page_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_page_cou_ix ON mdl_page USING btree (course);


--
-- Name: mdl_portinstconf_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portinstconf_ins_ix ON mdl_portfolio_instance_config USING btree (instance);


--
-- Name: mdl_portinstconf_nam_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portinstconf_nam_ix ON mdl_portfolio_instance_config USING btree (name);


--
-- Name: mdl_portinstuser_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portinstuser_ins_ix ON mdl_portfolio_instance_user USING btree (instance);


--
-- Name: mdl_portinstuser_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portinstuser_use_ix ON mdl_portfolio_instance_user USING btree (userid);


--
-- Name: mdl_portlog_por_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portlog_por_ix ON mdl_portfolio_log USING btree (portfolio);


--
-- Name: mdl_portlog_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portlog_use_ix ON mdl_portfolio_log USING btree (userid);


--
-- Name: mdl_portmahaqueu_tok_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portmahaqueu_tok_ix ON mdl_portfolio_mahara_queue USING btree (token);


--
-- Name: mdl_portmahaqueu_tra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_portmahaqueu_tra_ix ON mdl_portfolio_mahara_queue USING btree (transferid);


--
-- Name: mdl_porttemp_ins_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_porttemp_ins_ix ON mdl_portfolio_tempdata USING btree (instance);


--
-- Name: mdl_porttemp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_porttemp_use_ix ON mdl_portfolio_tempdata USING btree (userid);


--
-- Name: mdl_post_iduse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_post_iduse_uix ON mdl_post USING btree (id, userid);


--
-- Name: mdl_post_las_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_post_las_ix ON mdl_post USING btree (lastmodified);


--
-- Name: mdl_post_mod_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_post_mod_ix ON mdl_post USING btree (module);


--
-- Name: mdl_post_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_post_sub_ix ON mdl_post USING btree (subject);


--
-- Name: mdl_post_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_post_use_ix ON mdl_post USING btree (usermodified);


--
-- Name: mdl_prof_run_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_prof_run_uix ON mdl_profiling USING btree (runid);


--
-- Name: mdl_prof_timrun_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_prof_timrun_ix ON mdl_profiling USING btree (timecreated, runreference);


--
-- Name: mdl_prof_urlrun_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_prof_urlrun_ix ON mdl_profiling USING btree (url, runreference);


--
-- Name: mdl_qtypessaopti_que_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_qtypessaopti_que_uix ON mdl_qtype_essay_options USING btree (questionid);


--
-- Name: mdl_qtypmatcopti_que_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_qtypmatcopti_que_uix ON mdl_qtype_match_options USING btree (questionid);


--
-- Name: mdl_qtypmatcsubq_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_qtypmatcsubq_que_ix ON mdl_qtype_match_subquestions USING btree (questionid);


--
-- Name: mdl_ques_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ques_cat_ix ON mdl_question USING btree (category);


--
-- Name: mdl_ques_cre_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ques_cre_ix ON mdl_question USING btree (createdby);


--
-- Name: mdl_ques_mod_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ques_mod_ix ON mdl_question USING btree (modifiedby);


--
-- Name: mdl_ques_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_ques_par_ix ON mdl_question USING btree (parent);


--
-- Name: mdl_quesansw_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesansw_que_ix ON mdl_question_answers USING btree (question);


--
-- Name: mdl_quesatte_que2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesatte_que2_ix ON mdl_question_attempts USING btree (questionusageid);


--
-- Name: mdl_quesatte_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesatte_que_ix ON mdl_question_attempts USING btree (questionid);


--
-- Name: mdl_quesatte_queslo_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quesatte_queslo_uix ON mdl_question_attempts USING btree (questionusageid, slot);


--
-- Name: mdl_quesattestep_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesattestep_que_ix ON mdl_question_attempt_steps USING btree (questionattemptid);


--
-- Name: mdl_quesattestep_queseq_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quesattestep_queseq_uix ON mdl_question_attempt_steps USING btree (questionattemptid, sequencenumber);


--
-- Name: mdl_quesattestep_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesattestep_use_ix ON mdl_question_attempt_steps USING btree (userid);


--
-- Name: mdl_quesattestepdata_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesattestepdata_att_ix ON mdl_question_attempt_step_data USING btree (attemptstepid);


--
-- Name: mdl_quesattestepdata_attna_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quesattestepdata_attna_uix ON mdl_question_attempt_step_data USING btree (attemptstepid, name);


--
-- Name: mdl_quescalc_ans_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quescalc_ans_ix ON mdl_question_calculated USING btree (answer);


--
-- Name: mdl_quescalc_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quescalc_que_ix ON mdl_question_calculated USING btree (question);


--
-- Name: mdl_quescalcopti_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quescalcopti_que_ix ON mdl_question_calculated_options USING btree (question);


--
-- Name: mdl_quescate_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quescate_con_ix ON mdl_question_categories USING btree (contextid);


--
-- Name: mdl_quescate_par_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quescate_par_ix ON mdl_question_categories USING btree (parent);


--
-- Name: mdl_quesdata_dat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesdata_dat_ix ON mdl_question_datasets USING btree (datasetdefinition);


--
-- Name: mdl_quesdata_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesdata_que_ix ON mdl_question_datasets USING btree (question);


--
-- Name: mdl_quesdata_quedat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesdata_quedat_ix ON mdl_question_datasets USING btree (question, datasetdefinition);


--
-- Name: mdl_quesdatadefi_cat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesdatadefi_cat_ix ON mdl_question_dataset_definitions USING btree (category);


--
-- Name: mdl_quesdataitem_def_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesdataitem_def_ix ON mdl_question_dataset_items USING btree (definition);


--
-- Name: mdl_queshint_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_queshint_que_ix ON mdl_question_hints USING btree (questionid);


--
-- Name: mdl_quesmult_que2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesmult_que2_ix ON mdl_question_multichoice USING btree (question);


--
-- Name: mdl_quesmult_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesmult_que_ix ON mdl_question_multianswer USING btree (question);


--
-- Name: mdl_quesnume_ans_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesnume_ans_ix ON mdl_question_numerical USING btree (answer);


--
-- Name: mdl_quesnume_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesnume_que_ix ON mdl_question_numerical USING btree (question);


--
-- Name: mdl_quesnumeopti_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesnumeopti_que_ix ON mdl_question_numerical_options USING btree (question);


--
-- Name: mdl_quesnumeunit_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesnumeunit_que_ix ON mdl_question_numerical_units USING btree (question);


--
-- Name: mdl_quesnumeunit_queuni_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quesnumeunit_queuni_uix ON mdl_question_numerical_units USING btree (question, unit);


--
-- Name: mdl_quesrand_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesrand_que_ix ON mdl_question_randomsamatch USING btree (question);


--
-- Name: mdl_quessess_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quessess_att_ix ON mdl_question_sessions USING btree (attemptid);


--
-- Name: mdl_quessess_attque_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quessess_attque_uix ON mdl_question_sessions USING btree (attemptid, questionid);


--
-- Name: mdl_quessess_new2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quessess_new2_ix ON mdl_question_sessions USING btree (newgraded);


--
-- Name: mdl_quessess_new_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quessess_new_ix ON mdl_question_sessions USING btree (newest);


--
-- Name: mdl_quessess_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quessess_que_ix ON mdl_question_sessions USING btree (questionid);


--
-- Name: mdl_quesshor_que_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quesshor_que_uix ON mdl_qtype_shortanswer_options USING btree (questionid);


--
-- Name: mdl_quesstat_att_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesstat_att_ix ON mdl_question_states USING btree (attempt);


--
-- Name: mdl_quesstat_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesstat_que_ix ON mdl_question_states USING btree (question);


--
-- Name: mdl_questrue_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_questrue_que_ix ON mdl_question_truefalse USING btree (question);


--
-- Name: mdl_quesusag_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quesusag_con_ix ON mdl_question_usages USING btree (contextid);


--
-- Name: mdl_quiz_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quiz_cou_ix ON mdl_quiz USING btree (course);


--
-- Name: mdl_quizatte_qui_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizatte_qui_ix ON mdl_quiz_attempts USING btree (quiz);


--
-- Name: mdl_quizatte_quiuseatt_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quizatte_quiuseatt_uix ON mdl_quiz_attempts USING btree (quiz, userid, attempt);


--
-- Name: mdl_quizatte_statim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizatte_statim_ix ON mdl_quiz_attempts USING btree (state, timecheckstate);


--
-- Name: mdl_quizatte_uni_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quizatte_uni_uix ON mdl_quiz_attempts USING btree (uniqueid);


--
-- Name: mdl_quizatte_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizatte_use_ix ON mdl_quiz_attempts USING btree (userid);


--
-- Name: mdl_quizfeed_qui_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizfeed_qui_ix ON mdl_quiz_feedback USING btree (quizid);


--
-- Name: mdl_quizgrad_qui_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizgrad_qui_ix ON mdl_quiz_grades USING btree (quiz);


--
-- Name: mdl_quizgrad_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizgrad_use_ix ON mdl_quiz_grades USING btree (userid);


--
-- Name: mdl_quizover_gro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizover_gro_ix ON mdl_quiz_overrides USING btree (groupid);


--
-- Name: mdl_quizover_qui_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizover_qui_ix ON mdl_quiz_overrides USING btree (quiz);


--
-- Name: mdl_quizover_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizover_use_ix ON mdl_quiz_overrides USING btree (userid);


--
-- Name: mdl_quizquesinst_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizquesinst_que_ix ON mdl_quiz_question_instances USING btree (question);


--
-- Name: mdl_quizquesinst_qui_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_quizquesinst_qui_ix ON mdl_quiz_question_instances USING btree (quiz);


--
-- Name: mdl_quizrepo_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_quizrepo_nam_uix ON mdl_quiz_reports USING btree (name);


--
-- Name: mdl_rati_comratconite2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rati_comratconite2_ix ON mdl_rating USING btree (component, ratingarea, contextid, itemid);


--
-- Name: mdl_rati_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rati_con_ix ON mdl_rating USING btree (contextid);


--
-- Name: mdl_rati_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rati_use_ix ON mdl_rating USING btree (userid);


--
-- Name: mdl_reso_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_reso_cou_ix ON mdl_resource USING btree (course);


--
-- Name: mdl_resoold_cmi_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_resoold_cmi_ix ON mdl_resource_old USING btree (cmid);


--
-- Name: mdl_resoold_old_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_resoold_old_uix ON mdl_resource_old USING btree (oldid);


--
-- Name: mdl_role_sho_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_role_sho_uix ON mdl_role USING btree (shortname);


--
-- Name: mdl_role_sor_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_role_sor_uix ON mdl_role USING btree (sortorder);


--
-- Name: mdl_rolealloassi_all_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloassi_all_ix ON mdl_role_allow_assign USING btree (allowassign);


--
-- Name: mdl_rolealloassi_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloassi_rol_ix ON mdl_role_allow_assign USING btree (roleid);


--
-- Name: mdl_rolealloassi_rolall_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolealloassi_rolall_uix ON mdl_role_allow_assign USING btree (roleid, allowassign);


--
-- Name: mdl_rolealloover_all_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloover_all_ix ON mdl_role_allow_override USING btree (allowoverride);


--
-- Name: mdl_rolealloover_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloover_rol_ix ON mdl_role_allow_override USING btree (roleid);


--
-- Name: mdl_rolealloover_rolall_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolealloover_rolall_uix ON mdl_role_allow_override USING btree (roleid, allowoverride);


--
-- Name: mdl_rolealloswit_all_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloswit_all_ix ON mdl_role_allow_switch USING btree (allowswitch);


--
-- Name: mdl_rolealloswit_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolealloswit_rol_ix ON mdl_role_allow_switch USING btree (roleid);


--
-- Name: mdl_rolealloswit_rolall_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolealloswit_rolall_uix ON mdl_role_allow_switch USING btree (roleid, allowswitch);


--
-- Name: mdl_roleassi_comiteuse_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_comiteuse_ix ON mdl_role_assignments USING btree (component, itemid, userid);


--
-- Name: mdl_roleassi_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_con_ix ON mdl_role_assignments USING btree (contextid);


--
-- Name: mdl_roleassi_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_rol_ix ON mdl_role_assignments USING btree (roleid);


--
-- Name: mdl_roleassi_rolcon_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_rolcon_ix ON mdl_role_assignments USING btree (roleid, contextid);


--
-- Name: mdl_roleassi_sor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_sor_ix ON mdl_role_assignments USING btree (sortorder);


--
-- Name: mdl_roleassi_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_use_ix ON mdl_role_assignments USING btree (userid);


--
-- Name: mdl_roleassi_useconrol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_roleassi_useconrol_ix ON mdl_role_assignments USING btree (userid, contextid, roleid);


--
-- Name: mdl_rolecapa_cap_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolecapa_cap_ix ON mdl_role_capabilities USING btree (capability);


--
-- Name: mdl_rolecapa_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolecapa_con_ix ON mdl_role_capabilities USING btree (contextid);


--
-- Name: mdl_rolecapa_mod_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolecapa_mod_ix ON mdl_role_capabilities USING btree (modifierid);


--
-- Name: mdl_rolecapa_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolecapa_rol_ix ON mdl_role_capabilities USING btree (roleid);


--
-- Name: mdl_rolecapa_rolconcap_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolecapa_rolconcap_uix ON mdl_role_capabilities USING btree (roleid, contextid, capability);


--
-- Name: mdl_rolecontleve_conrol_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolecontleve_conrol_uix ON mdl_role_context_levels USING btree (contextlevel, roleid);


--
-- Name: mdl_rolecontleve_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolecontleve_rol_ix ON mdl_role_context_levels USING btree (roleid);


--
-- Name: mdl_rolename_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolename_con_ix ON mdl_role_names USING btree (contextid);


--
-- Name: mdl_rolename_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolename_rol_ix ON mdl_role_names USING btree (roleid);


--
-- Name: mdl_rolename_rolcon_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolename_rolcon_uix ON mdl_role_names USING btree (roleid, contextid);


--
-- Name: mdl_rolesort_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolesort_con_ix ON mdl_role_sortorder USING btree (contextid);


--
-- Name: mdl_rolesort_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolesort_rol_ix ON mdl_role_sortorder USING btree (roleid);


--
-- Name: mdl_rolesort_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_rolesort_use_ix ON mdl_role_sortorder USING btree (userid);


--
-- Name: mdl_rolesort_userolcon_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_rolesort_userolcon_uix ON mdl_role_sortorder USING btree (userid, roleid, contextid);


--
-- Name: mdl_scal_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scal_cou_ix ON mdl_scale USING btree (courseid);


--
-- Name: mdl_scalhist_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scalhist_act_ix ON mdl_scale_history USING btree (action);


--
-- Name: mdl_scalhist_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scalhist_cou_ix ON mdl_scale_history USING btree (courseid);


--
-- Name: mdl_scalhist_log_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scalhist_log_ix ON mdl_scale_history USING btree (loggeduser);


--
-- Name: mdl_scalhist_old_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scalhist_old_ix ON mdl_scale_history USING btree (oldid);


--
-- Name: mdl_scor_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scor_cou_ix ON mdl_scorm USING btree (course);


--
-- Name: mdl_scoraiccsess_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scoraiccsess_sco_ix ON mdl_scorm_aicc_session USING btree (scormid);


--
-- Name: mdl_scoraiccsess_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scoraiccsess_use_ix ON mdl_scorm_aicc_session USING btree (userid);


--
-- Name: mdl_scorscoe_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoe_sco_ix ON mdl_scorm_scoes USING btree (scorm);


--
-- Name: mdl_scorscoedata_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoedata_sco_ix ON mdl_scorm_scoes_data USING btree (scoid);


--
-- Name: mdl_scorscoetrac_ele_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoetrac_ele_ix ON mdl_scorm_scoes_track USING btree (element);


--
-- Name: mdl_scorscoetrac_sco2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoetrac_sco2_ix ON mdl_scorm_scoes_track USING btree (scoid);


--
-- Name: mdl_scorscoetrac_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoetrac_sco_ix ON mdl_scorm_scoes_track USING btree (scormid);


--
-- Name: mdl_scorscoetrac_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorscoetrac_use_ix ON mdl_scorm_scoes_track USING btree (userid);


--
-- Name: mdl_scorseqmapi_obj_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqmapi_obj_ix ON mdl_scorm_seq_mapinfo USING btree (objectiveid);


--
-- Name: mdl_scorseqmapi_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqmapi_sco_ix ON mdl_scorm_seq_mapinfo USING btree (scoid);


--
-- Name: mdl_scorseqmapi_scoidobj_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqmapi_scoidobj_uix ON mdl_scorm_seq_mapinfo USING btree (scoid, id, objectiveid);


--
-- Name: mdl_scorseqobje_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqobje_sco_ix ON mdl_scorm_seq_objective USING btree (scoid);


--
-- Name: mdl_scorseqobje_scoid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqobje_scoid_uix ON mdl_scorm_seq_objective USING btree (scoid, id);


--
-- Name: mdl_scorseqroll_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqroll_rol_ix ON mdl_scorm_seq_rolluprulecond USING btree (rollupruleid);


--
-- Name: mdl_scorseqroll_sco2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqroll_sco2_ix ON mdl_scorm_seq_rolluprulecond USING btree (scoid);


--
-- Name: mdl_scorseqroll_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqroll_sco_ix ON mdl_scorm_seq_rolluprule USING btree (scoid);


--
-- Name: mdl_scorseqroll_scoid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqroll_scoid_uix ON mdl_scorm_seq_rolluprule USING btree (scoid, id);


--
-- Name: mdl_scorseqroll_scorolid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqroll_scorolid_uix ON mdl_scorm_seq_rolluprulecond USING btree (scoid, rollupruleid, id);


--
-- Name: mdl_scorseqrule_idscorul_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqrule_idscorul_uix ON mdl_scorm_seq_rulecond USING btree (id, scoid, ruleconditionsid);


--
-- Name: mdl_scorseqrule_rul_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqrule_rul_ix ON mdl_scorm_seq_rulecond USING btree (ruleconditionsid);


--
-- Name: mdl_scorseqrule_sco2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqrule_sco2_ix ON mdl_scorm_seq_rulecond USING btree (scoid);


--
-- Name: mdl_scorseqrule_sco_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_scorseqrule_sco_ix ON mdl_scorm_seq_ruleconds USING btree (scoid);


--
-- Name: mdl_scorseqrule_scoid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_scorseqrule_scoid_uix ON mdl_scorm_seq_ruleconds USING btree (scoid, id);


--
-- Name: mdl_sess_sid_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_sess_sid_uix ON mdl_sessions USING btree (sid);


--
-- Name: mdl_sess_sta_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_sess_sta_ix ON mdl_sessions USING btree (state);


--
-- Name: mdl_sess_tim2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_sess_tim2_ix ON mdl_sessions USING btree (timemodified);


--
-- Name: mdl_sess_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_sess_tim_ix ON mdl_sessions USING btree (timecreated);


--
-- Name: mdl_sess_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_sess_use_ix ON mdl_sessions USING btree (userid);


--
-- Name: mdl_statdail_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statdail_cou_ix ON mdl_stats_daily USING btree (courseid);


--
-- Name: mdl_statdail_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statdail_rol_ix ON mdl_stats_daily USING btree (roleid);


--
-- Name: mdl_statdail_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statdail_tim_ix ON mdl_stats_daily USING btree (timeend);


--
-- Name: mdl_statmont_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statmont_cou_ix ON mdl_stats_monthly USING btree (courseid);


--
-- Name: mdl_statmont_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statmont_rol_ix ON mdl_stats_monthly USING btree (roleid);


--
-- Name: mdl_statmont_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statmont_tim_ix ON mdl_stats_monthly USING btree (timeend);


--
-- Name: mdl_statuserdail_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserdail_cou_ix ON mdl_stats_user_daily USING btree (courseid);


--
-- Name: mdl_statuserdail_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserdail_rol_ix ON mdl_stats_user_daily USING btree (roleid);


--
-- Name: mdl_statuserdail_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserdail_tim_ix ON mdl_stats_user_daily USING btree (timeend);


--
-- Name: mdl_statuserdail_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserdail_use_ix ON mdl_stats_user_daily USING btree (userid);


--
-- Name: mdl_statusermont_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statusermont_cou_ix ON mdl_stats_user_monthly USING btree (courseid);


--
-- Name: mdl_statusermont_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statusermont_rol_ix ON mdl_stats_user_monthly USING btree (roleid);


--
-- Name: mdl_statusermont_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statusermont_tim_ix ON mdl_stats_user_monthly USING btree (timeend);


--
-- Name: mdl_statusermont_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statusermont_use_ix ON mdl_stats_user_monthly USING btree (userid);


--
-- Name: mdl_statuserweek_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserweek_cou_ix ON mdl_stats_user_weekly USING btree (courseid);


--
-- Name: mdl_statuserweek_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserweek_rol_ix ON mdl_stats_user_weekly USING btree (roleid);


--
-- Name: mdl_statuserweek_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserweek_tim_ix ON mdl_stats_user_weekly USING btree (timeend);


--
-- Name: mdl_statuserweek_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statuserweek_use_ix ON mdl_stats_user_weekly USING btree (userid);


--
-- Name: mdl_statweek_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statweek_cou_ix ON mdl_stats_weekly USING btree (courseid);


--
-- Name: mdl_statweek_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statweek_rol_ix ON mdl_stats_weekly USING btree (roleid);


--
-- Name: mdl_statweek_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_statweek_tim_ix ON mdl_stats_weekly USING btree (timeend);


--
-- Name: mdl_surv_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_surv_cou_ix ON mdl_survey USING btree (course);


--
-- Name: mdl_survanal_sur_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_survanal_sur_ix ON mdl_survey_analysis USING btree (survey);


--
-- Name: mdl_survanal_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_survanal_use_ix ON mdl_survey_analysis USING btree (userid);


--
-- Name: mdl_survansw_que_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_survansw_que_ix ON mdl_survey_answers USING btree (question);


--
-- Name: mdl_survansw_sur_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_survansw_sur_ix ON mdl_survey_answers USING btree (survey);


--
-- Name: mdl_survansw_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_survansw_use_ix ON mdl_survey_answers USING btree (userid);


--
-- Name: mdl_tag_idnam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_tag_idnam_uix ON mdl_tag USING btree (id, name);


--
-- Name: mdl_tag_nam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_tag_nam_uix ON mdl_tag USING btree (name);


--
-- Name: mdl_tag_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_tag_use_ix ON mdl_tag USING btree (userid);


--
-- Name: mdl_tagcorr_tag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_tagcorr_tag_ix ON mdl_tag_correlation USING btree (tagid);


--
-- Name: mdl_taginst_iteitetagtiu_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_taginst_iteitetagtiu_uix ON mdl_tag_instance USING btree (itemtype, itemid, tagid, tiuserid);


--
-- Name: mdl_taginst_tag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_taginst_tag_ix ON mdl_tag_instance USING btree (tagid);


--
-- Name: mdl_tempenrotemp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_tempenrotemp_cou_ix ON mdl_temp_enroled_template USING btree (courseid);


--
-- Name: mdl_tempenrotemp_rol_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_tempenrotemp_rol_ix ON mdl_temp_enroled_template USING btree (roleid);


--
-- Name: mdl_tempenrotemp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_tempenrotemp_use_ix ON mdl_temp_enroled_template USING btree (userid);


--
-- Name: mdl_templogtemp_act_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_templogtemp_act_ix ON mdl_temp_log_template USING btree (action);


--
-- Name: mdl_templogtemp_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_templogtemp_cou_ix ON mdl_temp_log_template USING btree (course);


--
-- Name: mdl_templogtemp_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_templogtemp_use_ix ON mdl_temp_log_template USING btree (userid);


--
-- Name: mdl_templogtemp_usecouact_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_templogtemp_usecouact_ix ON mdl_temp_log_template USING btree (userid, course, action);


--
-- Name: mdl_toolcust_com_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_toolcust_com_ix ON mdl_tool_customlang USING btree (componentid);


--
-- Name: mdl_toolcust_lancomstr_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_toolcust_lancomstr_uix ON mdl_tool_customlang USING btree (lang, componentid, stringid);


--
-- Name: mdl_upgrlog_tim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_upgrlog_tim_ix ON mdl_upgrade_log USING btree (timemodified);


--
-- Name: mdl_upgrlog_typtim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_upgrlog_typtim_ix ON mdl_upgrade_log USING btree (type, timemodified);


--
-- Name: mdl_upgrlog_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_upgrlog_use_ix ON mdl_upgrade_log USING btree (userid);


--
-- Name: mdl_url_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_url_cou_ix ON mdl_url USING btree (course);


--
-- Name: mdl_user_aut_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_aut_ix ON mdl_user USING btree (auth);


--
-- Name: mdl_user_cit_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_cit_ix ON mdl_user USING btree (city);


--
-- Name: mdl_user_con_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_con_ix ON mdl_user USING btree (confirmed);


--
-- Name: mdl_user_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_cou_ix ON mdl_user USING btree (country);


--
-- Name: mdl_user_del_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_del_ix ON mdl_user USING btree (deleted);


--
-- Name: mdl_user_ema_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_ema_ix ON mdl_user USING btree (email);


--
-- Name: mdl_user_fir_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_fir_ix ON mdl_user USING btree (firstname);


--
-- Name: mdl_user_idn_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_idn_ix ON mdl_user USING btree (idnumber);


--
-- Name: mdl_user_las2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_las2_ix ON mdl_user USING btree (lastaccess);


--
-- Name: mdl_user_las_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_user_las_ix ON mdl_user USING btree (lastname);


--
-- Name: mdl_user_mneuse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_user_mneuse_uix ON mdl_user USING btree (mnethostid, username);


--
-- Name: mdl_userenro_enr_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userenro_enr_ix ON mdl_user_enrolments USING btree (enrolid);


--
-- Name: mdl_userenro_enruse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_userenro_enruse_uix ON mdl_user_enrolments USING btree (enrolid, userid);


--
-- Name: mdl_userenro_mod_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userenro_mod_ix ON mdl_user_enrolments USING btree (modifierid);


--
-- Name: mdl_userenro_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userenro_use_ix ON mdl_user_enrolments USING btree (userid);


--
-- Name: mdl_userinfodata_usefie_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userinfodata_usefie_ix ON mdl_user_info_data USING btree (userid, fieldid);


--
-- Name: mdl_userlast_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userlast_cou_ix ON mdl_user_lastaccess USING btree (courseid);


--
-- Name: mdl_userlast_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userlast_use_ix ON mdl_user_lastaccess USING btree (userid);


--
-- Name: mdl_userlast_usecou_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_userlast_usecou_uix ON mdl_user_lastaccess USING btree (userid, courseid);


--
-- Name: mdl_userpref_usenam_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_userpref_usenam_uix ON mdl_user_preferences USING btree (userid, name);


--
-- Name: mdl_userprivkey_scrval_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userprivkey_scrval_ix ON mdl_user_private_key USING btree (script, value);


--
-- Name: mdl_userprivkey_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userprivkey_use_ix ON mdl_user_private_key USING btree (userid);


--
-- Name: mdl_webdlock_exp_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_webdlock_exp_ix ON mdl_webdav_locks USING btree (expiry);


--
-- Name: mdl_webdlock_pat_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_webdlock_pat_ix ON mdl_webdav_locks USING btree (path);


--
-- Name: mdl_webdlock_tok_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_webdlock_tok_uix ON mdl_webdav_locks USING btree (token);


--
-- Name: mdl_wiki_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wiki_cou_ix ON mdl_wiki USING btree (course);


--
-- Name: mdl_wikilink_fro_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wikilink_fro_ix ON mdl_wiki_links USING btree (frompageid);


--
-- Name: mdl_wikilink_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wikilink_sub_ix ON mdl_wiki_links USING btree (subwikiid);


--
-- Name: mdl_wikipage_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wikipage_sub_ix ON mdl_wiki_pages USING btree (subwikiid);


--
-- Name: mdl_wikipage_subtituse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_wikipage_subtituse_uix ON mdl_wiki_pages USING btree (subwikiid, title, userid);


--
-- Name: mdl_wikisubw_wik_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wikisubw_wik_ix ON mdl_wiki_subwikis USING btree (wikiid);


--
-- Name: mdl_wikisubw_wikgrouse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_wikisubw_wikgrouse_uix ON mdl_wiki_subwikis USING btree (wikiid, groupid, userid);


--
-- Name: mdl_wikisyno_pagpag_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_wikisyno_pagpag_uix ON mdl_wiki_synonyms USING btree (pageid, pagesynonym);


--
-- Name: mdl_wikivers_pag_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_wikivers_pag_ix ON mdl_wiki_versions USING btree (pageid);


--
-- Name: mdl_work_cou2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_work_cou2_ix ON mdl_workshop USING btree (course);


--
-- Name: mdl_work_cou_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_work_cou_ix ON mdl_workshop_old USING btree (course);


--
-- Name: mdl_workaccu_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workaccu_wor_ix ON mdl_workshopform_accumulative USING btree (workshopid);


--
-- Name: mdl_workaggr_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workaggr_use_ix ON mdl_workshop_aggregations USING btree (userid);


--
-- Name: mdl_workaggr_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workaggr_wor_ix ON mdl_workshop_aggregations USING btree (workshopid);


--
-- Name: mdl_workaggr_woruse_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_workaggr_woruse_uix ON mdl_workshop_aggregations USING btree (workshopid, userid);


--
-- Name: mdl_workasse_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_gra_ix ON mdl_workshop_assessments USING btree (gradinggradeoverby);


--
-- Name: mdl_workasse_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_mai_ix ON mdl_workshop_assessments_old USING btree (mailed);


--
-- Name: mdl_workasse_rev_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_rev_ix ON mdl_workshop_assessments USING btree (reviewerid);


--
-- Name: mdl_workasse_sub2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_sub2_ix ON mdl_workshop_assessments USING btree (submissionid);


--
-- Name: mdl_workasse_sub_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_sub_ix ON mdl_workshop_assessments_old USING btree (submissionid);


--
-- Name: mdl_workasse_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_use_ix ON mdl_workshop_assessments_old USING btree (userid);


--
-- Name: mdl_workasse_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workasse_wor_ix ON mdl_workshop_assessments_old USING btree (workshopid);


--
-- Name: mdl_workbestsett_wor_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_workbestsett_wor_uix ON mdl_workshopeval_best_settings USING btree (workshopid);


--
-- Name: mdl_workcomm_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workcomm_ass_ix ON mdl_workshop_comments_old USING btree (assessmentid);


--
-- Name: mdl_workcomm_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workcomm_mai_ix ON mdl_workshop_comments_old USING btree (mailed);


--
-- Name: mdl_workcomm_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workcomm_use_ix ON mdl_workshop_comments_old USING btree (userid);


--
-- Name: mdl_workcomm_wor2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workcomm_wor2_ix ON mdl_workshopform_comments USING btree (workshopid);


--
-- Name: mdl_workcomm_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workcomm_wor_ix ON mdl_workshop_comments_old USING btree (workshopid);


--
-- Name: mdl_workelem_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workelem_wor_ix ON mdl_workshop_elements_old USING btree (workshopid);


--
-- Name: mdl_workgrad_ass2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workgrad_ass2_ix ON mdl_workshop_grades USING btree (assessmentid);


--
-- Name: mdl_workgrad_ass_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workgrad_ass_ix ON mdl_workshop_grades_old USING btree (assessmentid);


--
-- Name: mdl_workgrad_assstrdim_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_workgrad_assstrdim_uix ON mdl_workshop_grades USING btree (assessmentid, strategy, dimensionid);


--
-- Name: mdl_workgrad_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workgrad_wor_ix ON mdl_workshop_grades_old USING btree (workshopid);


--
-- Name: mdl_worknume_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worknume_wor_ix ON mdl_workshopform_numerrors USING btree (workshopid);


--
-- Name: mdl_worknumemap_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worknumemap_wor_ix ON mdl_workshopform_numerrors_map USING btree (workshopid);


--
-- Name: mdl_worknumemap_wornon_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_worknumemap_wornon_uix ON mdl_workshopform_numerrors_map USING btree (workshopid, nonegative);


--
-- Name: mdl_workrubr_wor2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workrubr_wor2_ix ON mdl_workshopform_rubric USING btree (workshopid);


--
-- Name: mdl_workrubr_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workrubr_wor_ix ON mdl_workshop_rubrics_old USING btree (workshopid);


--
-- Name: mdl_workrubrconf_wor_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_workrubrconf_wor_uix ON mdl_workshopform_rubric_config USING btree (workshopid);


--
-- Name: mdl_workrubrleve_dim_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workrubrleve_dim_ix ON mdl_workshopform_rubric_levels USING btree (dimensionid);


--
-- Name: mdl_worksche_wor_uix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE UNIQUE INDEX mdl_worksche_wor_uix ON mdl_workshopallocation_scheduled USING btree (workshopid);


--
-- Name: mdl_workstoc_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_workstoc_wor_ix ON mdl_workshop_stockcomments_old USING btree (workshopid);


--
-- Name: mdl_worksubm_aut_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_aut_ix ON mdl_workshop_submissions USING btree (authorid);


--
-- Name: mdl_worksubm_gra_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_gra_ix ON mdl_workshop_submissions USING btree (gradeoverby);


--
-- Name: mdl_worksubm_mai_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_mai_ix ON mdl_workshop_submissions_old USING btree (mailed);


--
-- Name: mdl_worksubm_use_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_use_ix ON mdl_workshop_submissions_old USING btree (userid);


--
-- Name: mdl_worksubm_wor2_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_wor2_ix ON mdl_workshop_submissions USING btree (workshopid);


--
-- Name: mdl_worksubm_wor_ix; Type: INDEX; Schema: public; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_worksubm_wor_ix ON mdl_workshop_submissions_old USING btree (workshopid);


SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_userexp_inx; Type: INDEX; Schema: tutorias; Owner: innovaedu; Tablespace: 
--

CREATE INDEX mdl_userexp_inx ON mdl_userexp USING btree (userid, cursoid, grupoid);


--
-- Name: _RETURN; Type: RULE; Schema: tutorias; Owner: innovaedu
--

CREATE RULE "_RETURN" AS ON SELECT TO v_rpt_user_cargo DO INSTEAD SELECT t.id AS idp, t.iduser, t.id_curso, t.nom_usuario, u.username, tu.nom_nombre AS nombre, tu.nom_paterno, tu.nom_materno, tu.nom_curp, tu.desc_rfc, tu.tmsp_fecha_nac, tu.tmsp_ing_imss, t.num_ant_anio, t.num_ant_quincena, t.num_ant_dias, CASE WHEN (max(t.esp) > 0) THEN max((esp.abrev)::text) WHEN (max(t.esp) = 0) THEN max((car.abrev)::text) ELSE ' '::text END AS cargo, da.nom_depto_adscripcion, t.cve_departamento, cat.des_clave, t.passtutor, t.grado, car.idrama, t.licenciatura, t.esp, cc.fullname, cc.shortname, t.aniosdoc, t.aniostutor, u.email, t.emaillab, t.emailpart, u.phone1, u.phone2, u.numred, t.desemp, t.desempeno, t.des_sede, cat.nom_nombre AS nomcat, tu.desc_sexo AS sexo FROM (((((((mdl_usertutor t LEFT JOIN mdl_carreras car ON ((car.id = t.licenciatura))) LEFT JOIN mdl_especialidades esp ON ((esp.id = t.esp))) LEFT JOIN public.mdl_user u ON ((u.id = t.iduser))) LEFT JOIN gestion.sgp_tab_usuario tu ON (((tu.nom_usuario)::text = (u.username)::text))) LEFT JOIN public.mdl_course cc ON ((cc.id = t.id_curso))) LEFT JOIN nomina.ssn_categoria cat ON ((cat.cve_categoria = t.cve_categoria))) LEFT JOIN departments.ssd_cat_depto_adscripcion da ON ((da.cve_depto_adscripcion = (t.cve_departamento)::bpchar))) GROUP BY t.id, tu.nom_nombre, tu.nom_paterno, tu.nom_materno, tu.nom_curp, tu.desc_rfc, tu.tmsp_fecha_nac, tu.tmsp_ing_imss, da.nom_depto_adscripcion, cat.des_clave, car.idrama, cc.fullname, cc.shortname, u.email, u.phone1, u.phone2, u.numred, cat.nom_nombre, tu.desc_sexo, u.username;


--
-- Name: _RETURN; Type: RULE; Schema: tutorias; Owner: innovaedu
--

CREATE RULE "_RETURN" AS ON SELECT TO v_rpt_docentes DO INSTEAD SELECT u.id, exp.userid, u.username, pg_catalog.concat(u.firstname, ' ', u.lastname) AS nombre FROM ((((mdl_userexp exp LEFT JOIN mdl_usertutor tut ON ((tut.iduser = exp.userid))) JOIN public.mdl_user u ON ((u.id = exp.userid))) LEFT JOIN public.mdl_role r ON ((r.id = exp.role))) JOIN parametrizacion.ssp_tipo_roles tr ON (((tr.cve_role = r.id) AND (tr.ind_tipo = 2)))) GROUP BY u.id, u.username, exp.userid ORDER BY pg_catalog.concat(u.firstname, ' ', u.lastname);


SET search_path = calificaciones, pg_catalog;

--
-- Name: mdl_califgenerales_idmod_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_califgenerales
    ADD CONSTRAINT mdl_califgenerales_idmod_fkey FOREIGN KEY (idmod) REFERENCES mdl_moduni(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_calificaciones_idelemento_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_calificaciones
    ADD CONSTRAINT mdl_calificaciones_idelemento_fkey FOREIGN KEY (idelemento) REFERENCES mdl_elementoscal(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_caltotalgral_idmod_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_caltotalgral
    ADD CONSTRAINT mdl_caltotalgral_idmod_fkey FOREIGN KEY (idmod) REFERENCES mdl_moduni(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_elementoscal_idgmoduni_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_elementoscal
    ADD CONSTRAINT mdl_elementoscal_idgmoduni_fkey FOREIGN KEY (idgmoduni) REFERENCES mdl_unidades(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_modexterno_idmodulo_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_modexterno
    ADD CONSTRAINT mdl_modexterno_idmodulo_fkey FOREIGN KEY (idmodulo) REFERENCES public.mdl_modules(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_unidades_idmoduni_fkey; Type: FK CONSTRAINT; Schema: calificaciones; Owner: innovaedu
--

ALTER TABLE ONLY mdl_unidades
    ADD CONSTRAINT mdl_unidades_idmoduni_fkey FOREIGN KEY (idmoduni) REFERENCES mdl_moduni(id) ON UPDATE CASCADE ON DELETE CASCADE;


SET search_path = cert, pg_catalog;

--
-- Name: fk_cert_conf_formato; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_tab_certificate_config
    ADD CONSTRAINT fk_cert_conf_formato FOREIGN KEY (cve_formato) REFERENCES ssc_cat_formato(cve_formato);


--
-- Name: fk_cert_firmas_cert_config; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_tab_cert_firmas
    ADD CONSTRAINT fk_cert_firmas_cert_config FOREIGN KEY (cve_cert_config) REFERENCES ssc_tab_certificate_config(cve_cert_config);


--
-- Name: fk_cert_firmas_firma; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_tab_cert_firmas
    ADD CONSTRAINT fk_cert_firmas_firma FOREIGN KEY (cve_firma) REFERENCES ssc_cat_firma(cve_firma);


--
-- Name: fk_cert_issues_bit_cert_issues; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_cert_issues_bitacora
    ADD CONSTRAINT fk_cert_issues_bit_cert_issues FOREIGN KEY (cert_issues_id) REFERENCES public.mdl_certificate_issues(id);


--
-- Name: fk_cert_issues_conf; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_tab_cert_issues_conf
    ADD CONSTRAINT fk_cert_issues_conf FOREIGN KEY (cert_issues_id) REFERENCES public.mdl_certificate_issues(id);


--
-- Name: fk_firma_cargo; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_cat_firma
    ADD CONSTRAINT fk_firma_cargo FOREIGN KEY (cve_cargo) REFERENCES ssc_cat_cargo(cve_cargo);


--
-- Name: fk_liberacion_cert_config; Type: FK CONSTRAINT; Schema: cert; Owner: innovaedu
--

ALTER TABLE ONLY ssc_tab_liberacion
    ADD CONSTRAINT fk_liberacion_cert_config FOREIGN KEY (cve_cert_config) REFERENCES ssc_tab_certificate_config(cve_cert_config);


SET search_path = departments, pg_catalog;

--
-- Name: fkcve_regiones; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_delegacion
    ADD CONSTRAINT fkcve_regiones FOREIGN KEY (cve_regiones) REFERENCES ssd_regiones(cve_regiones);


--
-- Name: sdcns_fk_dead_dead_deadpadre; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_depto_adscripcion
    ADD CONSTRAINT sdcns_fk_dead_dead_deadpadre FOREIGN KEY (cve_depto_adscripcion_padre) REFERENCES ssd_cat_depto_adscripcion(cve_depto_adscripcion);


--
-- Name: sdcns_fk_dele_depe_cvedelegacion; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_dependencia
    ADD CONSTRAINT sdcns_fk_dele_depe_cvedelegacion FOREIGN KEY (cve_delegacion) REFERENCES ssd_cat_delegacion(cve_delegacion);


--
-- Name: sdcns_fk_depe_dead_cvedeptoadscr; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_depto_adscripcion
    ADD CONSTRAINT sdcns_fk_depe_dead_cvedeptoadscr FOREIGN KEY (cve_depto_adscripcion) REFERENCES ssd_cat_dependencia(cve_depto_adscripcion);


--
-- Name: sdcns_fk_niat_depe_cvenivelaten; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_dependencia
    ADD CONSTRAINT sdcns_fk_niat_depe_cvenivelaten FOREIGN KEY (cve_nivel_atencion) REFERENCES ssd_cat_nivel_atencion(cve_nivel_atencion);


--
-- Name: sdcns_fk_norm_depe_cvenorm; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_dependencia
    ADD CONSTRAINT sdcns_fk_norm_depe_cvenorm FOREIGN KEY (cve_organo_control, cve_departamento) REFERENCES ssd_cat_normativa(cve_organo_control, cve_departamento);


--
-- Name: sdcns_fk_orco_norm_orgcont; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_normativa
    ADD CONSTRAINT sdcns_fk_orco_norm_orgcont FOREIGN KEY (cve_organo_control) REFERENCES ssd_cat_organo_control(cve_organo_control);


--
-- Name: sdcns_fk_unat_orco_unidadatencion; Type: FK CONSTRAINT; Schema: departments; Owner: innovaedu
--

ALTER TABLE ONLY ssd_cat_organo_control
    ADD CONSTRAINT sdcns_fk_unat_orco_unidadatencion FOREIGN KEY (cve_unidad_atencion) REFERENCES ssd_cat_unidad_atencion(cve_unidad_atencion);


SET search_path = encuestas, pg_catalog;

--
-- Name: fk_padre_preguntas; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT fk_padre_preguntas FOREIGN KEY (pregunta_padre, encuesta_padre) REFERENCES sse_preguntas(preguntas_cve, encuesta_cve);


--
-- Name: fk_respuesta_evaluacion; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_evaluacion
    ADD CONSTRAINT fk_respuesta_evaluacion FOREIGN KEY (encuesta_cve, preguntas_cve, reactivos_cve) REFERENCES sse_respuestas(encuesta_cve, preguntas_cve, reactivos_cve);


--
-- Name: fk_respuesta_pregunta; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_respuestas
    ADD CONSTRAINT fk_respuesta_pregunta FOREIGN KEY (encuesta_cve, preguntas_cve) REFERENCES sse_preguntas(encuesta_cve, preguntas_cve);


--
-- Name: fkpre_indicador; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT fkpre_indicador FOREIGN KEY (tipo_indicador_cve) REFERENCES sse_indicador(indicador_cve) MATCH FULL;


--
-- Name: r_10; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_encuesta_curso
    ADD CONSTRAINT r_10 FOREIGN KEY (encuesta_cve) REFERENCES sse_encuestas(encuesta_cve);


--
-- Name: r_17; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT r_17 FOREIGN KEY (tipo_pregunta_cve) REFERENCES sse_tipo_pregunta(tipo_pregunta_cve);


--
-- Name: r_30; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT r_30 FOREIGN KEY (encuesta_cve) REFERENCES sse_encuestas(encuesta_cve);


--
-- Name: r_31; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_preguntas
    ADD CONSTRAINT r_31 FOREIGN KEY (seccion_cve) REFERENCES sse_seccion(seccion_cve);


--
-- Name: sse_encuestas_reglas_eval_fkey; Type: FK CONSTRAINT; Schema: encuestas; Owner: innovaedu
--

ALTER TABLE ONLY sse_encuestas
    ADD CONSTRAINT sse_encuestas_reglas_eval_fkey FOREIGN KEY (reglas_evaluacion_cve) REFERENCES sse_reglas_evaluacion(reglas_evaluacion_cve) ON UPDATE CASCADE;


SET search_path = externo, pg_catalog;

--
-- Name: fk_ssx_acceso_modulo_modulo; Type: FK CONSTRAINT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_acceso_modulo
    ADD CONSTRAINT fk_ssx_acceso_modulo_modulo FOREIGN KEY (cve_modulo) REFERENCES ssx_modulo(cve_modulo);


--
-- Name: fk_ssx_acceso_modulo_usuario; Type: FK CONSTRAINT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_acceso_modulo
    ADD CONSTRAINT fk_ssx_acceso_modulo_usuario FOREIGN KEY (cve_usuario) REFERENCES ssx_usuario(cve_usuario);


--
-- Name: fk_ssx_acceso_usuario_usuario; Type: FK CONSTRAINT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_acceso_del
    ADD CONSTRAINT fk_ssx_acceso_usuario_usuario FOREIGN KEY (cve_usuario) REFERENCES ssx_usuario(cve_usuario);


--
-- Name: fk_ssx_modulo_modulo_padre; Type: FK CONSTRAINT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_modulo
    ADD CONSTRAINT fk_ssx_modulo_modulo_padre FOREIGN KEY (cve_modulo_padre) REFERENCES ssx_modulo(cve_modulo);


--
-- Name: ssx_usuario_rol_admin; Type: FK CONSTRAINT; Schema: externo; Owner: innovaedu
--

ALTER TABLE ONLY ssx_usuario
    ADD CONSTRAINT ssx_usuario_rol_admin FOREIGN KEY (cve_rol_admin) REFERENCES ssx_rol_admin(cve_rol_admin);


SET search_path = gestion, pg_catalog;

--
-- Name: fk_prereg_al_medio; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_preregistro_al
    ADD CONSTRAINT fk_prereg_al_medio FOREIGN KEY (cve_medio) REFERENCES sgp_cat_medio_entero(cve_medio);


--
-- Name: fk_prereg_al_usr; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_preregistro_al
    ADD CONSTRAINT fk_prereg_al_usr FOREIGN KEY (nom_usuario) REFERENCES sgp_tab_usuario(nom_usuario);


--
-- Name: sied_sgp_fk_pre; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_preregistro_al
    ADD CONSTRAINT sied_sgp_fk_pre FOREIGN KEY (nom_usuario) REFERENCES sgp_tab_usuario(nom_usuario);


--
-- Name: sied_ssg_fk_adsc; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sied_ssg_fk_adsc FOREIGN KEY (cve_dept) REFERENCES departments.ssd_cat_depto_adscripcion(cve_depto_adscripcion);


--
-- Name: sied_ssg_fk_cat; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sied_ssg_fk_cat FOREIGN KEY (cve_categoria) REFERENCES nomina.ssn_categoria(cve_categoria);


--
-- Name: sied_ssg_fk_course; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sied_ssg_fk_course FOREIGN KEY (cve_curso) REFERENCES public.mdl_course(id);


--
-- Name: sied_ssg_fk_del; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sied_ssg_fk_del FOREIGN KEY (cve_del) REFERENCES departments.ssd_cat_delegacion(cve_delegacion);


--
-- Name: sied_ssg_fk_nivelat; Type: FK CONSTRAINT; Schema: gestion; Owner: innovaedu
--

ALTER TABLE ONLY sgp_tab_cuodel
    ADD CONSTRAINT sied_ssg_fk_nivelat FOREIGN KEY (cve_nvlat) REFERENCES departments.ssd_cat_nivel_atencion(cve_nivel_atencion);


SET search_path = nomina, pg_catalog;

--
-- Name: fk_categoria_tipo_categoria; Type: FK CONSTRAINT; Schema: nomina; Owner: innovaedu
--

ALTER TABLE ONLY ssn_categoria
    ADD CONSTRAINT fk_categoria_tipo_categoria FOREIGN KEY (cve_tipo_categoria) REFERENCES ssn_tipo_catgoria(cve_tipo_categoria);


SET search_path = public, pg_catalog;

--
-- Name: fk_certissues_role; Type: FK CONSTRAINT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_certificate_conf
    ADD CONSTRAINT fk_certissues_role FOREIGN KEY (roleid) REFERENCES mdl_role(id);


--
-- Name: fk_mocourse_config_course; Type: FK CONSTRAINT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_config
    ADD CONSTRAINT fk_mocourse_config_course FOREIGN KEY (course) REFERENCES mdl_course(id);


--
-- Name: fk_mocourse_config_modalidad; Type: FK CONSTRAINT; Schema: public; Owner: innovaedu
--

ALTER TABLE ONLY mdl_course_config
    ADD CONSTRAINT fk_mocourse_config_modalidad FOREIGN KEY (modalidad) REFERENCES mdl_modalidad(id);


SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_carreras_idestudio_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_carreras
    ADD CONSTRAINT mdl_carreras_idestudio_fkey FOREIGN KEY (idestudio) REFERENCES mdl_estudios(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_cateva_ideva_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_cateva
    ADD CONSTRAINT mdl_cateva_ideva_fkey FOREIGN KEY (ideva) REFERENCES mdl_evatutor(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_detusertutor_form_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_detusertutor
    ADD CONSTRAINT mdl_detusertutor_form_fkey FOREIGN KEY (idform) REFERENCES mdl_formacion(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_detusertutor_iduser_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_detusertutor
    ADD CONSTRAINT mdl_detusertutor_iduser_fkey FOREIGN KEY (iduser) REFERENCES public.mdl_user(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_especialidades_idcarrera_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_especialidades
    ADD CONSTRAINT mdl_especialidades_idcarrera_fkey FOREIGN KEY (idcarrera) REFERENCES mdl_carreras(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: mdl_evatutor_iduserexp_fkey; Type: FK CONSTRAINT; Schema: tutorias; Owner: innovaedu
--

ALTER TABLE ONLY mdl_evatutor
    ADD CONSTRAINT mdl_evatutor_iduserexp_fkey FOREIGN KEY (iduserexp) REFERENCES mdl_userexp(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: calificaciones; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA calificaciones FROM PUBLIC;
REVOKE ALL ON SCHEMA calificaciones FROM innovaedu;
GRANT ALL ON SCHEMA calificaciones TO innovaedu;


--
-- Name: cert; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA cert FROM PUBLIC;
REVOKE ALL ON SCHEMA cert FROM innovaedu;
GRANT ALL ON SCHEMA cert TO innovaedu;


--
-- Name: departments; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA departments FROM PUBLIC;
REVOKE ALL ON SCHEMA departments FROM innovaedu;
GRANT ALL ON SCHEMA departments TO innovaedu;


--
-- Name: externo; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA externo FROM PUBLIC;
REVOKE ALL ON SCHEMA externo FROM innovaedu;
GRANT ALL ON SCHEMA externo TO innovaedu;


--
-- Name: gestion; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA gestion FROM PUBLIC;
REVOKE ALL ON SCHEMA gestion FROM innovaedu;
GRANT ALL ON SCHEMA gestion TO innovaedu;


--
-- Name: mesa_ayuda; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA mesa_ayuda FROM PUBLIC;
REVOKE ALL ON SCHEMA mesa_ayuda FROM innovaedu;
GRANT ALL ON SCHEMA mesa_ayuda TO innovaedu;


--
-- Name: nomina; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA nomina FROM PUBLIC;
REVOKE ALL ON SCHEMA nomina FROM innovaedu;
GRANT ALL ON SCHEMA nomina TO innovaedu;


--
-- Name: parametrizacion; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA parametrizacion FROM PUBLIC;
REVOKE ALL ON SCHEMA parametrizacion FROM innovaedu;
GRANT ALL ON SCHEMA parametrizacion TO innovaedu;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO innovaedu;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: tutorias; Type: ACL; Schema: -; Owner: innovaedu
--

REVOKE ALL ON SCHEMA tutorias FROM PUBLIC;
REVOKE ALL ON SCHEMA tutorias FROM innovaedu;
GRANT ALL ON SCHEMA tutorias TO innovaedu;


SET search_path = calificaciones, pg_catalog;

--
-- Name: f_aprobados_no_aprobados_his(integer); Type: ACL; Schema: calificaciones; Owner: postgres
--

REVOKE ALL ON FUNCTION f_aprobados_no_aprobados_his(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_aprobados_no_aprobados_his(integer) FROM postgres;
GRANT ALL ON FUNCTION f_aprobados_no_aprobados_his(integer) TO postgres;
GRANT ALL ON FUNCTION f_aprobados_no_aprobados_his(integer) TO PUBLIC;
GRANT ALL ON FUNCTION f_aprobados_no_aprobados_his(integer) TO innovaedu WITH GRANT OPTION;


--
-- Name: f_calificacion_aprobado_no_aprobado_actual(integer); Type: ACL; Schema: calificaciones; Owner: postgres
--

REVOKE ALL ON FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) FROM postgres;
GRANT ALL ON FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) TO postgres;
GRANT ALL ON FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) TO PUBLIC;
GRANT ALL ON FUNCTION f_calificacion_aprobado_no_aprobado_actual(integer) TO innovaedu WITH GRANT OPTION;


--
-- Name: f_calificacion_unidad_actuales(integer); Type: ACL; Schema: calificaciones; Owner: postgres
--

REVOKE ALL ON FUNCTION f_calificacion_unidad_actuales(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificacion_unidad_actuales(integer) FROM postgres;
GRANT ALL ON FUNCTION f_calificacion_unidad_actuales(integer) TO postgres;
GRANT ALL ON FUNCTION f_calificacion_unidad_actuales(integer) TO PUBLIC;
GRANT ALL ON FUNCTION f_calificacion_unidad_actuales(integer) TO innovaedu WITH GRANT OPTION;


--
-- Name: f_calificaciones_aprobadas(integer); Type: ACL; Schema: calificaciones; Owner: postgres
--

REVOKE ALL ON FUNCTION f_calificaciones_aprobadas(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificaciones_aprobadas(integer) FROM postgres;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas(integer) TO postgres;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas(integer) TO PUBLIC;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas(integer) TO innovaedu WITH GRANT OPTION;


--
-- Name: f_calificaciones_aprobadas_hist(integer); Type: ACL; Schema: calificaciones; Owner: postgres
--

REVOKE ALL ON FUNCTION f_calificaciones_aprobadas_hist(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificaciones_aprobadas_hist(integer) FROM postgres;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas_hist(integer) TO postgres;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas_hist(integer) TO PUBLIC;
GRANT ALL ON FUNCTION f_calificaciones_aprobadas_hist(integer) TO innovaedu WITH GRANT OPTION;


SET search_path = cert, pg_catalog;

--
-- Name: f_calificaciones_act(integer, character); Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_calificaciones_act(integer, character) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificaciones_act(integer, character) FROM innovaedu;
GRANT ALL ON FUNCTION f_calificaciones_act(integer, character) TO innovaedu;
GRANT ALL ON FUNCTION f_calificaciones_act(integer, character) TO PUBLIC;


--
-- Name: f_calificaciones_his(integer, character); Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_calificaciones_his(integer, character) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_calificaciones_his(integer, character) FROM innovaedu;
GRANT ALL ON FUNCTION f_calificaciones_his(integer, character) TO innovaedu;
GRANT ALL ON FUNCTION f_calificaciones_his(integer, character) TO PUBLIC;


--
-- Name: random_string(integer); Type: ACL; Schema: cert; Owner: postgres
--

REVOKE ALL ON FUNCTION random_string(length integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION random_string(length integer) FROM postgres;
GRANT ALL ON FUNCTION random_string(length integer) TO postgres;
GRANT ALL ON FUNCTION random_string(length integer) TO PUBLIC;


SET search_path = departments, pg_catalog;

--
-- Name: get_arbol_clave(character varying); Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON FUNCTION get_arbol_clave(clave_departametal character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION get_arbol_clave(clave_departametal character varying) FROM innovaedu;
GRANT ALL ON FUNCTION get_arbol_clave(clave_departametal character varying) TO innovaedu;
GRANT ALL ON FUNCTION get_arbol_clave(clave_departametal character varying) TO PUBLIC;


--
-- Name: get_arbol_nombre(character varying); Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON FUNCTION get_arbol_nombre(clave_departametal character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION get_arbol_nombre(clave_departametal character varying) FROM innovaedu;
GRANT ALL ON FUNCTION get_arbol_nombre(clave_departametal character varying) TO innovaedu;
GRANT ALL ON FUNCTION get_arbol_nombre(clave_departametal character varying) TO PUBLIC;


--
-- Name: get_arbol_table(character varying); Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON FUNCTION get_arbol_table(clave_departametal character varying) FROM PUBLIC;
REVOKE ALL ON FUNCTION get_arbol_table(clave_departametal character varying) FROM innovaedu;
GRANT ALL ON FUNCTION get_arbol_table(clave_departametal character varying) TO innovaedu;
GRANT ALL ON FUNCTION get_arbol_table(clave_departametal character varying) TO PUBLIC;


SET search_path = gestion, pg_catalog;

--
-- Name: f_rpt_preregistro(integer); Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_rpt_preregistro(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_rpt_preregistro(integer) FROM innovaedu;
GRANT ALL ON FUNCTION f_rpt_preregistro(integer) TO innovaedu;
GRANT ALL ON FUNCTION f_rpt_preregistro(integer) TO PUBLIC;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: get_arbol_menu(integer); Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON FUNCTION get_arbol_menu(menuid integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION get_arbol_menu(menuid integer) FROM innovaedu;
GRANT ALL ON FUNCTION get_arbol_menu(menuid integer) TO innovaedu;
GRANT ALL ON FUNCTION get_arbol_menu(menuid integer) TO PUBLIC;


SET search_path = tutorias, pg_catalog;

--
-- Name: f_alumnos_insc_act(integer); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_alumnos_insc_act(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_alumnos_insc_act(integer) FROM innovaedu;
GRANT ALL ON FUNCTION f_alumnos_insc_act(integer) TO innovaedu;
GRANT ALL ON FUNCTION f_alumnos_insc_act(integer) TO PUBLIC;


--
-- Name: f_aux_count_alumnos_act(bigint, text); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_aux_count_alumnos_act(bigint, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_aux_count_alumnos_act(bigint, text) FROM innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_act(bigint, text) TO innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_act(bigint, text) TO PUBLIC;


--
-- Name: f_aux_count_alumnos_act_curso(bigint, text); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_aux_count_alumnos_act_curso(bigint, text) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_aux_count_alumnos_act_curso(bigint, text) FROM innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_act_curso(bigint, text) TO innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_act_curso(bigint, text) TO PUBLIC;


--
-- Name: f_aux_count_alumnos_xprofesor(bigint); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_aux_count_alumnos_xprofesor(bigint) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_aux_count_alumnos_xprofesor(bigint) FROM innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_xprofesor(bigint) TO innovaedu;
GRANT ALL ON FUNCTION f_aux_count_alumnos_xprofesor(bigint) TO PUBLIC;


--
-- Name: f_aux_limit_pre_registro(bigint); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_aux_limit_pre_registro(bigint) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_aux_limit_pre_registro(bigint) FROM innovaedu;
GRANT ALL ON FUNCTION f_aux_limit_pre_registro(bigint) TO innovaedu;
GRANT ALL ON FUNCTION f_aux_limit_pre_registro(bigint) TO PUBLIC;


--
-- Name: f_get_alumnos_activos(integer); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_get_alumnos_activos(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_get_alumnos_activos(integer) FROM innovaedu;
GRANT ALL ON FUNCTION f_get_alumnos_activos(integer) TO innovaedu;
GRANT ALL ON FUNCTION f_get_alumnos_activos(integer) TO PUBLIC;


--
-- Name: f_rpt_tutores(integer); Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON FUNCTION f_rpt_tutores(integer) FROM PUBLIC;
REVOKE ALL ON FUNCTION f_rpt_tutores(integer) FROM innovaedu;
GRANT ALL ON FUNCTION f_rpt_tutores(integer) TO innovaedu;
GRANT ALL ON FUNCTION f_rpt_tutores(integer) TO PUBLIC;


SET search_path = calificaciones, pg_catalog;

--
-- Name: mdl_caltotalgral; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_caltotalgral FROM PUBLIC;
REVOKE ALL ON TABLE mdl_caltotalgral FROM innovaedu;
GRANT ALL ON TABLE mdl_caltotalgral TO innovaedu;


--
-- Name: mdl_elementoscal; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_elementoscal FROM PUBLIC;
REVOKE ALL ON TABLE mdl_elementoscal FROM innovaedu;
GRANT ALL ON TABLE mdl_elementoscal TO innovaedu;


--
-- Name: mdl_moduni; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_moduni FROM PUBLIC;
REVOKE ALL ON TABLE mdl_moduni FROM innovaedu;
GRANT ALL ON TABLE mdl_moduni TO innovaedu;


--
-- Name: mdl_unidades; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_unidades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_unidades FROM innovaedu;
GRANT ALL ON TABLE mdl_unidades TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_context_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_context_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_context_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_context_id_seq TO innovaedu;


--
-- Name: mdl_context; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_context FROM PUBLIC;
REVOKE ALL ON TABLE mdl_context FROM innovaedu;
GRANT ALL ON TABLE mdl_context TO innovaedu;


--
-- Name: mdl_course_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_id_seq TO innovaedu;


--
-- Name: mdl_course; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course FROM innovaedu;
GRANT ALL ON TABLE mdl_course TO innovaedu;


--
-- Name: mdl_groups_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groups_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groups_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groups_id_seq TO innovaedu;


--
-- Name: mdl_groups; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_groups FROM PUBLIC;
REVOKE ALL ON TABLE mdl_groups FROM innovaedu;
GRANT ALL ON TABLE mdl_groups TO innovaedu;


--
-- Name: mdl_groups_members_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groups_members_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groups_members_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groups_members_id_seq TO innovaedu;


--
-- Name: mdl_groups_members; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_groups_members FROM PUBLIC;
REVOKE ALL ON TABLE mdl_groups_members FROM innovaedu;
GRANT ALL ON TABLE mdl_groups_members TO innovaedu;


--
-- Name: mdl_modules_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_modules_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_modules_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_modules_id_seq TO innovaedu;


--
-- Name: mdl_modules; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_modules FROM PUBLIC;
REVOKE ALL ON TABLE mdl_modules FROM innovaedu;
GRANT ALL ON TABLE mdl_modules TO innovaedu;


--
-- Name: mdl_role_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_id_seq TO innovaedu;


--
-- Name: mdl_role; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role FROM innovaedu;
GRANT ALL ON TABLE mdl_role TO innovaedu;


--
-- Name: mdl_role_assignments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_assignments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_assignments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_assignments_id_seq TO innovaedu;


--
-- Name: mdl_role_assignments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_assignments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_assignments FROM innovaedu;
GRANT ALL ON TABLE mdl_role_assignments TO innovaedu;


--
-- Name: mdl_user_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_id_seq TO innovaedu;


--
-- Name: mdl_user; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user FROM innovaedu;
GRANT ALL ON TABLE mdl_user TO innovaedu;


SET search_path = calificaciones, pg_catalog;

--
-- Name: Calificaciones_historicas; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE "Calificaciones_historicas" FROM PUBLIC;
REVOKE ALL ON TABLE "Calificaciones_historicas" FROM innovaedu;
GRANT ALL ON TABLE "Calificaciones_historicas" TO innovaedu;


--
-- Name: mdl_califgenerales; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_califgenerales FROM PUBLIC;
REVOKE ALL ON TABLE mdl_califgenerales FROM innovaedu;
GRANT ALL ON TABLE mdl_califgenerales TO innovaedu;


--
-- Name: mdl_califgenerales_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_califgenerales_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_califgenerales_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_califgenerales_id_seq TO innovaedu;


--
-- Name: mdl_calificaciones; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_calificaciones FROM PUBLIC;
REVOKE ALL ON TABLE mdl_calificaciones FROM innovaedu;
GRANT ALL ON TABLE mdl_calificaciones TO innovaedu;


--
-- Name: mdl_calificaciones_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_calificaciones_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_calificaciones_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_calificaciones_id_seq TO innovaedu;


--
-- Name: mdl_caltotalgral_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_caltotalgral_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_caltotalgral_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_caltotalgral_id_seq TO innovaedu;


--
-- Name: mdl_caltotalgral_respo_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_caltotalgral_respo_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_caltotalgral_respo_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_caltotalgral_respo_seq TO innovaedu;


--
-- Name: mdl_elementoscal_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_elementoscal_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_elementoscal_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_elementoscal_id_seq TO innovaedu;


--
-- Name: mdl_modexterno; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_modexterno FROM PUBLIC;
REVOKE ALL ON TABLE mdl_modexterno FROM innovaedu;
GRANT ALL ON TABLE mdl_modexterno TO innovaedu;


--
-- Name: mdl_modexterno_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_modexterno_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_modexterno_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_modexterno_id_seq TO innovaedu;


--
-- Name: mdl_moduni_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_moduni_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_moduni_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_moduni_id_seq TO innovaedu;


--
-- Name: mdl_unidades_id_seq; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_unidades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_unidades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_unidades_id_seq TO innovaedu;


SET search_path = departments, pg_catalog;

--
-- Name: ssd_cat_delegacion; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_delegacion FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_delegacion FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_delegacion TO innovaedu;


--
-- Name: ssd_cat_dependencia; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_dependencia FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_dependencia FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_dependencia TO innovaedu;


--
-- Name: ssd_cat_depto_adscripcion; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_depto_adscripcion FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_depto_adscripcion FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_depto_adscripcion TO innovaedu;


--
-- Name: ssd_cat_nivel_atencion; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_nivel_atencion FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_nivel_atencion FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_nivel_atencion TO innovaedu;


--
-- Name: ssd_cat_normativa; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_normativa FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_normativa FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_normativa TO innovaedu;


--
-- Name: ssd_cat_organo_control; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_organo_control FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_organo_control FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_organo_control TO innovaedu;


--
-- Name: ssd_cat_unidad_atencion; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_unidad_atencion FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_unidad_atencion FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_unidad_atencion TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_certificate_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_id_seq TO innovaedu;


--
-- Name: mdl_certificate; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate TO innovaedu;


--
-- Name: mdl_certificate_issues_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_issues_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_issues_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_issues_id_seq TO innovaedu;


--
-- Name: mdl_certificate_issues; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_issues FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_issues FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_issues TO innovaedu;


--
-- Name: mdl_grade_categories; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_categories FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_categories FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_categories TO innovaedu;


--
-- Name: mdl_grade_grades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_grades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_grades FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_grades TO innovaedu;


--
-- Name: mdl_grade_items; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_items FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_items FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_items TO innovaedu;


SET search_path = calificaciones, pg_catalog;

--
-- Name: v_calificaciones_actual; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_calificaciones_actual FROM PUBLIC;
REVOKE ALL ON TABLE v_calificaciones_actual FROM innovaedu;
GRANT ALL ON TABLE v_calificaciones_actual TO innovaedu;


--
-- Name: v_calificaciones_moduni; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_calificaciones_moduni FROM PUBLIC;
REVOKE ALL ON TABLE v_calificaciones_moduni FROM innovaedu;
GRANT ALL ON TABLE v_calificaciones_moduni TO innovaedu;


--
-- Name: v_datos_generales; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_datos_generales FROM PUBLIC;
REVOKE ALL ON TABLE v_datos_generales FROM innovaedu;
GRANT ALL ON TABLE v_datos_generales TO innovaedu;


--
-- Name: v_repo_his_act; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_repo_his_act FROM PUBLIC;
REVOKE ALL ON TABLE v_repo_his_act FROM innovaedu;
GRANT ALL ON TABLE v_repo_his_act TO innovaedu;


--
-- Name: v_reportegralcal_hist; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_reportegralcal_hist FROM PUBLIC;
REVOKE ALL ON TABLE v_reportegralcal_hist FROM innovaedu;
GRANT ALL ON TABLE v_reportegralcal_hist TO innovaedu;


--
-- Name: v_reportegralcursos_hist; Type: ACL; Schema: calificaciones; Owner: innovaedu
--

REVOKE ALL ON TABLE v_reportegralcursos_hist FROM PUBLIC;
REVOKE ALL ON TABLE v_reportegralcursos_hist FROM innovaedu;
GRANT ALL ON TABLE v_reportegralcursos_hist TO innovaedu;


SET search_path = cert, pg_catalog;

--
-- Name: cert.ssc_cert_certificate_fuente_id_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE "cert.ssc_cert_certificate_fuente_id_seq" FROM PUBLIC;
REVOKE ALL ON SEQUENCE "cert.ssc_cert_certificate_fuente_id_seq" FROM innovaedu;
GRANT ALL ON SEQUENCE "cert.ssc_cert_certificate_fuente_id_seq" TO innovaedu;


--
-- Name: mdl_certificadostot; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificadostot FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificadostot FROM innovaedu;
GRANT ALL ON TABLE mdl_certificadostot TO innovaedu;


--
-- Name: mdl_certificate_cargo; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_cargo FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_cargo FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_cargo TO innovaedu;


--
-- Name: mdl_certificate_cargo_id_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_cargo_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_cargo_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_cargo_id_seq TO innovaedu;


--
-- Name: mdl_certificate_firmas_id_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_firmas_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_firmas_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_firmas_id_seq TO innovaedu;


--
-- Name: mdl_certificate_firmas; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_firmas FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_firmas FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_firmas TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_certificate_issues_tut_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_issues_tut_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_issues_tut_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_issues_tut_id_seq TO innovaedu;


SET search_path = cert, pg_catalog;

--
-- Name: mdl_certificate_issues_tut; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_issues_tut FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_issues_tut FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_issues_tut TO innovaedu;


--
-- Name: mdl_certificate_tutores; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_tutores FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_tutores FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_tutores TO innovaedu;


--
-- Name: mdl_certificate_tutores_id_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_tutores_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_tutores_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_tutores_id_seq TO innovaedu;


--
-- Name: ssc_cat_cargo_cve_cargo_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_cat_cargo_cve_cargo_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_cat_cargo_cve_cargo_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_cat_cargo_cve_cargo_seq TO innovaedu;


--
-- Name: ssc_cat_cargo; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cat_cargo FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cat_cargo FROM innovaedu;
GRANT ALL ON TABLE ssc_cat_cargo TO innovaedu;


--
-- Name: ssc_cat_firma_cve_firma_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_cat_firma_cve_firma_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_cat_firma_cve_firma_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_cat_firma_cve_firma_seq TO innovaedu;


--
-- Name: ssc_cat_firma; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cat_firma FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cat_firma FROM innovaedu;
GRANT ALL ON TABLE ssc_cat_firma TO innovaedu;


--
-- Name: ssc_cat_formato_cve_formato_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_cat_formato_cve_formato_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_cat_formato_cve_formato_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_cat_formato_cve_formato_seq TO innovaedu;


--
-- Name: ssc_cat_formato; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cat_formato FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cat_formato FROM innovaedu;
GRANT ALL ON TABLE ssc_cat_formato TO innovaedu;


--
-- Name: ssc_cat_tipo_elemento_cve_tipo_elemento_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_cat_tipo_elemento_cve_tipo_elemento_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_cat_tipo_elemento_cve_tipo_elemento_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_cat_tipo_elemento_cve_tipo_elemento_seq TO innovaedu;


--
-- Name: ssc_cat_tipo_elemento; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cat_tipo_elemento FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cat_tipo_elemento FROM innovaedu;
GRANT ALL ON TABLE ssc_cat_tipo_elemento TO innovaedu;


--
-- Name: ssc_cert_certificate_cve; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cert_certificate_cve FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cert_certificate_cve FROM innovaedu;
GRANT ALL ON TABLE ssc_cert_certificate_cve TO innovaedu;


--
-- Name: ssc_cert_certificate_fuente; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cert_certificate_fuente FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cert_certificate_fuente FROM innovaedu;
GRANT ALL ON TABLE ssc_cert_certificate_fuente TO innovaedu;


--
-- Name: ssc_cert_certificate_parrafos; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cert_certificate_parrafos FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cert_certificate_parrafos FROM innovaedu;
GRANT ALL ON TABLE ssc_cert_certificate_parrafos TO innovaedu;


--
-- Name: ssc_cert_issues_bitacora_cve_issues_bitacora_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_cert_issues_bitacora_cve_issues_bitacora_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_cert_issues_bitacora_cve_issues_bitacora_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_cert_issues_bitacora_cve_issues_bitacora_seq TO innovaedu;


--
-- Name: ssc_cert_issues_bitacora; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_cert_issues_bitacora FROM PUBLIC;
REVOKE ALL ON TABLE ssc_cert_issues_bitacora FROM innovaedu;
GRANT ALL ON TABLE ssc_cert_issues_bitacora TO innovaedu;


--
-- Name: ssc_tab_cert_firmas_cve_cert_config_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_cert_firmas_cve_cert_config_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_cert_firmas_cve_cert_config_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_cert_firmas_cve_cert_config_seq TO innovaedu;


--
-- Name: ssc_tab_cert_firmas; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_tab_cert_firmas FROM PUBLIC;
REVOKE ALL ON TABLE ssc_tab_cert_firmas FROM innovaedu;
GRANT ALL ON TABLE ssc_tab_cert_firmas TO innovaedu;


--
-- Name: ssc_tab_cert_issues_conf; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_tab_cert_issues_conf FROM PUBLIC;
REVOKE ALL ON TABLE ssc_tab_cert_issues_conf FROM innovaedu;
GRANT ALL ON TABLE ssc_tab_cert_issues_conf TO innovaedu;


--
-- Name: ssc_tab_certificate_config_cve_cert_config_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_certificate_config_cve_cert_config_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_certificate_config_cve_cert_config_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_certificate_config_cve_cert_config_seq TO innovaedu;


--
-- Name: ssc_tab_certificate_config; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_tab_certificate_config FROM PUBLIC;
REVOKE ALL ON TABLE ssc_tab_certificate_config FROM innovaedu;
GRANT ALL ON TABLE ssc_tab_certificate_config TO innovaedu;


--
-- Name: ssc_tab_format_elem_cve_cert_config_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_cert_config_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_cert_config_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_format_elem_cve_cert_config_seq TO innovaedu;


--
-- Name: ssc_tab_format_elem_cve_format_elem_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_format_elem_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_format_elem_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_format_elem_cve_format_elem_seq TO innovaedu;


--
-- Name: ssc_tab_format_elem_cve_tipo_elemento_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_tipo_elemento_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_format_elem_cve_tipo_elemento_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_format_elem_cve_tipo_elemento_seq TO innovaedu;


--
-- Name: ssc_tab_format_elem; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_tab_format_elem FROM PUBLIC;
REVOKE ALL ON TABLE ssc_tab_format_elem FROM innovaedu;
GRANT ALL ON TABLE ssc_tab_format_elem TO innovaedu;


--
-- Name: ssc_tab_liberacion_cve_cert_liberacion_seq; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssc_tab_liberacion_cve_cert_liberacion_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssc_tab_liberacion_cve_cert_liberacion_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssc_tab_liberacion_cve_cert_liberacion_seq TO innovaedu;


--
-- Name: ssc_tab_liberacion; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE ssc_tab_liberacion FROM PUBLIC;
REVOKE ALL ON TABLE ssc_tab_liberacion FROM innovaedu;
GRANT ALL ON TABLE ssc_tab_liberacion TO innovaedu;


--
-- Name: v_certificado_gestion; Type: ACL; Schema: cert; Owner: innovaedu
--

REVOKE ALL ON TABLE v_certificado_gestion FROM PUBLIC;
REVOKE ALL ON TABLE v_certificado_gestion FROM innovaedu;
GRANT ALL ON TABLE v_certificado_gestion TO innovaedu;


SET search_path = departments, pg_catalog;

--
-- Name: ssd_cat_tipo_adscripcion; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssd_cat_tipo_adscripcion FROM PUBLIC;
REVOKE ALL ON TABLE ssd_cat_tipo_adscripcion FROM innovaedu;
GRANT ALL ON TABLE ssd_cat_tipo_adscripcion TO innovaedu;


--
-- Name: ssd_cat_tipo_adscripcion_id_seq; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssd_cat_tipo_adscripcion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssd_cat_tipo_adscripcion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssd_cat_tipo_adscripcion_id_seq TO innovaedu;


--
-- Name: ssv_deptoPadre; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE "ssv_deptoPadre" FROM PUBLIC;
REVOKE ALL ON TABLE "ssv_deptoPadre" FROM innovaedu;
GRANT ALL ON TABLE "ssv_deptoPadre" TO innovaedu;


--
-- Name: ssv_rep_general; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssv_rep_general FROM PUBLIC;
REVOKE ALL ON TABLE ssv_rep_general FROM innovaedu;
GRANT ALL ON TABLE ssv_rep_general TO innovaedu;


--
-- Name: ssv_rep_general_2; Type: ACL; Schema: departments; Owner: innovaedu
--

REVOKE ALL ON TABLE ssv_rep_general_2 FROM PUBLIC;
REVOKE ALL ON TABLE ssv_rep_general_2 FROM innovaedu;
GRANT ALL ON TABLE ssv_rep_general_2 TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_course_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_config FROM innovaedu;
GRANT ALL ON TABLE mdl_course_config TO innovaedu;


--
-- Name: sied_ssg_sq_preregistro; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sied_ssg_sq_preregistro FROM PUBLIC;
REVOKE ALL ON SEQUENCE sied_ssg_sq_preregistro FROM innovaedu;
GRANT ALL ON SEQUENCE sied_ssg_sq_preregistro TO innovaedu;


SET search_path = gestion, pg_catalog;

--
-- Name: sgp_tab_preregistro_al; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON TABLE sgp_tab_preregistro_al FROM PUBLIC;
REVOKE ALL ON TABLE sgp_tab_preregistro_al FROM innovaedu;
GRANT ALL ON TABLE sgp_tab_preregistro_al TO innovaedu;


--
-- Name: sgp_tab_usuario; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON TABLE sgp_tab_usuario FROM PUBLIC;
REVOKE ALL ON TABLE sgp_tab_usuario FROM innovaedu;
GRANT ALL ON TABLE sgp_tab_usuario TO innovaedu;


SET search_path = nomina, pg_catalog;

--
-- Name: ssn_categoria; Type: ACL; Schema: nomina; Owner: innovaedu
--

REVOKE ALL ON TABLE ssn_categoria FROM PUBLIC;
REVOKE ALL ON TABLE ssn_categoria FROM innovaedu;
GRANT ALL ON TABLE ssn_categoria TO innovaedu;


--
-- Name: ssn_tipo_catgoria; Type: ACL; Schema: nomina; Owner: innovaedu
--

REVOKE ALL ON TABLE ssn_tipo_catgoria FROM PUBLIC;
REVOKE ALL ON TABLE ssn_tipo_catgoria FROM innovaedu;
GRANT ALL ON TABLE ssn_tipo_catgoria TO innovaedu;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: ssp_tipo_roles; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON TABLE ssp_tipo_roles FROM PUBLIC;
REVOKE ALL ON TABLE ssp_tipo_roles FROM innovaedu;
GRANT ALL ON TABLE ssp_tipo_roles TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_userexp_id_exp_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_userexp_id_exp_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_userexp_id_exp_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_userexp_id_exp_seq TO innovaedu;


--
-- Name: mdl_usertutor_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_usertutor_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_usertutor_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_usertutor_id_seq TO innovaedu;


SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_userexp; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_userexp FROM PUBLIC;
REVOKE ALL ON TABLE mdl_userexp FROM innovaedu;
GRANT ALL ON TABLE mdl_userexp TO innovaedu;


--
-- Name: mdl_usertutor; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_usertutor FROM PUBLIC;
REVOKE ALL ON TABLE mdl_usertutor FROM innovaedu;
GRANT ALL ON TABLE mdl_usertutor TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_user_lastaccess_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_lastaccess_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_lastaccess_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_lastaccess_id_seq TO innovaedu;


--
-- Name: mdl_user_lastaccess; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_lastaccess FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_lastaccess FROM innovaedu;
GRANT ALL ON TABLE mdl_user_lastaccess TO innovaedu;


--
-- Name: mdl_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_log_id_seq TO innovaedu;


--
-- Name: mdl_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_log FROM PUBLIC;
REVOKE ALL ON TABLE mdl_log FROM innovaedu;
GRANT ALL ON TABLE mdl_log TO innovaedu;


--
-- Name: mdl_course_categories_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_categories_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_categories_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_categories_id_seq TO innovaedu;


--
-- Name: mdl_course_categories; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_categories FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_categories FROM innovaedu;
GRANT ALL ON TABLE mdl_course_categories TO innovaedu;


--
-- Name: sied_ssp_seq_menu; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sied_ssp_seq_menu FROM PUBLIC;
REVOKE ALL ON SEQUENCE sied_ssp_seq_menu FROM innovaedu;
GRANT ALL ON SEQUENCE sied_ssp_seq_menu TO innovaedu;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: ssp_cat_menu; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON TABLE ssp_cat_menu FROM PUBLIC;
REVOKE ALL ON TABLE ssp_cat_menu FROM innovaedu;
GRANT ALL ON TABLE ssp_cat_menu TO innovaedu;


--
-- Name: ssp_tab_usuario_menu; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON TABLE ssp_tab_usuario_menu FROM PUBLIC;
REVOKE ALL ON TABLE ssp_tab_usuario_menu FROM innovaedu;
GRANT ALL ON TABLE ssp_tab_usuario_menu TO innovaedu;


SET search_path = externo, pg_catalog;

--
-- Name: ssx_acceso_del; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_acceso_del FROM PUBLIC;
REVOKE ALL ON TABLE ssx_acceso_del FROM innovaedu;
GRANT ALL ON TABLE ssx_acceso_del TO innovaedu;


--
-- Name: ssx_acceso_del_id_acceso_del_seq; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssx_acceso_del_id_acceso_del_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssx_acceso_del_id_acceso_del_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssx_acceso_del_id_acceso_del_seq TO innovaedu;


--
-- Name: ssx_acceso_modulo; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_acceso_modulo FROM PUBLIC;
REVOKE ALL ON TABLE ssx_acceso_modulo FROM innovaedu;
GRANT ALL ON TABLE ssx_acceso_modulo TO innovaedu;


--
-- Name: ssx_acceso_modulo_cve_acceso_modulo_seq; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssx_acceso_modulo_cve_acceso_modulo_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssx_acceso_modulo_cve_acceso_modulo_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssx_acceso_modulo_cve_acceso_modulo_seq TO innovaedu;


--
-- Name: ssx_modulo; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_modulo FROM PUBLIC;
REVOKE ALL ON TABLE ssx_modulo FROM innovaedu;
GRANT ALL ON TABLE ssx_modulo TO innovaedu;


--
-- Name: ssx_modulo_cve_modulo_seq; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssx_modulo_cve_modulo_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssx_modulo_cve_modulo_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssx_modulo_cve_modulo_seq TO innovaedu;


--
-- Name: ssx_rol_admin; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_rol_admin FROM PUBLIC;
REVOKE ALL ON TABLE ssx_rol_admin FROM innovaedu;
GRANT ALL ON TABLE ssx_rol_admin TO innovaedu;


--
-- Name: ssx_tipo_medico; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_tipo_medico FROM PUBLIC;
REVOKE ALL ON TABLE ssx_tipo_medico FROM innovaedu;
GRANT ALL ON TABLE ssx_tipo_medico TO innovaedu;


--
-- Name: ssx_usuario; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON TABLE ssx_usuario FROM PUBLIC;
REVOKE ALL ON TABLE ssx_usuario FROM innovaedu;
GRANT ALL ON TABLE ssx_usuario TO innovaedu;


--
-- Name: ssx_usuario_cve_usuario_seq; Type: ACL; Schema: externo; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssx_usuario_cve_usuario_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssx_usuario_cve_usuario_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssx_usuario_cve_usuario_seq TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_modalidad; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_modalidad FROM PUBLIC;
REVOKE ALL ON TABLE mdl_modalidad FROM innovaedu;
GRANT ALL ON TABLE mdl_modalidad TO innovaedu;


--
-- Name: sied_mdl_seq_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sied_mdl_seq_log FROM PUBLIC;
REVOKE ALL ON SEQUENCE sied_mdl_seq_log FROM innovaedu;
GRANT ALL ON SEQUENCE sied_mdl_seq_log TO innovaedu;


--
-- Name: sied_ssg_sq_medio; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sied_ssg_sq_medio FROM PUBLIC;
REVOKE ALL ON SEQUENCE sied_ssg_sq_medio FROM innovaedu;
GRANT ALL ON SEQUENCE sied_ssg_sq_medio TO innovaedu;


SET search_path = gestion, pg_catalog;

--
-- Name: sgp_cat_medio_entero; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON TABLE sgp_cat_medio_entero FROM PUBLIC;
REVOKE ALL ON TABLE sgp_cat_medio_entero FROM innovaedu;
GRANT ALL ON TABLE sgp_cat_medio_entero TO innovaedu;


--
-- Name: sgp_tab_cuodel_id_seq; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sgp_tab_cuodel_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE sgp_tab_cuodel_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE sgp_tab_cuodel_id_seq TO innovaedu;


--
-- Name: sgp_tab_cuodel; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON TABLE sgp_tab_cuodel FROM PUBLIC;
REVOKE ALL ON TABLE sgp_tab_cuodel FROM innovaedu;
GRANT ALL ON TABLE sgp_tab_cuodel TO innovaedu;


--
-- Name: v_ssp_bitacora; Type: ACL; Schema: gestion; Owner: innovaedu
--

REVOKE ALL ON TABLE v_ssp_bitacora FROM PUBLIC;
REVOKE ALL ON TABLE v_ssp_bitacora FROM innovaedu;
GRANT ALL ON TABLE v_ssp_bitacora TO innovaedu;


SET search_path = mesa_ayuda, pg_catalog;

--
-- Name: medio_atencion_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE medio_atencion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE medio_atencion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE medio_atencion_id_seq TO innovaedu;


--
-- Name: cat_medio; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_medio FROM PUBLIC;
REVOKE ALL ON TABLE cat_medio FROM innovaedu;
GRANT ALL ON TABLE cat_medio TO innovaedu;


--
-- Name: navegador_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE navegador_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE navegador_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE navegador_id_seq TO innovaedu;


--
-- Name: cat_navegador; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_navegador FROM PUBLIC;
REVOKE ALL ON TABLE cat_navegador FROM innovaedu;
GRANT ALL ON TABLE cat_navegador TO innovaedu;


--
-- Name: prioridad_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE prioridad_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE prioridad_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE prioridad_id_seq TO innovaedu;


--
-- Name: cat_prioridad; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_prioridad FROM PUBLIC;
REVOKE ALL ON TABLE cat_prioridad FROM innovaedu;
GRANT ALL ON TABLE cat_prioridad TO innovaedu;


--
-- Name: tipo_incidencia_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE tipo_incidencia_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE tipo_incidencia_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE tipo_incidencia_id_seq TO innovaedu;


--
-- Name: cat_tipoincidencia; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_tipoincidencia FROM PUBLIC;
REVOKE ALL ON TABLE cat_tipoincidencia FROM innovaedu;
GRANT ALL ON TABLE cat_tipoincidencia TO innovaedu;


--
-- Name: tipo_incidenciae_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE tipo_incidenciae_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE tipo_incidenciae_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE tipo_incidenciae_id_seq TO innovaedu;


--
-- Name: cat_tipoincidencia_esp; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_tipoincidencia_esp FROM PUBLIC;
REVOKE ALL ON TABLE cat_tipoincidencia_esp FROM innovaedu;
GRANT ALL ON TABLE cat_tipoincidencia_esp TO innovaedu;


--
-- Name: usuarios_can_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE usuarios_can_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE usuarios_can_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE usuarios_can_id_seq TO innovaedu;


--
-- Name: cat_usuariocan; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE cat_usuariocan FROM PUBLIC;
REVOKE ALL ON TABLE cat_usuariocan FROM innovaedu;
GRANT ALL ON TABLE cat_usuariocan TO innovaedu;


--
-- Name: estatus_incidencia_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE estatus_incidencia_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE estatus_incidencia_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE estatus_incidencia_id_seq TO innovaedu;


--
-- Name: estatus; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE estatus FROM PUBLIC;
REVOKE ALL ON TABLE estatus FROM innovaedu;
GRANT ALL ON TABLE estatus TO innovaedu;


--
-- Name: incidencias_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE incidencias_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE incidencias_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE incidencias_id_seq TO innovaedu;


--
-- Name: incidencias; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE incidencias FROM PUBLIC;
REVOKE ALL ON TABLE incidencias FROM innovaedu;
GRANT ALL ON TABLE incidencias TO innovaedu;


--
-- Name: incidencias_esp_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE incidencias_esp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE incidencias_esp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE incidencias_esp_id_seq TO innovaedu;


--
-- Name: incidencias_can; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE incidencias_can FROM PUBLIC;
REVOKE ALL ON TABLE incidencias_can FROM innovaedu;
GRANT ALL ON TABLE incidencias_can TO innovaedu;


--
-- Name: incidencias_resp_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE incidencias_resp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE incidencias_resp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE incidencias_resp_id_seq TO innovaedu;


--
-- Name: incidencias_resp; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE incidencias_resp FROM PUBLIC;
REVOKE ALL ON TABLE incidencias_resp FROM innovaedu;
GRANT ALL ON TABLE incidencias_resp TO innovaedu;


--
-- Name: log_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE log_id_seq TO innovaedu;


--
-- Name: log; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE log FROM PUBLIC;
REVOKE ALL ON TABLE log FROM innovaedu;
GRANT ALL ON TABLE log TO innovaedu;


--
-- Name: tipo_resp_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE tipo_resp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE tipo_resp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE tipo_resp_id_seq TO innovaedu;


--
-- Name: tipo_resp; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE tipo_resp FROM PUBLIC;
REVOKE ALL ON TABLE tipo_resp FROM innovaedu;
GRANT ALL ON TABLE tipo_resp TO innovaedu;


--
-- Name: usuarios_esp_id_seq; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE usuarios_esp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE usuarios_esp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE usuarios_esp_id_seq TO innovaedu;


--
-- Name: usuarios_esp; Type: ACL; Schema: mesa_ayuda; Owner: innovaedu
--

REVOKE ALL ON TABLE usuarios_esp FROM PUBLIC;
REVOKE ALL ON TABLE usuarios_esp FROM innovaedu;
GRANT ALL ON TABLE usuarios_esp TO innovaedu;


SET search_path = nomina, pg_catalog;

--
-- Name: ssn_categoria_cve_categoria_seq; Type: ACL; Schema: nomina; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssn_categoria_cve_categoria_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssn_categoria_cve_categoria_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssn_categoria_cve_categoria_seq TO innovaedu;


--
-- Name: ssn_tipo_catgoria_cve_tipo_categoria_seq; Type: ACL; Schema: nomina; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE ssn_tipo_catgoria_cve_tipo_categoria_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE ssn_tipo_catgoria_cve_tipo_categoria_seq FROM innovaedu;
GRANT ALL ON SEQUENCE ssn_tipo_catgoria_cve_tipo_categoria_seq TO innovaedu;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: mdl_category_id_seq; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_category_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_category_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_category_id_seq TO innovaedu;


--
-- Name: mdl_subcategory_id_seq; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_subcategory_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_subcategory_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_subcategory_id_seq TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: mdl_accion; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_accion FROM PUBLIC;
REVOKE ALL ON TABLE mdl_accion FROM innovaedu;
GRANT ALL ON TABLE mdl_accion TO innovaedu;


--
-- Name: mdl_log_sied; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_log_sied FROM PUBLIC;
REVOKE ALL ON TABLE mdl_log_sied FROM innovaedu;
GRANT ALL ON TABLE mdl_log_sied TO innovaedu;


SET search_path = parametrizacion, pg_catalog;

--
-- Name: v_ssp_bitacora; Type: ACL; Schema: parametrizacion; Owner: innovaedu
--

REVOKE ALL ON TABLE v_ssp_bitacora FROM PUBLIC;
REVOKE ALL ON TABLE v_ssp_bitacora FROM innovaedu;
GRANT ALL ON TABLE v_ssp_bitacora TO innovaedu;


SET search_path = public, pg_catalog;

--
-- Name: adodb_logsql_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE adodb_logsql_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE adodb_logsql_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE adodb_logsql_id_seq TO innovaedu;


--
-- Name: adodb_logsql; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE adodb_logsql FROM PUBLIC;
REVOKE ALL ON TABLE adodb_logsql FROM innovaedu;
GRANT ALL ON TABLE adodb_logsql TO innovaedu;


--
-- Name: appmanager; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE appmanager FROM PUBLIC;
REVOKE ALL ON TABLE appmanager FROM postgres;
GRANT ALL ON TABLE appmanager TO postgres;
GRANT ALL ON TABLE appmanager TO PUBLIC;


--
-- Name: nom_clvdepartemento; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE nom_clvdepartemento FROM PUBLIC;
REVOKE ALL ON TABLE nom_clvdepartemento FROM innovaedu;
GRANT ALL ON TABLE nom_clvdepartemento TO innovaedu;


--
-- Name: clvdepartemento_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE clvdepartemento_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE clvdepartemento_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE clvdepartemento_id_seq TO innovaedu;


--
-- Name: nom_delncat; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE nom_delncat FROM PUBLIC;
REVOKE ALL ON TABLE nom_delncat FROM innovaedu;
GRANT ALL ON TABLE nom_delncat TO innovaedu;


--
-- Name: delncat_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE delncat_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE delncat_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE delncat_id_seq TO innovaedu;


--
-- Name: folder; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE folder FROM PUBLIC;
REVOKE ALL ON TABLE folder FROM innovaedu;
GRANT ALL ON TABLE folder TO innovaedu;


--
-- Name: imscp; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE imscp FROM PUBLIC;
REVOKE ALL ON TABLE imscp FROM innovaedu;
GRANT ALL ON TABLE imscp TO innovaedu;


--
-- Name: mdl_accion_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_accion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_accion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_accion_id_seq TO innovaedu;


--
-- Name: mdl_assign; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign FROM innovaedu;
GRANT ALL ON TABLE mdl_assign TO innovaedu;


--
-- Name: mdl_assign_grades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign_grades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign_grades FROM innovaedu;
GRANT ALL ON TABLE mdl_assign_grades TO innovaedu;


--
-- Name: mdl_assign_grades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_grades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_grades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_grades_id_seq TO innovaedu;


--
-- Name: mdl_assign_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_id_seq TO innovaedu;


--
-- Name: mdl_assign_plugin_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign_plugin_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign_plugin_config FROM innovaedu;
GRANT ALL ON TABLE mdl_assign_plugin_config TO innovaedu;


--
-- Name: mdl_assign_plugin_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_plugin_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_plugin_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_plugin_config_id_seq TO innovaedu;


--
-- Name: mdl_assign_submission; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign_submission FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign_submission FROM innovaedu;
GRANT ALL ON TABLE mdl_assign_submission TO innovaedu;


--
-- Name: mdl_assign_submission_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_submission_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_submission_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_submission_id_seq TO innovaedu;


--
-- Name: mdl_assign_user_flags; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign_user_flags FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign_user_flags FROM innovaedu;
GRANT ALL ON TABLE mdl_assign_user_flags TO innovaedu;


--
-- Name: mdl_assign_user_flags_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_user_flags_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_user_flags_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_user_flags_id_seq TO innovaedu;


--
-- Name: mdl_assign_user_mapping; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assign_user_mapping FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assign_user_mapping FROM innovaedu;
GRANT ALL ON TABLE mdl_assign_user_mapping TO innovaedu;


--
-- Name: mdl_assign_user_mapping_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assign_user_mapping_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assign_user_mapping_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assign_user_mapping_id_seq TO innovaedu;


--
-- Name: mdl_assignfeedback_comments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignfeedback_comments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignfeedback_comments FROM innovaedu;
GRANT ALL ON TABLE mdl_assignfeedback_comments TO innovaedu;


--
-- Name: mdl_assignfeedback_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignfeedback_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignfeedback_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignfeedback_comments_id_seq TO innovaedu;


--
-- Name: mdl_assignfeedback_file; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignfeedback_file FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignfeedback_file FROM innovaedu;
GRANT ALL ON TABLE mdl_assignfeedback_file TO innovaedu;


--
-- Name: mdl_assignfeedback_file_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignfeedback_file_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignfeedback_file_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignfeedback_file_id_seq TO innovaedu;


--
-- Name: mdl_assignment_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignment_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignment_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignment_id_seq TO innovaedu;


--
-- Name: mdl_assignment; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignment FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignment FROM innovaedu;
GRANT ALL ON TABLE mdl_assignment TO innovaedu;


--
-- Name: mdl_assignment_submissions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignment_submissions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignment_submissions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignment_submissions_id_seq TO innovaedu;


--
-- Name: mdl_assignment_submissions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignment_submissions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignment_submissions FROM innovaedu;
GRANT ALL ON TABLE mdl_assignment_submissions TO innovaedu;


--
-- Name: mdl_assignsubmission_file; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignsubmission_file FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignsubmission_file FROM innovaedu;
GRANT ALL ON TABLE mdl_assignsubmission_file TO innovaedu;


--
-- Name: mdl_assignsubmission_file_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignsubmission_file_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignsubmission_file_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignsubmission_file_id_seq TO innovaedu;


--
-- Name: mdl_assignsubmission_onlinetext; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_assignsubmission_onlinetext FROM PUBLIC;
REVOKE ALL ON TABLE mdl_assignsubmission_onlinetext FROM innovaedu;
GRANT ALL ON TABLE mdl_assignsubmission_onlinetext TO innovaedu;


--
-- Name: mdl_assignsubmission_onlinetext_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_assignsubmission_onlinetext_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_assignsubmission_onlinetext_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_assignsubmission_onlinetext_id_seq TO innovaedu;


--
-- Name: mdl_backup_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_config_id_seq TO innovaedu;


--
-- Name: mdl_backup_controllers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_backup_controllers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_backup_controllers FROM innovaedu;
GRANT ALL ON TABLE mdl_backup_controllers TO innovaedu;


--
-- Name: mdl_backup_controllers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_controllers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_controllers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_controllers_id_seq TO innovaedu;


--
-- Name: mdl_backup_courses_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_courses_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_courses_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_courses_id_seq TO innovaedu;


--
-- Name: mdl_backup_courses; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_backup_courses FROM PUBLIC;
REVOKE ALL ON TABLE mdl_backup_courses FROM innovaedu;
GRANT ALL ON TABLE mdl_backup_courses TO innovaedu;


--
-- Name: mdl_backup_files_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_files_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_files_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_files_id_seq TO innovaedu;


--
-- Name: mdl_backup_files_template; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_backup_files_template FROM PUBLIC;
REVOKE ALL ON TABLE mdl_backup_files_template FROM innovaedu;
GRANT ALL ON TABLE mdl_backup_files_template TO innovaedu;


--
-- Name: mdl_backup_files_template_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_files_template_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_files_template_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_files_template_id_seq TO innovaedu;


--
-- Name: mdl_backup_ids_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_ids_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_ids_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_ids_id_seq TO innovaedu;


--
-- Name: mdl_backup_ids_template; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_backup_ids_template FROM PUBLIC;
REVOKE ALL ON TABLE mdl_backup_ids_template FROM innovaedu;
GRANT ALL ON TABLE mdl_backup_ids_template TO innovaedu;


--
-- Name: mdl_backup_ids_template_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_ids_template_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_ids_template_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_ids_template_id_seq TO innovaedu;


--
-- Name: mdl_backup_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_log_id_seq TO innovaedu;


--
-- Name: mdl_backup_logs; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_backup_logs FROM PUBLIC;
REVOKE ALL ON TABLE mdl_backup_logs FROM innovaedu;
GRANT ALL ON TABLE mdl_backup_logs TO innovaedu;


--
-- Name: mdl_backup_logs_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_backup_logs_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_backup_logs_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_backup_logs_id_seq TO innovaedu;


--
-- Name: mdl_badge; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge FROM innovaedu;
GRANT ALL ON TABLE mdl_badge TO innovaedu;


--
-- Name: mdl_badge_backpack; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_backpack FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_backpack FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_backpack TO innovaedu;


--
-- Name: mdl_badge_backpack_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_backpack_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_backpack_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_backpack_id_seq TO innovaedu;


--
-- Name: mdl_badge_criteria; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_criteria FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_criteria FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_criteria TO innovaedu;


--
-- Name: mdl_badge_criteria_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_criteria_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_criteria_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_criteria_id_seq TO innovaedu;


--
-- Name: mdl_badge_criteria_met; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_criteria_met FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_criteria_met FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_criteria_met TO innovaedu;


--
-- Name: mdl_badge_criteria_met_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_criteria_met_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_criteria_met_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_criteria_met_id_seq TO innovaedu;


--
-- Name: mdl_badge_criteria_param; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_criteria_param FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_criteria_param FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_criteria_param TO innovaedu;


--
-- Name: mdl_badge_criteria_param_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_criteria_param_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_criteria_param_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_criteria_param_id_seq TO innovaedu;


--
-- Name: mdl_badge_external; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_external FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_external FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_external TO innovaedu;


--
-- Name: mdl_badge_external_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_external_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_external_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_external_id_seq TO innovaedu;


--
-- Name: mdl_badge_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_id_seq TO innovaedu;


--
-- Name: mdl_badge_issued; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_issued FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_issued FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_issued TO innovaedu;


--
-- Name: mdl_badge_issued_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_issued_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_issued_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_issued_id_seq TO innovaedu;


--
-- Name: mdl_badge_manual_award; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_badge_manual_award FROM PUBLIC;
REVOKE ALL ON TABLE mdl_badge_manual_award FROM innovaedu;
GRANT ALL ON TABLE mdl_badge_manual_award TO innovaedu;


--
-- Name: mdl_badge_manual_award_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_badge_manual_award_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_badge_manual_award_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_badge_manual_award_id_seq TO innovaedu;


--
-- Name: mdl_block_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_id_seq TO innovaedu;


--
-- Name: mdl_block; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_block FROM PUBLIC;
REVOKE ALL ON TABLE mdl_block FROM innovaedu;
GRANT ALL ON TABLE mdl_block TO innovaedu;


--
-- Name: mdl_block_community; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_block_community FROM PUBLIC;
REVOKE ALL ON TABLE mdl_block_community FROM innovaedu;
GRANT ALL ON TABLE mdl_block_community TO innovaedu;


--
-- Name: mdl_block_community_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_community_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_community_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_community_id_seq TO innovaedu;


--
-- Name: mdl_block_instances_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_instances_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_instances_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_instances_id_seq TO innovaedu;


--
-- Name: mdl_block_instances; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_block_instances FROM PUBLIC;
REVOKE ALL ON TABLE mdl_block_instances FROM innovaedu;
GRANT ALL ON TABLE mdl_block_instances TO innovaedu;


--
-- Name: mdl_block_pinned_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_pinned_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_pinned_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_pinned_old_id_seq TO innovaedu;


--
-- Name: mdl_block_positions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_block_positions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_block_positions FROM innovaedu;
GRANT ALL ON TABLE mdl_block_positions TO innovaedu;


--
-- Name: mdl_block_positions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_positions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_positions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_positions_id_seq TO innovaedu;


--
-- Name: mdl_block_rss_client_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_rss_client_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_rss_client_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_rss_client_id_seq TO innovaedu;


--
-- Name: mdl_block_rss_client; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_block_rss_client FROM PUBLIC;
REVOKE ALL ON TABLE mdl_block_rss_client FROM innovaedu;
GRANT ALL ON TABLE mdl_block_rss_client TO innovaedu;


--
-- Name: mdl_block_search_documents_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_block_search_documents_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_block_search_documents_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_block_search_documents_id_seq TO innovaedu;


--
-- Name: mdl_blog_association; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_blog_association FROM PUBLIC;
REVOKE ALL ON TABLE mdl_blog_association FROM innovaedu;
GRANT ALL ON TABLE mdl_blog_association TO innovaedu;


--
-- Name: mdl_blog_association_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_blog_association_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_blog_association_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_blog_association_id_seq TO innovaedu;


--
-- Name: mdl_blog_external; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_blog_external FROM PUBLIC;
REVOKE ALL ON TABLE mdl_blog_external FROM innovaedu;
GRANT ALL ON TABLE mdl_blog_external TO innovaedu;


--
-- Name: mdl_blog_external_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_blog_external_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_blog_external_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_blog_external_id_seq TO innovaedu;


--
-- Name: mdl_blog_tag_instance_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_blog_tag_instance_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_blog_tag_instance_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_blog_tag_instance_id_seq TO innovaedu;


--
-- Name: mdl_book; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_book FROM PUBLIC;
REVOKE ALL ON TABLE mdl_book FROM innovaedu;
GRANT ALL ON TABLE mdl_book TO innovaedu;


--
-- Name: mdl_book_chapters; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_book_chapters FROM PUBLIC;
REVOKE ALL ON TABLE mdl_book_chapters FROM innovaedu;
GRANT ALL ON TABLE mdl_book_chapters TO innovaedu;


--
-- Name: mdl_book_chapters_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_book_chapters_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_book_chapters_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_book_chapters_id_seq TO innovaedu;


--
-- Name: mdl_book_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_book_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_book_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_book_id_seq TO innovaedu;


--
-- Name: mdl_cache_filters_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cache_filters_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cache_filters_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cache_filters_id_seq TO innovaedu;


--
-- Name: mdl_cache_filters; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cache_filters FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cache_filters FROM innovaedu;
GRANT ALL ON TABLE mdl_cache_filters TO innovaedu;


--
-- Name: mdl_cache_flags; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cache_flags FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cache_flags FROM innovaedu;
GRANT ALL ON TABLE mdl_cache_flags TO innovaedu;


--
-- Name: mdl_cache_flags_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cache_flags_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cache_flags_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cache_flags_id_seq TO innovaedu;


--
-- Name: mdl_cache_text_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cache_text_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cache_text_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cache_text_id_seq TO innovaedu;


--
-- Name: mdl_cache_text; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cache_text FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cache_text FROM innovaedu;
GRANT ALL ON TABLE mdl_cache_text TO innovaedu;


--
-- Name: mdl_calendary_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_calendary_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_calendary_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_calendary_id_seq TO innovaedu;


--
-- Name: mdl_calendary; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_calendary FROM PUBLIC;
REVOKE ALL ON TABLE mdl_calendary FROM innovaedu;
GRANT ALL ON TABLE mdl_calendary TO innovaedu;


--
-- Name: mdl_capabilities_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_capabilities_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_capabilities_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_capabilities_id_seq TO innovaedu;


--
-- Name: mdl_capabilities; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_capabilities FROM PUBLIC;
REVOKE ALL ON TABLE mdl_capabilities FROM innovaedu;
GRANT ALL ON TABLE mdl_capabilities TO innovaedu;


--
-- Name: mdl_cargo_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cargo_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cargo_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cargo_id_seq TO innovaedu;


--
-- Name: mdl_category_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_category_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_category_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_category_id_seq TO innovaedu;


--
-- Name: mdl_certificate_conf; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_conf FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_conf FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_conf TO innovaedu;


--
-- Name: mdl_certificate_firmas; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_certificate_firmas FROM PUBLIC;
REVOKE ALL ON TABLE mdl_certificate_firmas FROM innovaedu;
GRANT ALL ON TABLE mdl_certificate_firmas TO innovaedu;


--
-- Name: mdl_certificate_firmas_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_firmas_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_firmas_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_firmas_id_seq TO innovaedu;


--
-- Name: mdl_certificate_linked_modules_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_certificate_linked_modules_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_certificate_linked_modules_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_certificate_linked_modules_id_seq TO innovaedu;


--
-- Name: mdl_chat_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_chat_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_chat_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_chat_id_seq TO innovaedu;


--
-- Name: mdl_chat; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_chat FROM PUBLIC;
REVOKE ALL ON TABLE mdl_chat FROM innovaedu;
GRANT ALL ON TABLE mdl_chat TO innovaedu;


--
-- Name: mdl_chat_messages_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_chat_messages_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_chat_messages_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_chat_messages_id_seq TO innovaedu;


--
-- Name: mdl_chat_messages; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_chat_messages FROM PUBLIC;
REVOKE ALL ON TABLE mdl_chat_messages FROM innovaedu;
GRANT ALL ON TABLE mdl_chat_messages TO innovaedu;


--
-- Name: mdl_chat_messages_current; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_chat_messages_current FROM PUBLIC;
REVOKE ALL ON TABLE mdl_chat_messages_current FROM innovaedu;
GRANT ALL ON TABLE mdl_chat_messages_current TO innovaedu;


--
-- Name: mdl_chat_messages_current_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_chat_messages_current_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_chat_messages_current_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_chat_messages_current_id_seq TO innovaedu;


--
-- Name: mdl_chat_users_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_chat_users_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_chat_users_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_chat_users_id_seq TO innovaedu;


--
-- Name: mdl_chat_users; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_chat_users FROM PUBLIC;
REVOKE ALL ON TABLE mdl_chat_users FROM innovaedu;
GRANT ALL ON TABLE mdl_chat_users TO innovaedu;


--
-- Name: mdl_choice_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_choice_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_choice_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_choice_id_seq TO innovaedu;


--
-- Name: mdl_choice; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_choice FROM PUBLIC;
REVOKE ALL ON TABLE mdl_choice FROM innovaedu;
GRANT ALL ON TABLE mdl_choice TO innovaedu;


--
-- Name: mdl_choice_answers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_choice_answers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_choice_answers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_choice_answers_id_seq TO innovaedu;


--
-- Name: mdl_choice_answers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_choice_answers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_choice_answers FROM innovaedu;
GRANT ALL ON TABLE mdl_choice_answers TO innovaedu;


--
-- Name: mdl_choice_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_choice_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_choice_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_choice_options_id_seq TO innovaedu;


--
-- Name: mdl_choice_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_choice_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_choice_options FROM innovaedu;
GRANT ALL ON TABLE mdl_choice_options TO innovaedu;


--
-- Name: mdl_cohort; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cohort FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cohort FROM innovaedu;
GRANT ALL ON TABLE mdl_cohort TO innovaedu;


--
-- Name: mdl_cohort_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cohort_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cohort_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cohort_id_seq TO innovaedu;


--
-- Name: mdl_cohort_members; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cohort_members FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cohort_members FROM innovaedu;
GRANT ALL ON TABLE mdl_cohort_members TO innovaedu;


--
-- Name: mdl_cohort_members_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cohort_members_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cohort_members_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cohort_members_id_seq TO innovaedu;


--
-- Name: mdl_comments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_comments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_comments FROM innovaedu;
GRANT ALL ON TABLE mdl_comments TO innovaedu;


--
-- Name: mdl_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_comments_id_seq TO innovaedu;


--
-- Name: mdl_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_config_id_seq TO innovaedu;


--
-- Name: mdl_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_config FROM innovaedu;
GRANT ALL ON TABLE mdl_config TO innovaedu;


--
-- Name: mdl_config_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_config_log FROM PUBLIC;
REVOKE ALL ON TABLE mdl_config_log FROM innovaedu;
GRANT ALL ON TABLE mdl_config_log TO innovaedu;


--
-- Name: mdl_config_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_config_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_config_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_config_log_id_seq TO innovaedu;


--
-- Name: mdl_config_plugins_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_config_plugins_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_config_plugins_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_config_plugins_id_seq TO innovaedu;


--
-- Name: mdl_config_plugins; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_config_plugins FROM PUBLIC;
REVOKE ALL ON TABLE mdl_config_plugins FROM innovaedu;
GRANT ALL ON TABLE mdl_config_plugins TO innovaedu;


--
-- Name: mdl_context_rel_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_context_rel_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_context_rel_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_context_rel_id_seq TO innovaedu;


--
-- Name: mdl_context_temp; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_context_temp FROM PUBLIC;
REVOKE ALL ON TABLE mdl_context_temp FROM innovaedu;
GRANT ALL ON TABLE mdl_context_temp TO innovaedu;


--
-- Name: mdl_course_acces_close; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_acces_close FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_acces_close FROM innovaedu;
GRANT ALL ON TABLE mdl_course_acces_close TO innovaedu;


--
-- Name: mdl_course_allowed_modules_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_allowed_modules_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_allowed_modules_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_allowed_modules_id_seq TO innovaedu;


--
-- Name: mdl_course_completion_aggr_methd; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_completion_aggr_methd FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_completion_aggr_methd FROM innovaedu;
GRANT ALL ON TABLE mdl_course_completion_aggr_methd TO innovaedu;


--
-- Name: mdl_course_completion_aggr_methd_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_completion_aggr_methd_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_completion_aggr_methd_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_completion_aggr_methd_id_seq TO innovaedu;


--
-- Name: mdl_course_completion_crit_compl; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_completion_crit_compl FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_completion_crit_compl FROM innovaedu;
GRANT ALL ON TABLE mdl_course_completion_crit_compl TO innovaedu;


--
-- Name: mdl_course_completion_crit_compl_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_completion_crit_compl_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_completion_crit_compl_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_completion_crit_compl_id_seq TO innovaedu;


--
-- Name: mdl_course_completion_criteria; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_completion_criteria FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_completion_criteria FROM innovaedu;
GRANT ALL ON TABLE mdl_course_completion_criteria TO innovaedu;


--
-- Name: mdl_course_completion_criteria_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_completion_criteria_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_completion_criteria_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_completion_criteria_id_seq TO innovaedu;


--
-- Name: mdl_course_completions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_completions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_completions FROM innovaedu;
GRANT ALL ON TABLE mdl_course_completions TO innovaedu;


--
-- Name: mdl_course_completions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_completions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_completions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_completions_id_seq TO innovaedu;


--
-- Name: mdl_course_display_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_display_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_display_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_display_id_seq TO innovaedu;


--
-- Name: mdl_course_format_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_format_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_format_options FROM innovaedu;
GRANT ALL ON TABLE mdl_course_format_options TO innovaedu;


--
-- Name: mdl_course_format_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_format_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_format_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_format_options_id_seq TO innovaedu;


--
-- Name: mdl_course_meta_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_meta_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_meta_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_meta_id_seq TO innovaedu;


--
-- Name: mdl_course_modules_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_modules_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_modules_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_modules_id_seq TO innovaedu;


--
-- Name: mdl_course_modules; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_modules FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_modules FROM innovaedu;
GRANT ALL ON TABLE mdl_course_modules TO innovaedu;


--
-- Name: mdl_course_modules_avail_fields; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_modules_avail_fields FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_modules_avail_fields FROM innovaedu;
GRANT ALL ON TABLE mdl_course_modules_avail_fields TO innovaedu;


--
-- Name: mdl_course_modules_avail_fields_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_modules_avail_fields_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_modules_avail_fields_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_modules_avail_fields_id_seq TO innovaedu;


--
-- Name: mdl_course_modules_availability; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_modules_availability FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_modules_availability FROM innovaedu;
GRANT ALL ON TABLE mdl_course_modules_availability TO innovaedu;


--
-- Name: mdl_course_modules_availability_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_modules_availability_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_modules_availability_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_modules_availability_id_seq TO innovaedu;


--
-- Name: mdl_course_modules_completion; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_modules_completion FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_modules_completion FROM innovaedu;
GRANT ALL ON TABLE mdl_course_modules_completion TO innovaedu;


--
-- Name: mdl_course_modules_completion_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_modules_completion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_modules_completion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_modules_completion_id_seq TO innovaedu;


--
-- Name: mdl_course_published; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_published FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_published FROM innovaedu;
GRANT ALL ON TABLE mdl_course_published TO innovaedu;


--
-- Name: mdl_course_published_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_published_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_published_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_published_id_seq TO innovaedu;


--
-- Name: mdl_course_request_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_request_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_request_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_request_id_seq TO innovaedu;


--
-- Name: mdl_course_request; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_request FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_request FROM innovaedu;
GRANT ALL ON TABLE mdl_course_request TO innovaedu;


--
-- Name: mdl_course_sections_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_sections_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_sections_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_sections_id_seq TO innovaedu;


--
-- Name: mdl_course_sections; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_sections FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_sections FROM innovaedu;
GRANT ALL ON TABLE mdl_course_sections TO innovaedu;


--
-- Name: mdl_course_sections_avail_fields; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_sections_avail_fields FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_sections_avail_fields FROM innovaedu;
GRANT ALL ON TABLE mdl_course_sections_avail_fields TO innovaedu;


--
-- Name: mdl_course_sections_avail_fields_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_sections_avail_fields_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_sections_avail_fields_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_sections_avail_fields_id_seq TO innovaedu;


--
-- Name: mdl_course_sections_availability; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_course_sections_availability FROM PUBLIC;
REVOKE ALL ON TABLE mdl_course_sections_availability FROM innovaedu;
GRANT ALL ON TABLE mdl_course_sections_availability TO innovaedu;


--
-- Name: mdl_course_sections_availability_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_course_sections_availability_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_course_sections_availability_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_course_sections_availability_id_seq TO innovaedu;


--
-- Name: mdl_cuodel_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cuodel_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cuodel_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cuodel_id_seq TO innovaedu;


--
-- Name: mdl_data_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_id_seq TO innovaedu;


--
-- Name: mdl_data; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_data FROM PUBLIC;
REVOKE ALL ON TABLE mdl_data FROM innovaedu;
GRANT ALL ON TABLE mdl_data TO innovaedu;


--
-- Name: mdl_data_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_comments_id_seq TO innovaedu;


--
-- Name: mdl_data_content_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_content_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_content_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_content_id_seq TO innovaedu;


--
-- Name: mdl_data_content; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_data_content FROM PUBLIC;
REVOKE ALL ON TABLE mdl_data_content FROM innovaedu;
GRANT ALL ON TABLE mdl_data_content TO innovaedu;


--
-- Name: mdl_data_fields_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_fields_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_fields_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_fields_id_seq TO innovaedu;


--
-- Name: mdl_data_fields; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_data_fields FROM PUBLIC;
REVOKE ALL ON TABLE mdl_data_fields FROM innovaedu;
GRANT ALL ON TABLE mdl_data_fields TO innovaedu;


--
-- Name: mdl_data_ratings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_ratings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_ratings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_ratings_id_seq TO innovaedu;


--
-- Name: mdl_data_records_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_data_records_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_data_records_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_data_records_id_seq TO innovaedu;


--
-- Name: mdl_data_records; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_data_records FROM PUBLIC;
REVOKE ALL ON TABLE mdl_data_records FROM innovaedu;
GRANT ALL ON TABLE mdl_data_records TO innovaedu;


--
-- Name: mdl_detusertutor_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_detusertutor_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_detusertutor_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_detusertutor_id_seq TO innovaedu;


--
-- Name: mdl_dimdim_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_dimdim_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_dimdim_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_dimdim_id_seq TO innovaedu;


--
-- Name: mdl_dimdim; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_dimdim FROM PUBLIC;
REVOKE ALL ON TABLE mdl_dimdim FROM innovaedu;
GRANT ALL ON TABLE mdl_dimdim TO innovaedu;


--
-- Name: mdl_enrol; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_enrol FROM PUBLIC;
REVOKE ALL ON TABLE mdl_enrol FROM innovaedu;
GRANT ALL ON TABLE mdl_enrol TO innovaedu;


--
-- Name: mdl_enrol_authorize_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_enrol_authorize_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_enrol_authorize_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_enrol_authorize_id_seq TO innovaedu;


--
-- Name: mdl_enrol_authorize; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_enrol_authorize FROM PUBLIC;
REVOKE ALL ON TABLE mdl_enrol_authorize FROM innovaedu;
GRANT ALL ON TABLE mdl_enrol_authorize TO innovaedu;


--
-- Name: mdl_enrol_authorize_refunds_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_enrol_authorize_refunds_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_enrol_authorize_refunds_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_enrol_authorize_refunds_id_seq TO innovaedu;


--
-- Name: mdl_enrol_authorize_refunds; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_enrol_authorize_refunds FROM PUBLIC;
REVOKE ALL ON TABLE mdl_enrol_authorize_refunds FROM innovaedu;
GRANT ALL ON TABLE mdl_enrol_authorize_refunds TO innovaedu;


--
-- Name: mdl_enrol_flatfile; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_enrol_flatfile FROM PUBLIC;
REVOKE ALL ON TABLE mdl_enrol_flatfile FROM innovaedu;
GRANT ALL ON TABLE mdl_enrol_flatfile TO innovaedu;


--
-- Name: mdl_enrol_flatfile_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_enrol_flatfile_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_enrol_flatfile_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_enrol_flatfile_id_seq TO innovaedu;


--
-- Name: mdl_enrol_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_enrol_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_enrol_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_enrol_id_seq TO innovaedu;


--
-- Name: mdl_enrol_paypal_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_enrol_paypal_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_enrol_paypal_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_enrol_paypal_id_seq TO innovaedu;


--
-- Name: mdl_enrol_paypal; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_enrol_paypal FROM PUBLIC;
REVOKE ALL ON TABLE mdl_enrol_paypal FROM innovaedu;
GRANT ALL ON TABLE mdl_enrol_paypal TO innovaedu;


--
-- Name: mdl_entidades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_entidades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_entidades FROM innovaedu;
GRANT ALL ON TABLE mdl_entidades TO innovaedu;


--
-- Name: mdl_entidades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_entidades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_entidades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_entidades_id_seq TO innovaedu;


--
-- Name: mdl_evatutor_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_evatutor_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_evatutor_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_evatutor_id_seq TO innovaedu;


--
-- Name: mdl_event_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_event_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_event_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_event_id_seq TO innovaedu;


--
-- Name: mdl_event; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_event FROM PUBLIC;
REVOKE ALL ON TABLE mdl_event FROM innovaedu;
GRANT ALL ON TABLE mdl_event TO innovaedu;


--
-- Name: mdl_event_subscriptions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_event_subscriptions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_event_subscriptions FROM innovaedu;
GRANT ALL ON TABLE mdl_event_subscriptions TO innovaedu;


--
-- Name: mdl_event_subscriptions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_event_subscriptions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_event_subscriptions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_event_subscriptions_id_seq TO innovaedu;


--
-- Name: mdl_events_handlers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_events_handlers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_events_handlers FROM innovaedu;
GRANT ALL ON TABLE mdl_events_handlers TO innovaedu;


--
-- Name: mdl_events_handlers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_events_handlers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_events_handlers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_events_handlers_id_seq TO innovaedu;


--
-- Name: mdl_events_queue; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_events_queue FROM PUBLIC;
REVOKE ALL ON TABLE mdl_events_queue FROM innovaedu;
GRANT ALL ON TABLE mdl_events_queue TO innovaedu;


--
-- Name: mdl_events_queue_handlers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_events_queue_handlers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_events_queue_handlers FROM innovaedu;
GRANT ALL ON TABLE mdl_events_queue_handlers TO innovaedu;


--
-- Name: mdl_events_queue_handlers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_events_queue_handlers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_events_queue_handlers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_events_queue_handlers_id_seq TO innovaedu;


--
-- Name: mdl_events_queue_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_events_queue_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_events_queue_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_events_queue_id_seq TO innovaedu;


--
-- Name: mdl_external_functions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_external_functions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_external_functions FROM innovaedu;
GRANT ALL ON TABLE mdl_external_functions TO innovaedu;


--
-- Name: mdl_external_functions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_external_functions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_external_functions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_external_functions_id_seq TO innovaedu;


--
-- Name: mdl_external_services; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_external_services FROM PUBLIC;
REVOKE ALL ON TABLE mdl_external_services FROM innovaedu;
GRANT ALL ON TABLE mdl_external_services TO innovaedu;


--
-- Name: mdl_external_services_functions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_external_services_functions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_external_services_functions FROM innovaedu;
GRANT ALL ON TABLE mdl_external_services_functions TO innovaedu;


--
-- Name: mdl_external_services_functions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_external_services_functions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_external_services_functions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_external_services_functions_id_seq TO innovaedu;


--
-- Name: mdl_external_services_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_external_services_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_external_services_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_external_services_id_seq TO innovaedu;


--
-- Name: mdl_external_services_users; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_external_services_users FROM PUBLIC;
REVOKE ALL ON TABLE mdl_external_services_users FROM innovaedu;
GRANT ALL ON TABLE mdl_external_services_users TO innovaedu;


--
-- Name: mdl_external_services_users_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_external_services_users_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_external_services_users_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_external_services_users_id_seq TO innovaedu;


--
-- Name: mdl_external_tokens; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_external_tokens FROM PUBLIC;
REVOKE ALL ON TABLE mdl_external_tokens FROM innovaedu;
GRANT ALL ON TABLE mdl_external_tokens TO innovaedu;


--
-- Name: mdl_external_tokens_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_external_tokens_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_external_tokens_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_external_tokens_id_seq TO innovaedu;


--
-- Name: mdl_feedback; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback TO innovaedu;


--
-- Name: mdl_feedback_completed; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_completed FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_completed FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_completed TO innovaedu;


--
-- Name: mdl_feedback_completed_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_completed_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_completed_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_completed_id_seq TO innovaedu;


--
-- Name: mdl_feedback_completedtmp; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_completedtmp FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_completedtmp FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_completedtmp TO innovaedu;


--
-- Name: mdl_feedback_completedtmp_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_completedtmp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_completedtmp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_completedtmp_id_seq TO innovaedu;


--
-- Name: mdl_feedback_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_id_seq TO innovaedu;


--
-- Name: mdl_feedback_item; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_item FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_item FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_item TO innovaedu;


--
-- Name: mdl_feedback_item_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_item_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_item_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_item_id_seq TO innovaedu;


--
-- Name: mdl_feedback_sitecourse_map; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_sitecourse_map FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_sitecourse_map FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_sitecourse_map TO innovaedu;


--
-- Name: mdl_feedback_sitecourse_map_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_sitecourse_map_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_sitecourse_map_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_sitecourse_map_id_seq TO innovaedu;


--
-- Name: mdl_feedback_template; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_template FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_template FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_template TO innovaedu;


--
-- Name: mdl_feedback_template_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_template_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_template_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_template_id_seq TO innovaedu;


--
-- Name: mdl_feedback_tracking; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_tracking FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_tracking FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_tracking TO innovaedu;


--
-- Name: mdl_feedback_tracking_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_tracking_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_tracking_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_tracking_id_seq TO innovaedu;


--
-- Name: mdl_feedback_value; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_value FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_value FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_value TO innovaedu;


--
-- Name: mdl_feedback_value_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_value_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_value_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_value_id_seq TO innovaedu;


--
-- Name: mdl_feedback_valuetmp; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_feedback_valuetmp FROM PUBLIC;
REVOKE ALL ON TABLE mdl_feedback_valuetmp FROM innovaedu;
GRANT ALL ON TABLE mdl_feedback_valuetmp TO innovaedu;


--
-- Name: mdl_feedback_valuetmp_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_feedback_valuetmp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_feedback_valuetmp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_feedback_valuetmp_id_seq TO innovaedu;


--
-- Name: mdl_files; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_files FROM PUBLIC;
REVOKE ALL ON TABLE mdl_files FROM innovaedu;
GRANT ALL ON TABLE mdl_files TO innovaedu;


--
-- Name: mdl_files_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_files_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_files_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_files_id_seq TO innovaedu;


--
-- Name: mdl_files_reference; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_files_reference FROM PUBLIC;
REVOKE ALL ON TABLE mdl_files_reference FROM innovaedu;
GRANT ALL ON TABLE mdl_files_reference TO innovaedu;


--
-- Name: mdl_files_reference_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_files_reference_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_files_reference_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_files_reference_id_seq TO innovaedu;


--
-- Name: mdl_filter_active; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_filter_active FROM PUBLIC;
REVOKE ALL ON TABLE mdl_filter_active FROM innovaedu;
GRANT ALL ON TABLE mdl_filter_active TO innovaedu;


--
-- Name: mdl_filter_active_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_filter_active_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_filter_active_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_filter_active_id_seq TO innovaedu;


--
-- Name: mdl_filter_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_filter_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_filter_config FROM innovaedu;
GRANT ALL ON TABLE mdl_filter_config TO innovaedu;


--
-- Name: mdl_filter_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_filter_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_filter_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_filter_config_id_seq TO innovaedu;


--
-- Name: mdl_folder; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_folder FROM PUBLIC;
REVOKE ALL ON TABLE mdl_folder FROM innovaedu;
GRANT ALL ON TABLE mdl_folder TO innovaedu;


--
-- Name: mdl_folder_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_folder_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_folder_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_folder_id_seq TO innovaedu;


--
-- Name: mdl_folder_id_seq1; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_folder_id_seq1 FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_folder_id_seq1 FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_folder_id_seq1 TO innovaedu;


--
-- Name: mdl_formacion_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_formacion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_formacion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_formacion_id_seq TO innovaedu;


--
-- Name: mdl_forum_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_id_seq TO innovaedu;


--
-- Name: mdl_forum; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum FROM innovaedu;
GRANT ALL ON TABLE mdl_forum TO innovaedu;


--
-- Name: mdl_forum_discussions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_discussions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_discussions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_discussions_id_seq TO innovaedu;


--
-- Name: mdl_forum_discussions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_discussions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_discussions FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_discussions TO innovaedu;


--
-- Name: mdl_forum_posts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_posts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_posts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_posts_id_seq TO innovaedu;


--
-- Name: mdl_forum_posts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_posts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_posts FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_posts TO innovaedu;


--
-- Name: mdl_forum_queue_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_queue_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_queue_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_queue_id_seq TO innovaedu;


--
-- Name: mdl_forum_queue; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_queue FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_queue FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_queue TO innovaedu;


--
-- Name: mdl_forum_ratings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_ratings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_ratings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_ratings_id_seq TO innovaedu;


--
-- Name: mdl_forum_read_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_read_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_read_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_read_id_seq TO innovaedu;


--
-- Name: mdl_forum_read; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_read FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_read FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_read TO innovaedu;


--
-- Name: mdl_forum_subscriptions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_subscriptions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_subscriptions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_subscriptions_id_seq TO innovaedu;


--
-- Name: mdl_forum_subscriptions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_subscriptions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_subscriptions FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_subscriptions TO innovaedu;


--
-- Name: mdl_forum_track_prefs_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_forum_track_prefs_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_forum_track_prefs_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_forum_track_prefs_id_seq TO innovaedu;


--
-- Name: mdl_forum_track_prefs; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_forum_track_prefs FROM PUBLIC;
REVOKE ALL ON TABLE mdl_forum_track_prefs FROM innovaedu;
GRANT ALL ON TABLE mdl_forum_track_prefs TO innovaedu;


--
-- Name: mdl_glossary_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_id_seq TO innovaedu;


--
-- Name: mdl_glossary; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary TO innovaedu;


--
-- Name: mdl_glossary_alias_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_alias_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_alias_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_alias_id_seq TO innovaedu;


--
-- Name: mdl_glossary_alias; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary_alias FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary_alias FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary_alias TO innovaedu;


--
-- Name: mdl_glossary_categories_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_categories_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_categories_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_categories_id_seq TO innovaedu;


--
-- Name: mdl_glossary_categories; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary_categories FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary_categories FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary_categories TO innovaedu;


--
-- Name: mdl_glossary_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_comments_id_seq TO innovaedu;


--
-- Name: mdl_glossary_entries_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_entries_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_entries_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_entries_id_seq TO innovaedu;


--
-- Name: mdl_glossary_entries; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary_entries FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary_entries FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary_entries TO innovaedu;


--
-- Name: mdl_glossary_entries_categories_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_entries_categories_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_entries_categories_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_entries_categories_id_seq TO innovaedu;


--
-- Name: mdl_glossary_entries_categories; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary_entries_categories FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary_entries_categories FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary_entries_categories TO innovaedu;


--
-- Name: mdl_glossary_formats_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_formats_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_formats_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_formats_id_seq TO innovaedu;


--
-- Name: mdl_glossary_formats; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_glossary_formats FROM PUBLIC;
REVOKE ALL ON TABLE mdl_glossary_formats FROM innovaedu;
GRANT ALL ON TABLE mdl_glossary_formats TO innovaedu;


--
-- Name: mdl_glossary_ratings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_glossary_ratings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_glossary_ratings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_glossary_ratings_id_seq TO innovaedu;


--
-- Name: mdl_grade_categories_history; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_categories_history FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_categories_history FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_categories_history TO innovaedu;


--
-- Name: mdl_grade_categories_history_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_categories_history_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_categories_history_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_categories_history_id_seq TO innovaedu;


--
-- Name: mdl_grade_categories_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_categories_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_categories_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_categories_id_seq TO innovaedu;


--
-- Name: mdl_grade_category_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_category_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_category_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_category_id_seq TO innovaedu;


--
-- Name: mdl_grade_exceptions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_exceptions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_exceptions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_exceptions_id_seq TO innovaedu;


--
-- Name: mdl_grade_grades_history; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_grades_history FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_grades_history FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_grades_history TO innovaedu;


--
-- Name: mdl_grade_grades_history_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_grades_history_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_grades_history_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_grades_history_id_seq TO innovaedu;


--
-- Name: mdl_grade_grades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_grades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_grades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_grades_id_seq TO innovaedu;


--
-- Name: mdl_grade_import_newitem; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_import_newitem FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_import_newitem FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_import_newitem TO innovaedu;


--
-- Name: mdl_grade_import_newitem_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_import_newitem_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_import_newitem_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_import_newitem_id_seq TO innovaedu;


--
-- Name: mdl_grade_import_values; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_import_values FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_import_values FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_import_values TO innovaedu;


--
-- Name: mdl_grade_import_values_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_import_values_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_import_values_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_import_values_id_seq TO innovaedu;


--
-- Name: mdl_grade_item_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_item_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_item_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_item_id_seq TO innovaedu;


--
-- Name: mdl_grade_items_history; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_items_history FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_items_history FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_items_history TO innovaedu;


--
-- Name: mdl_grade_items_history_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_items_history_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_items_history_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_items_history_id_seq TO innovaedu;


--
-- Name: mdl_grade_items_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_items_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_items_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_items_id_seq TO innovaedu;


--
-- Name: mdl_grade_letters_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_letters_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_letters_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_letters_id_seq TO innovaedu;


--
-- Name: mdl_grade_letters; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_letters FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_letters FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_letters TO innovaedu;


--
-- Name: mdl_grade_outcomes; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_outcomes FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_outcomes FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_outcomes TO innovaedu;


--
-- Name: mdl_grade_outcomes_courses; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_outcomes_courses FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_outcomes_courses FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_outcomes_courses TO innovaedu;


--
-- Name: mdl_grade_outcomes_courses_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_outcomes_courses_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_outcomes_courses_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_outcomes_courses_id_seq TO innovaedu;


--
-- Name: mdl_grade_outcomes_history; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_outcomes_history FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_outcomes_history FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_outcomes_history TO innovaedu;


--
-- Name: mdl_grade_outcomes_history_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_outcomes_history_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_outcomes_history_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_outcomes_history_id_seq TO innovaedu;


--
-- Name: mdl_grade_outcomes_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_outcomes_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_outcomes_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_outcomes_id_seq TO innovaedu;


--
-- Name: mdl_grade_preferences_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_preferences_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_preferences_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_preferences_id_seq TO innovaedu;


--
-- Name: mdl_grade_settings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grade_settings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grade_settings FROM innovaedu;
GRANT ALL ON TABLE mdl_grade_settings TO innovaedu;


--
-- Name: mdl_grade_settings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grade_settings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grade_settings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grade_settings_id_seq TO innovaedu;


--
-- Name: mdl_grading_areas; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grading_areas FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grading_areas FROM innovaedu;
GRANT ALL ON TABLE mdl_grading_areas TO innovaedu;


--
-- Name: mdl_grading_areas_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grading_areas_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grading_areas_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grading_areas_id_seq TO innovaedu;


--
-- Name: mdl_grading_definitions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grading_definitions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grading_definitions FROM innovaedu;
GRANT ALL ON TABLE mdl_grading_definitions TO innovaedu;


--
-- Name: mdl_grading_definitions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grading_definitions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grading_definitions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grading_definitions_id_seq TO innovaedu;


--
-- Name: mdl_grading_instances; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_grading_instances FROM PUBLIC;
REVOKE ALL ON TABLE mdl_grading_instances FROM innovaedu;
GRANT ALL ON TABLE mdl_grading_instances TO innovaedu;


--
-- Name: mdl_grading_instances_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_grading_instances_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_grading_instances_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_grading_instances_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_guide_comments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_guide_comments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_guide_comments FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_guide_comments TO innovaedu;


--
-- Name: mdl_gradingform_guide_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_guide_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_guide_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_guide_comments_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_guide_criteria; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_guide_criteria FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_guide_criteria FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_guide_criteria TO innovaedu;


--
-- Name: mdl_gradingform_guide_criteria_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_guide_criteria_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_guide_criteria_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_guide_criteria_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_guide_fillings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_guide_fillings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_guide_fillings FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_guide_fillings TO innovaedu;


--
-- Name: mdl_gradingform_guide_fillings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_guide_fillings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_guide_fillings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_guide_fillings_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_rubric_criteria; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_rubric_criteria FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_rubric_criteria FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_rubric_criteria TO innovaedu;


--
-- Name: mdl_gradingform_rubric_criteria_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_criteria_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_criteria_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_rubric_criteria_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_rubric_fillings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_rubric_fillings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_rubric_fillings FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_rubric_fillings TO innovaedu;


--
-- Name: mdl_gradingform_rubric_fillings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_fillings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_fillings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_rubric_fillings_id_seq TO innovaedu;


--
-- Name: mdl_gradingform_rubric_levels; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_gradingform_rubric_levels FROM PUBLIC;
REVOKE ALL ON TABLE mdl_gradingform_rubric_levels FROM innovaedu;
GRANT ALL ON TABLE mdl_gradingform_rubric_levels TO innovaedu;


--
-- Name: mdl_gradingform_rubric_levels_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_levels_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_gradingform_rubric_levels_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_gradingform_rubric_levels_id_seq TO innovaedu;


--
-- Name: mdl_groupings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groupings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groupings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groupings_id_seq TO innovaedu;


--
-- Name: mdl_groupings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_groupings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_groupings FROM innovaedu;
GRANT ALL ON TABLE mdl_groupings TO innovaedu;


--
-- Name: mdl_groupings_groups_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groupings_groups_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groupings_groups_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groupings_groups_id_seq TO innovaedu;


--
-- Name: mdl_groupings_groups; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_groupings_groups FROM PUBLIC;
REVOKE ALL ON TABLE mdl_groupings_groups FROM innovaedu;
GRANT ALL ON TABLE mdl_groupings_groups TO innovaedu;


--
-- Name: mdl_groups_courses_groupings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groups_courses_groupings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groups_courses_groupings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groups_courses_groupings_id_seq TO innovaedu;


--
-- Name: mdl_groups_courses_groups_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_groups_courses_groups_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_groups_courses_groups_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_groups_courses_groups_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_id_seq TO innovaedu;


--
-- Name: mdl_hotpot; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot TO innovaedu;


--
-- Name: mdl_hotpot_attempts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_attempts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_attempts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_attempts_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_attempts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot_attempts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot_attempts FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot_attempts TO innovaedu;


--
-- Name: mdl_hotpot_details_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_details_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_details_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_details_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_details; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot_details FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot_details FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot_details TO innovaedu;


--
-- Name: mdl_hotpot_questions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_questions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_questions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_questions_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_questions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot_questions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot_questions FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot_questions TO innovaedu;


--
-- Name: mdl_hotpot_responses_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_responses_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_responses_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_responses_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_responses; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot_responses FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot_responses FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot_responses TO innovaedu;


--
-- Name: mdl_hotpot_strings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_hotpot_strings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_hotpot_strings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_hotpot_strings_id_seq TO innovaedu;


--
-- Name: mdl_hotpot_strings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_hotpot_strings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_hotpot_strings FROM innovaedu;
GRANT ALL ON TABLE mdl_hotpot_strings TO innovaedu;


--
-- Name: mdl_imscp; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_imscp FROM PUBLIC;
REVOKE ALL ON TABLE mdl_imscp FROM innovaedu;
GRANT ALL ON TABLE mdl_imscp TO innovaedu;


--
-- Name: mdl_imscp_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_imscp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_imscp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_imscp_id_seq TO innovaedu;


--
-- Name: mdl_imscp_id_seq1; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_imscp_id_seq1 FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_imscp_id_seq1 FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_imscp_id_seq1 TO innovaedu;


--
-- Name: mdl_journal_entries_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_journal_entries_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_journal_entries_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_journal_entries_id_seq TO innovaedu;


--
-- Name: mdl_journal_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_journal_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_journal_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_journal_id_seq TO innovaedu;


--
-- Name: mdl_label_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_label_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_label_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_label_id_seq TO innovaedu;


--
-- Name: mdl_label; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_label FROM PUBLIC;
REVOKE ALL ON TABLE mdl_label FROM innovaedu;
GRANT ALL ON TABLE mdl_label TO innovaedu;


--
-- Name: mdl_lams_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lams_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lams_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lams_id_seq TO innovaedu;


--
-- Name: mdl_lesson_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_id_seq TO innovaedu;


--
-- Name: mdl_lesson; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson TO innovaedu;


--
-- Name: mdl_lesson_answers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_answers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_answers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_answers_id_seq TO innovaedu;


--
-- Name: mdl_lesson_answers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_answers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_answers FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_answers TO innovaedu;


--
-- Name: mdl_lesson_attempts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_attempts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_attempts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_attempts_id_seq TO innovaedu;


--
-- Name: mdl_lesson_attempts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_attempts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_attempts FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_attempts TO innovaedu;


--
-- Name: mdl_lesson_branch_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_branch_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_branch_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_branch_id_seq TO innovaedu;


--
-- Name: mdl_lesson_branch; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_branch FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_branch FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_branch TO innovaedu;


--
-- Name: mdl_lesson_default_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_default_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_default_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_default_id_seq TO innovaedu;


--
-- Name: mdl_lesson_grades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_grades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_grades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_grades_id_seq TO innovaedu;


--
-- Name: mdl_lesson_grades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_grades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_grades FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_grades TO innovaedu;


--
-- Name: mdl_lesson_high_scores_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_high_scores_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_high_scores_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_high_scores_id_seq TO innovaedu;


--
-- Name: mdl_lesson_high_scores; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_high_scores FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_high_scores FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_high_scores TO innovaedu;


--
-- Name: mdl_lesson_pages_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_pages_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_pages_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_pages_id_seq TO innovaedu;


--
-- Name: mdl_lesson_pages; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_pages FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_pages FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_pages TO innovaedu;


--
-- Name: mdl_lesson_timer_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lesson_timer_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lesson_timer_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lesson_timer_id_seq TO innovaedu;


--
-- Name: mdl_lesson_timer; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lesson_timer FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lesson_timer FROM innovaedu;
GRANT ALL ON TABLE mdl_lesson_timer TO innovaedu;


--
-- Name: mdl_license; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_license FROM PUBLIC;
REVOKE ALL ON TABLE mdl_license FROM innovaedu;
GRANT ALL ON TABLE mdl_license TO innovaedu;


--
-- Name: mdl_license_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_license_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_license_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_license_id_seq TO innovaedu;


--
-- Name: mdl_log_display_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_log_display_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_log_display_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_log_display_id_seq TO innovaedu;


--
-- Name: mdl_log_display; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_log_display FROM PUBLIC;
REVOKE ALL ON TABLE mdl_log_display FROM innovaedu;
GRANT ALL ON TABLE mdl_log_display TO innovaedu;


--
-- Name: mdl_log_queries; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_log_queries FROM PUBLIC;
REVOKE ALL ON TABLE mdl_log_queries FROM innovaedu;
GRANT ALL ON TABLE mdl_log_queries TO innovaedu;


--
-- Name: mdl_log_queries_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_log_queries_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_log_queries_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_log_queries_id_seq TO innovaedu;


--
-- Name: mdl_lti; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lti FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lti FROM innovaedu;
GRANT ALL ON TABLE mdl_lti TO innovaedu;


--
-- Name: mdl_lti_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lti_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lti_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lti_id_seq TO innovaedu;


--
-- Name: mdl_lti_submission; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lti_submission FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lti_submission FROM innovaedu;
GRANT ALL ON TABLE mdl_lti_submission TO innovaedu;


--
-- Name: mdl_lti_submission_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lti_submission_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lti_submission_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lti_submission_id_seq TO innovaedu;


--
-- Name: mdl_lti_types; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lti_types FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lti_types FROM innovaedu;
GRANT ALL ON TABLE mdl_lti_types TO innovaedu;


--
-- Name: mdl_lti_types_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_lti_types_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_lti_types_config FROM innovaedu;
GRANT ALL ON TABLE mdl_lti_types_config TO innovaedu;


--
-- Name: mdl_lti_types_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lti_types_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lti_types_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lti_types_config_id_seq TO innovaedu;


--
-- Name: mdl_lti_types_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_lti_types_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_lti_types_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_lti_types_id_seq TO innovaedu;


--
-- Name: mdl_medio_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_medio_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_medio_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_medio_id_seq TO innovaedu;


--
-- Name: mdl_message_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_id_seq TO innovaedu;


--
-- Name: mdl_message; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message FROM innovaedu;
GRANT ALL ON TABLE mdl_message TO innovaedu;


--
-- Name: mdl_message_contacts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_contacts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_contacts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_contacts_id_seq TO innovaedu;


--
-- Name: mdl_message_contacts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message_contacts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message_contacts FROM innovaedu;
GRANT ALL ON TABLE mdl_message_contacts TO innovaedu;


--
-- Name: mdl_message_processors; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message_processors FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message_processors FROM innovaedu;
GRANT ALL ON TABLE mdl_message_processors TO innovaedu;


--
-- Name: mdl_message_processors_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_processors_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_processors_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_processors_id_seq TO innovaedu;


--
-- Name: mdl_message_providers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message_providers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message_providers FROM innovaedu;
GRANT ALL ON TABLE mdl_message_providers TO innovaedu;


--
-- Name: mdl_message_providers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_providers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_providers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_providers_id_seq TO innovaedu;


--
-- Name: mdl_message_read_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_read_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_read_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_read_id_seq TO innovaedu;


--
-- Name: mdl_message_read; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message_read FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message_read FROM innovaedu;
GRANT ALL ON TABLE mdl_message_read TO innovaedu;


--
-- Name: mdl_message_working; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_message_working FROM PUBLIC;
REVOKE ALL ON TABLE mdl_message_working FROM innovaedu;
GRANT ALL ON TABLE mdl_message_working TO innovaedu;


--
-- Name: mdl_message_working_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_message_working_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_message_working_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_message_working_id_seq TO innovaedu;


--
-- Name: mdl_mnet_application; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_application FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_application FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_application TO innovaedu;


--
-- Name: mdl_mnet_application_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_application_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_application_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_application_id_seq TO innovaedu;


--
-- Name: mdl_mnet_enrol_assignments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_enrol_assignments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_enrol_assignments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_enrol_assignments_id_seq TO innovaedu;


--
-- Name: mdl_mnet_enrol_course_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_enrol_course_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_enrol_course_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_enrol_course_id_seq TO innovaedu;


--
-- Name: mdl_mnet_host_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_host_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_host_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_host_id_seq TO innovaedu;


--
-- Name: mdl_mnet_host; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_host FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_host FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_host TO innovaedu;


--
-- Name: mdl_mnet_host2service_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_host2service_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_host2service_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_host2service_id_seq TO innovaedu;


--
-- Name: mdl_mnet_host2service; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_host2service FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_host2service FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_host2service TO innovaedu;


--
-- Name: mdl_mnet_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_log_id_seq TO innovaedu;


--
-- Name: mdl_mnet_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_log FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_log FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_log TO innovaedu;


--
-- Name: mdl_mnet_remote_rpc; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_remote_rpc FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_remote_rpc FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_remote_rpc TO innovaedu;


--
-- Name: mdl_mnet_remote_rpc_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_remote_rpc_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_remote_rpc_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_remote_rpc_id_seq TO innovaedu;


--
-- Name: mdl_mnet_remote_service2rpc; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_remote_service2rpc FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_remote_service2rpc FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_remote_service2rpc TO innovaedu;


--
-- Name: mdl_mnet_remote_service2rpc_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_remote_service2rpc_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_remote_service2rpc_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_remote_service2rpc_id_seq TO innovaedu;


--
-- Name: mdl_mnet_rpc_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_rpc_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_rpc_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_rpc_id_seq TO innovaedu;


--
-- Name: mdl_mnet_rpc; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_rpc FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_rpc FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_rpc TO innovaedu;


--
-- Name: mdl_mnet_service_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_service_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_service_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_service_id_seq TO innovaedu;


--
-- Name: mdl_mnet_service; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_service FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_service FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_service TO innovaedu;


--
-- Name: mdl_mnet_service2rpc_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_service2rpc_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_service2rpc_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_service2rpc_id_seq TO innovaedu;


--
-- Name: mdl_mnet_service2rpc; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_service2rpc FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_service2rpc FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_service2rpc TO innovaedu;


--
-- Name: mdl_mnet_session_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_session_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_session_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_session_id_seq TO innovaedu;


--
-- Name: mdl_mnet_session; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_session FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_session FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_session TO innovaedu;


--
-- Name: mdl_mnet_sso_access_control_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnet_sso_access_control_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnet_sso_access_control_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnet_sso_access_control_id_seq TO innovaedu;


--
-- Name: mdl_mnet_sso_access_control; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnet_sso_access_control FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnet_sso_access_control FROM innovaedu;
GRANT ALL ON TABLE mdl_mnet_sso_access_control TO innovaedu;


--
-- Name: mdl_mnetservice_enrol_courses; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnetservice_enrol_courses FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnetservice_enrol_courses FROM innovaedu;
GRANT ALL ON TABLE mdl_mnetservice_enrol_courses TO innovaedu;


--
-- Name: mdl_mnetservice_enrol_courses_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnetservice_enrol_courses_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnetservice_enrol_courses_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnetservice_enrol_courses_id_seq TO innovaedu;


--
-- Name: mdl_mnetservice_enrol_enrolments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_mnetservice_enrol_enrolments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_mnetservice_enrol_enrolments FROM innovaedu;
GRANT ALL ON TABLE mdl_mnetservice_enrol_enrolments TO innovaedu;


--
-- Name: mdl_mnetservice_enrol_enrolments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_mnetservice_enrol_enrolments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_mnetservice_enrol_enrolments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_mnetservice_enrol_enrolments_id_seq TO innovaedu;


--
-- Name: mdl_my_pages; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_my_pages FROM PUBLIC;
REVOKE ALL ON TABLE mdl_my_pages FROM innovaedu;
GRANT ALL ON TABLE mdl_my_pages TO innovaedu;


--
-- Name: mdl_my_pages_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_my_pages_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_my_pages_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_my_pages_id_seq TO innovaedu;


--
-- Name: mdl_nomina20143; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_nomina20143 FROM PUBLIC;
REVOKE ALL ON TABLE mdl_nomina20143 FROM innovaedu;
GRANT ALL ON TABLE mdl_nomina20143 TO innovaedu;


--
-- Name: mdl_nomina20143v; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_nomina20143v FROM PUBLIC;
REVOKE ALL ON TABLE mdl_nomina20143v FROM innovaedu;
GRANT ALL ON TABLE mdl_nomina20143v TO innovaedu;


--
-- Name: mdl_page; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_page FROM PUBLIC;
REVOKE ALL ON TABLE mdl_page FROM innovaedu;
GRANT ALL ON TABLE mdl_page TO innovaedu;


--
-- Name: mdl_page_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_page_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_page_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_page_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_instance; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_instance FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_instance FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_instance TO innovaedu;


--
-- Name: mdl_portfolio_instance_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_instance_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_instance_config FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_instance_config TO innovaedu;


--
-- Name: mdl_portfolio_instance_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_instance_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_instance_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_instance_config_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_instance_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_instance_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_instance_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_instance_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_instance_user; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_instance_user FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_instance_user FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_instance_user TO innovaedu;


--
-- Name: mdl_portfolio_instance_user_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_instance_user_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_instance_user_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_instance_user_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_log FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_log FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_log TO innovaedu;


--
-- Name: mdl_portfolio_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_log_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_mahara_queue; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_mahara_queue FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_mahara_queue FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_mahara_queue TO innovaedu;


--
-- Name: mdl_portfolio_mahara_queue_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_mahara_queue_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_mahara_queue_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_mahara_queue_id_seq TO innovaedu;


--
-- Name: mdl_portfolio_tempdata; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_portfolio_tempdata FROM PUBLIC;
REVOKE ALL ON TABLE mdl_portfolio_tempdata FROM innovaedu;
GRANT ALL ON TABLE mdl_portfolio_tempdata TO innovaedu;


--
-- Name: mdl_portfolio_tempdata_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_portfolio_tempdata_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_portfolio_tempdata_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_portfolio_tempdata_id_seq TO innovaedu;


--
-- Name: mdl_post_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_post_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_post_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_post_id_seq TO innovaedu;


--
-- Name: mdl_post; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_post FROM PUBLIC;
REVOKE ALL ON TABLE mdl_post FROM innovaedu;
GRANT ALL ON TABLE mdl_post TO innovaedu;


--
-- Name: mdl_profesion_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_profesion_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_profesion_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_profesion_id_seq TO innovaedu;


--
-- Name: mdl_profiling; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_profiling FROM PUBLIC;
REVOKE ALL ON TABLE mdl_profiling FROM innovaedu;
GRANT ALL ON TABLE mdl_profiling TO innovaedu;


--
-- Name: mdl_profiling_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_profiling_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_profiling_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_profiling_id_seq TO innovaedu;


--
-- Name: mdl_propuesta_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_propuesta_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_propuesta_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_propuesta_id_seq TO innovaedu;


--
-- Name: mdl_pruebadirectivos; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_pruebadirectivos FROM PUBLIC;
REVOKE ALL ON TABLE mdl_pruebadirectivos FROM innovaedu;
GRANT ALL ON TABLE mdl_pruebadirectivos TO innovaedu;


--
-- Name: mdl_pruebanomina2_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_pruebanomina2_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_pruebanomina2_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_pruebanomina2_id_seq TO innovaedu;


--
-- Name: mdl_qtype_essay_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_qtype_essay_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_qtype_essay_options FROM innovaedu;
GRANT ALL ON TABLE mdl_qtype_essay_options TO innovaedu;


--
-- Name: mdl_qtype_essay_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_qtype_essay_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_qtype_essay_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_qtype_essay_options_id_seq TO innovaedu;


--
-- Name: mdl_qtype_match_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_qtype_match_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_qtype_match_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_qtype_match_options_id_seq TO innovaedu;


--
-- Name: mdl_qtype_match_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_qtype_match_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_qtype_match_options FROM innovaedu;
GRANT ALL ON TABLE mdl_qtype_match_options TO innovaedu;


--
-- Name: mdl_qtype_match_subquestions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_qtype_match_subquestions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_qtype_match_subquestions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_qtype_match_subquestions_id_seq TO innovaedu;


--
-- Name: mdl_qtype_match_subquestions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_qtype_match_subquestions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_qtype_match_subquestions FROM innovaedu;
GRANT ALL ON TABLE mdl_qtype_match_subquestions TO innovaedu;


--
-- Name: mdl_qtype_shortanswer_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_qtype_shortanswer_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_qtype_shortanswer_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_qtype_shortanswer_options_id_seq TO innovaedu;


--
-- Name: mdl_qtype_shortanswer_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_qtype_shortanswer_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_qtype_shortanswer_options FROM innovaedu;
GRANT ALL ON TABLE mdl_qtype_shortanswer_options TO innovaedu;


--
-- Name: mdl_question_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_id_seq TO innovaedu;


--
-- Name: mdl_question; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question FROM innovaedu;
GRANT ALL ON TABLE mdl_question TO innovaedu;


--
-- Name: mdl_question_answers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_answers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_answers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_answers_id_seq TO innovaedu;


--
-- Name: mdl_question_answers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_answers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_answers FROM innovaedu;
GRANT ALL ON TABLE mdl_question_answers TO innovaedu;


--
-- Name: mdl_question_attempt_step_data; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_attempt_step_data FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_attempt_step_data FROM innovaedu;
GRANT ALL ON TABLE mdl_question_attempt_step_data TO innovaedu;


--
-- Name: mdl_question_attempt_step_data_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_attempt_step_data_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_attempt_step_data_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_attempt_step_data_id_seq TO innovaedu;


--
-- Name: mdl_question_attempt_steps; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_attempt_steps FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_attempt_steps FROM innovaedu;
GRANT ALL ON TABLE mdl_question_attempt_steps TO innovaedu;


--
-- Name: mdl_question_attempt_steps_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_attempt_steps_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_attempt_steps_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_attempt_steps_id_seq TO innovaedu;


--
-- Name: mdl_question_attempts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_attempts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_attempts FROM innovaedu;
GRANT ALL ON TABLE mdl_question_attempts TO innovaedu;


--
-- Name: mdl_question_attempts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_attempts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_attempts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_attempts_id_seq TO innovaedu;


--
-- Name: mdl_question_calculated_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_calculated_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_calculated_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_calculated_id_seq TO innovaedu;


--
-- Name: mdl_question_calculated; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_calculated FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_calculated FROM innovaedu;
GRANT ALL ON TABLE mdl_question_calculated TO innovaedu;


--
-- Name: mdl_question_calculated_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_calculated_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_calculated_options FROM innovaedu;
GRANT ALL ON TABLE mdl_question_calculated_options TO innovaedu;


--
-- Name: mdl_question_calculated_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_calculated_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_calculated_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_calculated_options_id_seq TO innovaedu;


--
-- Name: mdl_question_categories_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_categories_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_categories_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_categories_id_seq TO innovaedu;


--
-- Name: mdl_question_categories; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_categories FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_categories FROM innovaedu;
GRANT ALL ON TABLE mdl_question_categories TO innovaedu;


--
-- Name: mdl_question_dataset_definitions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_dataset_definitions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_dataset_definitions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_dataset_definitions_id_seq TO innovaedu;


--
-- Name: mdl_question_dataset_definitions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_dataset_definitions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_dataset_definitions FROM innovaedu;
GRANT ALL ON TABLE mdl_question_dataset_definitions TO innovaedu;


--
-- Name: mdl_question_dataset_items_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_dataset_items_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_dataset_items_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_dataset_items_id_seq TO innovaedu;


--
-- Name: mdl_question_dataset_items; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_dataset_items FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_dataset_items FROM innovaedu;
GRANT ALL ON TABLE mdl_question_dataset_items TO innovaedu;


--
-- Name: mdl_question_datasets_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_datasets_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_datasets_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_datasets_id_seq TO innovaedu;


--
-- Name: mdl_question_datasets; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_datasets FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_datasets FROM innovaedu;
GRANT ALL ON TABLE mdl_question_datasets TO innovaedu;


--
-- Name: mdl_question_hints; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_hints FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_hints FROM innovaedu;
GRANT ALL ON TABLE mdl_question_hints TO innovaedu;


--
-- Name: mdl_question_hints_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_hints_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_hints_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_hints_id_seq TO innovaedu;


--
-- Name: mdl_question_multianswer_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_multianswer_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_multianswer_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_multianswer_id_seq TO innovaedu;


--
-- Name: mdl_question_multianswer; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_multianswer FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_multianswer FROM innovaedu;
GRANT ALL ON TABLE mdl_question_multianswer TO innovaedu;


--
-- Name: mdl_question_multichoice_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_multichoice_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_multichoice_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_multichoice_id_seq TO innovaedu;


--
-- Name: mdl_question_multichoice; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_multichoice FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_multichoice FROM innovaedu;
GRANT ALL ON TABLE mdl_question_multichoice TO innovaedu;


--
-- Name: mdl_question_numerical_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_numerical_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_numerical_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_numerical_id_seq TO innovaedu;


--
-- Name: mdl_question_numerical; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_numerical FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_numerical FROM innovaedu;
GRANT ALL ON TABLE mdl_question_numerical TO innovaedu;


--
-- Name: mdl_question_numerical_options; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_numerical_options FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_numerical_options FROM innovaedu;
GRANT ALL ON TABLE mdl_question_numerical_options TO innovaedu;


--
-- Name: mdl_question_numerical_options_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_numerical_options_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_numerical_options_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_numerical_options_id_seq TO innovaedu;


--
-- Name: mdl_question_numerical_units_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_numerical_units_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_numerical_units_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_numerical_units_id_seq TO innovaedu;


--
-- Name: mdl_question_numerical_units; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_numerical_units FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_numerical_units FROM innovaedu;
GRANT ALL ON TABLE mdl_question_numerical_units TO innovaedu;


--
-- Name: mdl_question_randomsamatch_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_randomsamatch_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_randomsamatch_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_randomsamatch_id_seq TO innovaedu;


--
-- Name: mdl_question_randomsamatch; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_randomsamatch FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_randomsamatch FROM innovaedu;
GRANT ALL ON TABLE mdl_question_randomsamatch TO innovaedu;


--
-- Name: mdl_question_rqp_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_rqp_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_rqp_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_rqp_id_seq TO innovaedu;


--
-- Name: mdl_question_rqp_servers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_rqp_servers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_rqp_servers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_rqp_servers_id_seq TO innovaedu;


--
-- Name: mdl_question_rqp_states_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_rqp_states_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_rqp_states_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_rqp_states_id_seq TO innovaedu;


--
-- Name: mdl_question_rqp_types_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_rqp_types_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_rqp_types_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_rqp_types_id_seq TO innovaedu;


--
-- Name: mdl_question_sessions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_sessions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_sessions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_sessions_id_seq TO innovaedu;


--
-- Name: mdl_question_sessions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_sessions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_sessions FROM innovaedu;
GRANT ALL ON TABLE mdl_question_sessions TO innovaedu;


--
-- Name: mdl_question_states_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_states_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_states_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_states_id_seq TO innovaedu;


--
-- Name: mdl_question_states; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_states FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_states FROM innovaedu;
GRANT ALL ON TABLE mdl_question_states TO innovaedu;


--
-- Name: mdl_question_truefalse_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_truefalse_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_truefalse_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_truefalse_id_seq TO innovaedu;


--
-- Name: mdl_question_truefalse; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_truefalse FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_truefalse FROM innovaedu;
GRANT ALL ON TABLE mdl_question_truefalse TO innovaedu;


--
-- Name: mdl_question_usages_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_question_usages_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_question_usages_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_question_usages_id_seq TO innovaedu;


--
-- Name: mdl_question_usages; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_question_usages FROM PUBLIC;
REVOKE ALL ON TABLE mdl_question_usages FROM innovaedu;
GRANT ALL ON TABLE mdl_question_usages TO innovaedu;


--
-- Name: mdl_quiz_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_id_seq TO innovaedu;


--
-- Name: mdl_quiz; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz TO innovaedu;


--
-- Name: mdl_quiz_attempts_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_attempts_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_attempts_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_attempts_id_seq TO innovaedu;


--
-- Name: mdl_quiz_attempts; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_attempts FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_attempts FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_attempts TO innovaedu;


--
-- Name: mdl_quiz_feedback_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_feedback_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_feedback_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_feedback_id_seq TO innovaedu;


--
-- Name: mdl_quiz_feedback; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_feedback FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_feedback FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_feedback TO innovaedu;


--
-- Name: mdl_quiz_grades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_grades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_grades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_grades_id_seq TO innovaedu;


--
-- Name: mdl_quiz_grades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_grades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_grades FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_grades TO innovaedu;


--
-- Name: mdl_quiz_overrides; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_overrides FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_overrides FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_overrides TO innovaedu;


--
-- Name: mdl_quiz_overrides_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_overrides_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_overrides_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_overrides_id_seq TO innovaedu;


--
-- Name: mdl_quiz_overview_regrades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_overview_regrades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_overview_regrades FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_overview_regrades TO innovaedu;


--
-- Name: mdl_quiz_overview_regrades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_overview_regrades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_overview_regrades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_overview_regrades_id_seq TO innovaedu;


--
-- Name: mdl_quiz_question_instances_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_question_instances_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_question_instances_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_question_instances_id_seq TO innovaedu;


--
-- Name: mdl_quiz_question_instances; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_question_instances FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_question_instances FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_question_instances TO innovaedu;


--
-- Name: mdl_quiz_question_response_stats; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_question_response_stats FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_question_response_stats FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_question_response_stats TO innovaedu;


--
-- Name: mdl_quiz_question_response_stats_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_question_response_stats_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_question_response_stats_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_question_response_stats_id_seq TO innovaedu;


--
-- Name: mdl_quiz_question_statistics; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_question_statistics FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_question_statistics FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_question_statistics TO innovaedu;


--
-- Name: mdl_quiz_question_statistics_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_question_statistics_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_question_statistics_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_question_statistics_id_seq TO innovaedu;


--
-- Name: mdl_quiz_question_versions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_question_versions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_question_versions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_question_versions_id_seq TO innovaedu;


--
-- Name: mdl_quiz_reports; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_reports FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_reports FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_reports TO innovaedu;


--
-- Name: mdl_quiz_reports_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_reports_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_reports_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_reports_id_seq TO innovaedu;


--
-- Name: mdl_quiz_statistics; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_quiz_statistics FROM PUBLIC;
REVOKE ALL ON TABLE mdl_quiz_statistics FROM innovaedu;
GRANT ALL ON TABLE mdl_quiz_statistics TO innovaedu;


--
-- Name: mdl_quiz_statistics_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_quiz_statistics_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_quiz_statistics_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_quiz_statistics_id_seq TO innovaedu;


--
-- Name: mdl_rating; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_rating FROM PUBLIC;
REVOKE ALL ON TABLE mdl_rating FROM innovaedu;
GRANT ALL ON TABLE mdl_rating TO innovaedu;


--
-- Name: mdl_rating_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_rating_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_rating_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_rating_id_seq TO innovaedu;


--
-- Name: mdl_registration_hubs; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_registration_hubs FROM PUBLIC;
REVOKE ALL ON TABLE mdl_registration_hubs FROM innovaedu;
GRANT ALL ON TABLE mdl_registration_hubs TO innovaedu;


--
-- Name: mdl_registration_hubs_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_registration_hubs_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_registration_hubs_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_registration_hubs_id_seq TO innovaedu;


--
-- Name: mdl_reportinventario; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_reportinventario FROM PUBLIC;
REVOKE ALL ON TABLE mdl_reportinventario FROM innovaedu;
GRANT ALL ON TABLE mdl_reportinventario TO innovaedu;


--
-- Name: mdl_reportinventario_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_reportinventario_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_reportinventario_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_reportinventario_id_seq TO innovaedu;


--
-- Name: mdl_repository; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_repository FROM PUBLIC;
REVOKE ALL ON TABLE mdl_repository FROM innovaedu;
GRANT ALL ON TABLE mdl_repository TO innovaedu;


--
-- Name: mdl_repository_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_repository_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_repository_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_repository_id_seq TO innovaedu;


--
-- Name: mdl_repository_instance_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_repository_instance_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_repository_instance_config FROM innovaedu;
GRANT ALL ON TABLE mdl_repository_instance_config TO innovaedu;


--
-- Name: mdl_repository_instance_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_repository_instance_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_repository_instance_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_repository_instance_config_id_seq TO innovaedu;


--
-- Name: mdl_repository_instances; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_repository_instances FROM PUBLIC;
REVOKE ALL ON TABLE mdl_repository_instances FROM innovaedu;
GRANT ALL ON TABLE mdl_repository_instances TO innovaedu;


--
-- Name: mdl_repository_instances_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_repository_instances_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_repository_instances_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_repository_instances_id_seq TO innovaedu;


--
-- Name: mdl_resource_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_resource_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_resource_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_resource_id_seq TO innovaedu;


--
-- Name: mdl_resource; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_resource FROM PUBLIC;
REVOKE ALL ON TABLE mdl_resource FROM innovaedu;
GRANT ALL ON TABLE mdl_resource TO innovaedu;


--
-- Name: mdl_resource_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_resource_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_resource_old FROM innovaedu;
GRANT ALL ON TABLE mdl_resource_old TO innovaedu;


--
-- Name: mdl_resource_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_resource_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_resource_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_resource_old_id_seq TO innovaedu;


--
-- Name: mdl_role_allow_assign_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_allow_assign_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_allow_assign_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_allow_assign_id_seq TO innovaedu;


--
-- Name: mdl_role_allow_assign; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_allow_assign FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_allow_assign FROM innovaedu;
GRANT ALL ON TABLE mdl_role_allow_assign TO innovaedu;


--
-- Name: mdl_role_allow_override_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_allow_override_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_allow_override_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_allow_override_id_seq TO innovaedu;


--
-- Name: mdl_role_allow_override; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_allow_override FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_allow_override FROM innovaedu;
GRANT ALL ON TABLE mdl_role_allow_override TO innovaedu;


--
-- Name: mdl_role_allow_switch; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_allow_switch FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_allow_switch FROM innovaedu;
GRANT ALL ON TABLE mdl_role_allow_switch TO innovaedu;


--
-- Name: mdl_role_allow_switch_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_allow_switch_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_allow_switch_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_allow_switch_id_seq TO innovaedu;


--
-- Name: mdl_role_capabilities_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_capabilities_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_capabilities_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_capabilities_id_seq TO innovaedu;


--
-- Name: mdl_role_capabilities; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_capabilities FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_capabilities FROM innovaedu;
GRANT ALL ON TABLE mdl_role_capabilities TO innovaedu;


--
-- Name: mdl_role_context_levels; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_context_levels FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_context_levels FROM innovaedu;
GRANT ALL ON TABLE mdl_role_context_levels TO innovaedu;


--
-- Name: mdl_role_context_levels_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_context_levels_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_context_levels_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_context_levels_id_seq TO innovaedu;


--
-- Name: mdl_role_names_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_names_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_names_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_names_id_seq TO innovaedu;


--
-- Name: mdl_role_names; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_names FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_names FROM innovaedu;
GRANT ALL ON TABLE mdl_role_names TO innovaedu;


--
-- Name: mdl_role_sortorder; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_role_sortorder FROM PUBLIC;
REVOKE ALL ON TABLE mdl_role_sortorder FROM innovaedu;
GRANT ALL ON TABLE mdl_role_sortorder TO innovaedu;


--
-- Name: mdl_role_sortorder_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_role_sortorder_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_role_sortorder_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_role_sortorder_id_seq TO innovaedu;


--
-- Name: mdl_scale_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scale_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scale_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scale_id_seq TO innovaedu;


--
-- Name: mdl_scale; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scale FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scale FROM innovaedu;
GRANT ALL ON TABLE mdl_scale TO innovaedu;


--
-- Name: mdl_scale_history; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scale_history FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scale_history FROM innovaedu;
GRANT ALL ON TABLE mdl_scale_history TO innovaedu;


--
-- Name: mdl_scale_history_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scale_history_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scale_history_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scale_history_id_seq TO innovaedu;


--
-- Name: mdl_scorm_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_id_seq TO innovaedu;


--
-- Name: mdl_scorm; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm TO innovaedu;


--
-- Name: mdl_scorm_aicc_session; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_aicc_session FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_aicc_session FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_aicc_session TO innovaedu;


--
-- Name: mdl_scorm_aicc_session_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_aicc_session_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_aicc_session_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_aicc_session_id_seq TO innovaedu;


--
-- Name: mdl_scorm_scoes_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_scoes_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_scoes_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_scoes_id_seq TO innovaedu;


--
-- Name: mdl_scorm_scoes; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_scoes FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_scoes FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_scoes TO innovaedu;


--
-- Name: mdl_scorm_scoes_data_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_scoes_data_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_scoes_data_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_scoes_data_id_seq TO innovaedu;


--
-- Name: mdl_scorm_scoes_data; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_scoes_data FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_scoes_data FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_scoes_data TO innovaedu;


--
-- Name: mdl_scorm_scoes_track_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_scoes_track_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_scoes_track_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_scoes_track_id_seq TO innovaedu;


--
-- Name: mdl_scorm_scoes_track; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_scoes_track FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_scoes_track FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_scoes_track TO innovaedu;


--
-- Name: mdl_scorm_seq_mapinfo_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_mapinfo_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_mapinfo_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_mapinfo_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_mapinfo; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_mapinfo FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_mapinfo FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_mapinfo TO innovaedu;


--
-- Name: mdl_scorm_seq_objective_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_objective_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_objective_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_objective_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_objective; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_objective FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_objective FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_objective TO innovaedu;


--
-- Name: mdl_scorm_seq_rolluprule_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_rolluprule_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_rolluprule_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_rolluprule_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_rolluprule; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_rolluprule FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_rolluprule FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_rolluprule TO innovaedu;


--
-- Name: mdl_scorm_seq_rolluprulecond_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_rolluprulecond_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_rolluprulecond_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_rolluprulecond_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_rolluprulecond; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_rolluprulecond FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_rolluprulecond FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_rolluprulecond TO innovaedu;


--
-- Name: mdl_scorm_seq_rulecond_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_rulecond_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_rulecond_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_rulecond_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_rulecond; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_rulecond FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_rulecond FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_rulecond TO innovaedu;


--
-- Name: mdl_scorm_seq_ruleconds_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_scorm_seq_ruleconds_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_scorm_seq_ruleconds_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_scorm_seq_ruleconds_id_seq TO innovaedu;


--
-- Name: mdl_scorm_seq_ruleconds; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_scorm_seq_ruleconds FROM PUBLIC;
REVOKE ALL ON TABLE mdl_scorm_seq_ruleconds FROM innovaedu;
GRANT ALL ON TABLE mdl_scorm_seq_ruleconds TO innovaedu;


--
-- Name: mdl_sessions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_sessions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_sessions FROM innovaedu;
GRANT ALL ON TABLE mdl_sessions TO innovaedu;


--
-- Name: mdl_sessions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_sessions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_sessions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_sessions_id_seq TO innovaedu;


--
-- Name: mdl_stats_daily_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_daily_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_daily_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_daily_id_seq TO innovaedu;


--
-- Name: mdl_stats_daily; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_daily FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_daily FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_daily TO innovaedu;


--
-- Name: mdl_stats_monthly_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_monthly_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_monthly_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_monthly_id_seq TO innovaedu;


--
-- Name: mdl_stats_monthly; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_monthly FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_monthly FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_monthly TO innovaedu;


--
-- Name: mdl_stats_user_daily_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_user_daily_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_user_daily_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_user_daily_id_seq TO innovaedu;


--
-- Name: mdl_stats_user_daily; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_user_daily FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_user_daily FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_user_daily TO innovaedu;


--
-- Name: mdl_stats_user_monthly_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_user_monthly_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_user_monthly_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_user_monthly_id_seq TO innovaedu;


--
-- Name: mdl_stats_user_monthly; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_user_monthly FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_user_monthly FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_user_monthly TO innovaedu;


--
-- Name: mdl_stats_user_weekly_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_user_weekly_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_user_weekly_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_user_weekly_id_seq TO innovaedu;


--
-- Name: mdl_stats_user_weekly; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_user_weekly FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_user_weekly FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_user_weekly TO innovaedu;


--
-- Name: mdl_stats_weekly_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_stats_weekly_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_stats_weekly_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_stats_weekly_id_seq TO innovaedu;


--
-- Name: mdl_stats_weekly; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_stats_weekly FROM PUBLIC;
REVOKE ALL ON TABLE mdl_stats_weekly FROM innovaedu;
GRANT ALL ON TABLE mdl_stats_weekly TO innovaedu;


--
-- Name: mdl_subcat_course_id_exp_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_subcat_course_id_exp_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_subcat_course_id_exp_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_subcat_course_id_exp_seq TO innovaedu;


--
-- Name: mdl_subcat_course_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_subcat_course_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_subcat_course_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_subcat_course_id_seq TO innovaedu;


--
-- Name: mdl_subcategory_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_subcategory_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_subcategory_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_subcategory_id_seq TO innovaedu;


--
-- Name: mdl_survey_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_survey_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_survey_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_survey_id_seq TO innovaedu;


--
-- Name: mdl_survey; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_survey FROM PUBLIC;
REVOKE ALL ON TABLE mdl_survey FROM innovaedu;
GRANT ALL ON TABLE mdl_survey TO innovaedu;


--
-- Name: mdl_survey_analysis_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_survey_analysis_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_survey_analysis_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_survey_analysis_id_seq TO innovaedu;


--
-- Name: mdl_survey_analysis; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_survey_analysis FROM PUBLIC;
REVOKE ALL ON TABLE mdl_survey_analysis FROM innovaedu;
GRANT ALL ON TABLE mdl_survey_analysis TO innovaedu;


--
-- Name: mdl_survey_answers_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_survey_answers_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_survey_answers_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_survey_answers_id_seq TO innovaedu;


--
-- Name: mdl_survey_answers; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_survey_answers FROM PUBLIC;
REVOKE ALL ON TABLE mdl_survey_answers FROM innovaedu;
GRANT ALL ON TABLE mdl_survey_answers TO innovaedu;


--
-- Name: mdl_survey_questions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_survey_questions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_survey_questions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_survey_questions_id_seq TO innovaedu;


--
-- Name: mdl_survey_questions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_survey_questions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_survey_questions FROM innovaedu;
GRANT ALL ON TABLE mdl_survey_questions TO innovaedu;


--
-- Name: mdl_tag; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tag FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tag FROM innovaedu;
GRANT ALL ON TABLE mdl_tag TO innovaedu;


--
-- Name: mdl_tag_correlation; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tag_correlation FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tag_correlation FROM innovaedu;
GRANT ALL ON TABLE mdl_tag_correlation TO innovaedu;


--
-- Name: mdl_tag_correlation_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tag_correlation_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tag_correlation_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tag_correlation_id_seq TO innovaedu;


--
-- Name: mdl_tag_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tag_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tag_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tag_id_seq TO innovaedu;


--
-- Name: mdl_tag_instance; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tag_instance FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tag_instance FROM innovaedu;
GRANT ALL ON TABLE mdl_tag_instance TO innovaedu;


--
-- Name: mdl_tag_instance_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tag_instance_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tag_instance_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tag_instance_id_seq TO innovaedu;


--
-- Name: mdl_tags_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tags_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tags_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tags_id_seq TO innovaedu;


--
-- Name: mdl_temp_enroled_template; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_temp_enroled_template FROM PUBLIC;
REVOKE ALL ON TABLE mdl_temp_enroled_template FROM innovaedu;
GRANT ALL ON TABLE mdl_temp_enroled_template TO innovaedu;


--
-- Name: mdl_temp_enroled_template_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_temp_enroled_template_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_temp_enroled_template_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_temp_enroled_template_id_seq TO innovaedu;


--
-- Name: mdl_temp_log_template; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_temp_log_template FROM PUBLIC;
REVOKE ALL ON TABLE mdl_temp_log_template FROM innovaedu;
GRANT ALL ON TABLE mdl_temp_log_template TO innovaedu;


--
-- Name: mdl_temp_log_template_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_temp_log_template_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_temp_log_template_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_temp_log_template_id_seq TO innovaedu;


--
-- Name: mdl_temporary_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_temporary_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_temporary_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_temporary_id_seq TO innovaedu;


--
-- Name: mdl_timezone_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_timezone_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_timezone_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_timezone_id_seq TO innovaedu;


--
-- Name: mdl_timezone; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_timezone FROM PUBLIC;
REVOKE ALL ON TABLE mdl_timezone FROM innovaedu;
GRANT ALL ON TABLE mdl_timezone TO innovaedu;


--
-- Name: mdl_tmp_user; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tmp_user FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tmp_user FROM innovaedu;
GRANT ALL ON TABLE mdl_tmp_user TO innovaedu;


--
-- Name: mdl_tmpaero; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tmpaero FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tmpaero FROM innovaedu;
GRANT ALL ON TABLE mdl_tmpaero TO innovaedu;


--
-- Name: mdl_tmpaero_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tmpaero_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tmpaero_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tmpaero_id_seq TO innovaedu;


--
-- Name: mdl_tool_customlang; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tool_customlang FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tool_customlang FROM innovaedu;
GRANT ALL ON TABLE mdl_tool_customlang TO innovaedu;


--
-- Name: mdl_tool_customlang_components; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tool_customlang_components FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tool_customlang_components FROM innovaedu;
GRANT ALL ON TABLE mdl_tool_customlang_components TO innovaedu;


--
-- Name: mdl_tool_customlang_components_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tool_customlang_components_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tool_customlang_components_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tool_customlang_components_id_seq TO innovaedu;


--
-- Name: mdl_tool_customlang_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tool_customlang_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tool_customlang_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tool_customlang_id_seq TO innovaedu;


--
-- Name: mdl_upgrade_log; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_upgrade_log FROM PUBLIC;
REVOKE ALL ON TABLE mdl_upgrade_log FROM innovaedu;
GRANT ALL ON TABLE mdl_upgrade_log TO innovaedu;


--
-- Name: mdl_upgrade_log_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_upgrade_log_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_upgrade_log_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_upgrade_log_id_seq TO innovaedu;


--
-- Name: mdl_url; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_url FROM PUBLIC;
REVOKE ALL ON TABLE mdl_url FROM innovaedu;
GRANT ALL ON TABLE mdl_url TO innovaedu;


--
-- Name: mdl_url_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_url_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_url_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_url_id_seq TO innovaedu;


--
-- Name: mdl_user_enrolments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_enrolments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_enrolments FROM innovaedu;
GRANT ALL ON TABLE mdl_user_enrolments TO innovaedu;


--
-- Name: mdl_user_enrolments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_enrolments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_enrolments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_enrolments_id_seq TO innovaedu;


--
-- Name: mdl_user_info_category_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_info_category_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_info_category_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_info_category_id_seq TO innovaedu;


--
-- Name: mdl_user_info_category; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_info_category FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_info_category FROM innovaedu;
GRANT ALL ON TABLE mdl_user_info_category TO innovaedu;


--
-- Name: mdl_user_info_data_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_info_data_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_info_data_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_info_data_id_seq TO innovaedu;


--
-- Name: mdl_user_info_data; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_info_data FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_info_data FROM innovaedu;
GRANT ALL ON TABLE mdl_user_info_data TO innovaedu;


--
-- Name: mdl_user_info_field_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_info_field_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_info_field_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_info_field_id_seq TO innovaedu;


--
-- Name: mdl_user_info_field; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_info_field FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_info_field FROM innovaedu;
GRANT ALL ON TABLE mdl_user_info_field TO innovaedu;


--
-- Name: mdl_user_preferences_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_preferences_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_preferences_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_preferences_id_seq TO innovaedu;


--
-- Name: mdl_user_preferences; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_preferences FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_preferences FROM innovaedu;
GRANT ALL ON TABLE mdl_user_preferences TO innovaedu;


--
-- Name: mdl_user_private_key; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_user_private_key FROM PUBLIC;
REVOKE ALL ON TABLE mdl_user_private_key FROM innovaedu;
GRANT ALL ON TABLE mdl_user_private_key TO innovaedu;


--
-- Name: mdl_user_private_key_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_user_private_key_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_user_private_key_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_user_private_key_id_seq TO innovaedu;


--
-- Name: mdl_webdav_locks; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_webdav_locks FROM PUBLIC;
REVOKE ALL ON TABLE mdl_webdav_locks FROM innovaedu;
GRANT ALL ON TABLE mdl_webdav_locks TO innovaedu;


--
-- Name: mdl_webdav_locks_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_webdav_locks_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_webdav_locks_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_webdav_locks_id_seq TO innovaedu;


--
-- Name: mdl_wiki_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_id_seq TO innovaedu;


--
-- Name: mdl_wiki; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki TO innovaedu;


--
-- Name: mdl_wiki_entries_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_entries_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_entries_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_entries_old_id_seq TO innovaedu;


--
-- Name: mdl_wiki_links; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_links FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_links FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_links TO innovaedu;


--
-- Name: mdl_wiki_links_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_links_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_links_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_links_id_seq TO innovaedu;


--
-- Name: mdl_wiki_locks; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_locks FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_locks FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_locks TO innovaedu;


--
-- Name: mdl_wiki_locks_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_locks_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_locks_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_locks_id_seq TO innovaedu;


--
-- Name: mdl_wiki_locks_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_locks_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_locks_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_locks_old_id_seq TO innovaedu;


--
-- Name: mdl_wiki_pages; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_pages FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_pages FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_pages TO innovaedu;


--
-- Name: mdl_wiki_pages_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_pages_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_pages_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_pages_id_seq TO innovaedu;


--
-- Name: mdl_wiki_pages_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_pages_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_pages_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_pages_old_id_seq TO innovaedu;


--
-- Name: mdl_wiki_subwikis; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_subwikis FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_subwikis FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_subwikis TO innovaedu;


--
-- Name: mdl_wiki_subwikis_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_subwikis_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_subwikis_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_subwikis_id_seq TO innovaedu;


--
-- Name: mdl_wiki_synonyms; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_synonyms FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_synonyms FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_synonyms TO innovaedu;


--
-- Name: mdl_wiki_synonyms_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_synonyms_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_synonyms_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_synonyms_id_seq TO innovaedu;


--
-- Name: mdl_wiki_versions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_wiki_versions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_wiki_versions FROM innovaedu;
GRANT ALL ON TABLE mdl_wiki_versions TO innovaedu;


--
-- Name: mdl_wiki_versions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_wiki_versions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_wiki_versions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_wiki_versions_id_seq TO innovaedu;


--
-- Name: mdl_workshop; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop TO innovaedu;


--
-- Name: mdl_workshop_aggregations; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_aggregations FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_aggregations FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_aggregations TO innovaedu;


--
-- Name: mdl_workshop_aggregations_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_aggregations_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_aggregations_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_aggregations_id_seq TO innovaedu;


--
-- Name: mdl_workshop_assessments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_assessments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_assessments FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_assessments TO innovaedu;


--
-- Name: mdl_workshop_assessments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_assessments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_assessments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_assessments_id_seq TO innovaedu;


--
-- Name: mdl_workshop_assessments_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_assessments_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_assessments_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_assessments_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_assessments_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_assessments_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_assessments_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_assessments_old TO innovaedu;


--
-- Name: mdl_workshop_comments_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_comments_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_comments_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_comments_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_comments_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_comments_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_comments_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_comments_old TO innovaedu;


--
-- Name: mdl_workshop_elements_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_elements_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_elements_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_elements_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_elements_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_elements_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_elements_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_elements_old TO innovaedu;


--
-- Name: mdl_workshop_grades; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_grades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_grades FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_grades TO innovaedu;


--
-- Name: mdl_workshop_grades_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_grades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_grades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_grades_id_seq TO innovaedu;


--
-- Name: mdl_workshop_grades_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_grades_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_grades_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_grades_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_grades_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_grades_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_grades_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_grades_old TO innovaedu;


--
-- Name: mdl_workshop_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_id_seq TO innovaedu;


--
-- Name: mdl_workshop_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_old TO innovaedu;


--
-- Name: mdl_workshop_rubrics_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_rubrics_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_rubrics_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_rubrics_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_rubrics_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_rubrics_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_rubrics_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_rubrics_old TO innovaedu;


--
-- Name: mdl_workshop_stockcomments_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_stockcomments_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_stockcomments_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_stockcomments_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_stockcomments_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_stockcomments_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_stockcomments_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_stockcomments_old TO innovaedu;


--
-- Name: mdl_workshop_submissions; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_submissions FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_submissions FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_submissions TO innovaedu;


--
-- Name: mdl_workshop_submissions_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_submissions_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_submissions_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_submissions_id_seq TO innovaedu;


--
-- Name: mdl_workshop_submissions_old_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshop_submissions_old_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshop_submissions_old_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshop_submissions_old_id_seq TO innovaedu;


--
-- Name: mdl_workshop_submissions_old; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshop_submissions_old FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshop_submissions_old FROM innovaedu;
GRANT ALL ON TABLE mdl_workshop_submissions_old TO innovaedu;


--
-- Name: mdl_workshopallocation_scheduled; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopallocation_scheduled FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopallocation_scheduled FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopallocation_scheduled TO innovaedu;


--
-- Name: mdl_workshopallocation_scheduled_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopallocation_scheduled_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopallocation_scheduled_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopallocation_scheduled_id_seq TO innovaedu;


--
-- Name: mdl_workshopeval_best_settings; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopeval_best_settings FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopeval_best_settings FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopeval_best_settings TO innovaedu;


--
-- Name: mdl_workshopeval_best_settings_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopeval_best_settings_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopeval_best_settings_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopeval_best_settings_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_accumulative; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_accumulative FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_accumulative FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_accumulative TO innovaedu;


--
-- Name: mdl_workshopform_accumulative_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_accumulative_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_accumulative_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_accumulative_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_comments; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_comments FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_comments FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_comments TO innovaedu;


--
-- Name: mdl_workshopform_comments_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_comments_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_comments_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_comments_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_numerrors; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_numerrors FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_numerrors FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_numerrors TO innovaedu;


--
-- Name: mdl_workshopform_numerrors_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_numerrors_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_numerrors_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_numerrors_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_numerrors_map; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_numerrors_map FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_numerrors_map FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_numerrors_map TO innovaedu;


--
-- Name: mdl_workshopform_numerrors_map_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_numerrors_map_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_numerrors_map_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_numerrors_map_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_rubric; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_rubric FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_rubric FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_rubric TO innovaedu;


--
-- Name: mdl_workshopform_rubric_config; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_rubric_config FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_rubric_config FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_rubric_config TO innovaedu;


--
-- Name: mdl_workshopform_rubric_config_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_config_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_config_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_rubric_config_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_rubric_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_rubric_id_seq TO innovaedu;


--
-- Name: mdl_workshopform_rubric_levels; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_workshopform_rubric_levels FROM PUBLIC;
REVOKE ALL ON TABLE mdl_workshopform_rubric_levels FROM innovaedu;
GRANT ALL ON TABLE mdl_workshopform_rubric_levels TO innovaedu;


--
-- Name: mdl_workshopform_rubric_levels_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_levels_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_workshopform_rubric_levels_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_workshopform_rubric_levels_id_seq TO innovaedu;


--
-- Name: nom_catdeptodel; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE nom_catdeptodel FROM PUBLIC;
REVOKE ALL ON TABLE nom_catdeptodel FROM innovaedu;
GRANT ALL ON TABLE nom_catdeptodel TO innovaedu;


--
-- Name: nom_catdeptodel_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE nom_catdeptodel_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE nom_catdeptodel_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE nom_catdeptodel_id_seq TO innovaedu;


--
-- Name: nom_clvdepartemento2; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE nom_clvdepartemento2 FROM PUBLIC;
REVOKE ALL ON TABLE nom_clvdepartemento2 FROM innovaedu;
GRANT ALL ON TABLE nom_clvdepartemento2 TO innovaedu;


--
-- Name: nom_clvdepartemento2_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE nom_clvdepartemento2_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE nom_clvdepartemento2_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE nom_clvdepartemento2_id_seq TO innovaedu;


--
-- Name: nom_clvdepartementoplus; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON TABLE nom_clvdepartementoplus FROM PUBLIC;
REVOKE ALL ON TABLE nom_clvdepartementoplus FROM innovaedu;
GRANT ALL ON TABLE nom_clvdepartementoplus TO innovaedu;


--
-- Name: nom_clvdepartementoplus_id_seq; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE nom_clvdepartementoplus_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE nom_clvdepartementoplus_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE nom_clvdepartementoplus_id_seq TO innovaedu;


--
-- Name: sied_ssd_sq_unidad_atencion; Type: ACL; Schema: public; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE sied_ssd_sq_unidad_atencion FROM PUBLIC;
REVOKE ALL ON SEQUENCE sied_ssd_sq_unidad_atencion FROM innovaedu;
GRANT ALL ON SEQUENCE sied_ssd_sq_unidad_atencion TO innovaedu;


SET search_path = tutorias, pg_catalog;

--
-- Name: mdl_cargo; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cargo FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cargo FROM innovaedu;
GRANT ALL ON TABLE mdl_cargo TO innovaedu;


--
-- Name: mdl_carreras; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_carreras FROM PUBLIC;
REVOKE ALL ON TABLE mdl_carreras FROM innovaedu;
GRANT ALL ON TABLE mdl_carreras TO innovaedu;


--
-- Name: mdl_carreras_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_carreras_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_carreras_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_carreras_id_seq TO innovaedu;


--
-- Name: mdl_cateva; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_cateva FROM PUBLIC;
REVOKE ALL ON TABLE mdl_cateva FROM innovaedu;
GRANT ALL ON TABLE mdl_cateva TO innovaedu;


--
-- Name: mdl_cateva_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_cateva_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_cateva_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_cateva_id_seq TO innovaedu;


--
-- Name: mdl_detusertutor; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_detusertutor FROM PUBLIC;
REVOKE ALL ON TABLE mdl_detusertutor FROM innovaedu;
GRANT ALL ON TABLE mdl_detusertutor TO innovaedu;


--
-- Name: mdl_especialidades; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_especialidades FROM PUBLIC;
REVOKE ALL ON TABLE mdl_especialidades FROM innovaedu;
GRANT ALL ON TABLE mdl_especialidades TO innovaedu;


--
-- Name: mdl_especialidades_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_especialidades_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_especialidades_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_especialidades_id_seq TO innovaedu;


--
-- Name: mdl_estudios; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_estudios FROM PUBLIC;
REVOKE ALL ON TABLE mdl_estudios FROM innovaedu;
GRANT ALL ON TABLE mdl_estudios TO innovaedu;


--
-- Name: mdl_estudios_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_estudios_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_estudios_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_estudios_id_seq TO innovaedu;


--
-- Name: mdl_evaluar; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_evaluar FROM PUBLIC;
REVOKE ALL ON TABLE mdl_evaluar FROM innovaedu;
GRANT ALL ON TABLE mdl_evaluar TO innovaedu;


--
-- Name: mdl_evaluar_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_evaluar_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_evaluar_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_evaluar_id_seq TO innovaedu;


--
-- Name: mdl_evatutor; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_evatutor FROM PUBLIC;
REVOKE ALL ON TABLE mdl_evatutor FROM innovaedu;
GRANT ALL ON TABLE mdl_evatutor TO innovaedu;


--
-- Name: mdl_formacion; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_formacion FROM PUBLIC;
REVOKE ALL ON TABLE mdl_formacion FROM innovaedu;
GRANT ALL ON TABLE mdl_formacion TO innovaedu;


--
-- Name: mdl_instrumento; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_instrumento FROM PUBLIC;
REVOKE ALL ON TABLE mdl_instrumento FROM innovaedu;
GRANT ALL ON TABLE mdl_instrumento TO innovaedu;


--
-- Name: mdl_instrumento_habilidad; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_instrumento_habilidad FROM PUBLIC;
REVOKE ALL ON TABLE mdl_instrumento_habilidad FROM innovaedu;
GRANT ALL ON TABLE mdl_instrumento_habilidad TO innovaedu;


--
-- Name: mdl_instrumento_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_instrumento_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_instrumento_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_instrumento_id_seq TO innovaedu;


--
-- Name: mdl_preguntas; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_preguntas FROM PUBLIC;
REVOKE ALL ON TABLE mdl_preguntas FROM innovaedu;
GRANT ALL ON TABLE mdl_preguntas TO innovaedu;


--
-- Name: mdl_preguntas_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_preguntas_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_preguntas_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_preguntas_id_seq TO innovaedu;


--
-- Name: mdl_profesion; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_profesion FROM PUBLIC;
REVOKE ALL ON TABLE mdl_profesion FROM innovaedu;
GRANT ALL ON TABLE mdl_profesion TO innovaedu;


--
-- Name: mdl_propuesta; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_propuesta FROM PUBLIC;
REVOKE ALL ON TABLE mdl_propuesta FROM innovaedu;
GRANT ALL ON TABLE mdl_propuesta TO innovaedu;


--
-- Name: mdl_residentes; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_residentes FROM PUBLIC;
REVOKE ALL ON TABLE mdl_residentes FROM innovaedu;
GRANT ALL ON TABLE mdl_residentes TO innovaedu;


--
-- Name: mdl_respuestas; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_respuestas FROM PUBLIC;
REVOKE ALL ON TABLE mdl_respuestas FROM innovaedu;
GRANT ALL ON TABLE mdl_respuestas TO innovaedu;


--
-- Name: mdl_respuestas_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_respuestas_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_respuestas_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_respuestas_id_seq TO innovaedu;


--
-- Name: mdl_tipoeva; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE mdl_tipoeva FROM PUBLIC;
REVOKE ALL ON TABLE mdl_tipoeva FROM innovaedu;
GRANT ALL ON TABLE mdl_tipoeva TO innovaedu;


--
-- Name: mdl_tipoeva_id_seq; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON SEQUENCE mdl_tipoeva_id_seq FROM PUBLIC;
REVOKE ALL ON SEQUENCE mdl_tipoeva_id_seq FROM innovaedu;
GRANT ALL ON SEQUENCE mdl_tipoeva_id_seq TO innovaedu;


--
-- Name: v_listado_tutores; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_listado_tutores FROM PUBLIC;
REVOKE ALL ON TABLE v_listado_tutores FROM innovaedu;
GRANT ALL ON TABLE v_listado_tutores TO innovaedu;


--
-- Name: v_rpt_accesos; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_accesos FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_accesos FROM innovaedu;
GRANT ALL ON TABLE v_rpt_accesos TO innovaedu;


--
-- Name: v_rpt_alumnos_insc_act; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_alumnos_insc_act FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_alumnos_insc_act FROM innovaedu;
GRANT ALL ON TABLE v_rpt_alumnos_insc_act TO innovaedu;


--
-- Name: v_rpt_count_alumnos; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_count_alumnos FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_count_alumnos FROM innovaedu;
GRANT ALL ON TABLE v_rpt_count_alumnos TO innovaedu;


--
-- Name: v_rpt_curso_enroles; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_curso_enroles FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_curso_enroles FROM innovaedu;
GRANT ALL ON TABLE v_rpt_curso_enroles TO innovaedu;


--
-- Name: v_rpt_curso_enroles_norm; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_curso_enroles_norm FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_curso_enroles_norm FROM innovaedu;
GRANT ALL ON TABLE v_rpt_curso_enroles_norm TO innovaedu;


--
-- Name: v_rpt_roles_masivo; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_roles_masivo FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_roles_masivo FROM innovaedu;
GRANT ALL ON TABLE v_rpt_roles_masivo TO innovaedu;


--
-- Name: v_rpt_user_propuesta; Type: ACL; Schema: tutorias; Owner: innovaedu
--

REVOKE ALL ON TABLE v_rpt_user_propuesta FROM PUBLIC;
REVOKE ALL ON TABLE v_rpt_user_propuesta FROM innovaedu;
GRANT ALL ON TABLE v_rpt_user_propuesta TO innovaedu;


--
-- PostgreSQL database dump complete
--

